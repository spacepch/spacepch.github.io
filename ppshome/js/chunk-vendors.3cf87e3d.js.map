{"version":3,"file":"js/chunk-vendors.3cf87e3d.js","mappings":"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","sources":["webpack://ppshome/./node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js","webpack://ppshome/./node_modules/core-js/internals/a-callable.js","webpack://ppshome/./node_modules/core-js/internals/an-object.js","webpack://ppshome/./node_modules/core-js/internals/array-includes.js","webpack://ppshome/./node_modules/core-js/internals/array-set-length.js","webpack://ppshome/./node_modules/core-js/internals/classof-raw.js","webpack://ppshome/./node_modules/core-js/internals/copy-constructor-properties.js","webpack://ppshome/./node_modules/core-js/internals/create-non-enumerable-property.js","webpack://ppshome/./node_modules/core-js/internals/create-property-descriptor.js","webpack://ppshome/./node_modules/core-js/internals/define-built-in.js","webpack://ppshome/./node_modules/core-js/internals/define-global-property.js","webpack://ppshome/./node_modules/core-js/internals/descriptors.js","webpack://ppshome/./node_modules/core-js/internals/document-all.js","webpack://ppshome/./node_modules/core-js/internals/document-create-element.js","webpack://ppshome/./node_modules/core-js/internals/does-not-exceed-safe-integer.js","webpack://ppshome/./node_modules/core-js/internals/engine-user-agent.js","webpack://ppshome/./node_modules/core-js/internals/engine-v8-version.js","webpack://ppshome/./node_modules/core-js/internals/enum-bug-keys.js","webpack://ppshome/./node_modules/core-js/internals/export.js","webpack://ppshome/./node_modules/core-js/internals/fails.js","webpack://ppshome/./node_modules/core-js/internals/function-bind-native.js","webpack://ppshome/./node_modules/core-js/internals/function-call.js","webpack://ppshome/./node_modules/core-js/internals/function-name.js","webpack://ppshome/./node_modules/core-js/internals/function-uncurry-this.js","webpack://ppshome/./node_modules/core-js/internals/get-built-in.js","webpack://ppshome/./node_modules/core-js/internals/get-method.js","webpack://ppshome/./node_modules/core-js/internals/global.js","webpack://ppshome/./node_modules/core-js/internals/has-own-property.js","webpack://ppshome/./node_modules/core-js/internals/hidden-keys.js","webpack://ppshome/./node_modules/core-js/internals/ie8-dom-define.js","webpack://ppshome/./node_modules/core-js/internals/indexed-object.js","webpack://ppshome/./node_modules/core-js/internals/inspect-source.js","webpack://ppshome/./node_modules/core-js/internals/internal-state.js","webpack://ppshome/./node_modules/core-js/internals/is-array.js","webpack://ppshome/./node_modules/core-js/internals/is-callable.js","webpack://ppshome/./node_modules/core-js/internals/is-forced.js","webpack://ppshome/./node_modules/core-js/internals/is-null-or-undefined.js","webpack://ppshome/./node_modules/core-js/internals/is-object.js","webpack://ppshome/./node_modules/core-js/internals/is-pure.js","webpack://ppshome/./node_modules/core-js/internals/is-symbol.js","webpack://ppshome/./node_modules/core-js/internals/length-of-array-like.js","webpack://ppshome/./node_modules/core-js/internals/make-built-in.js","webpack://ppshome/./node_modules/core-js/internals/math-trunc.js","webpack://ppshome/./node_modules/core-js/internals/object-define-property.js","webpack://ppshome/./node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack://ppshome/./node_modules/core-js/internals/object-get-own-property-names.js","webpack://ppshome/./node_modules/core-js/internals/object-get-own-property-symbols.js","webpack://ppshome/./node_modules/core-js/internals/object-is-prototype-of.js","webpack://ppshome/./node_modules/core-js/internals/object-keys-internal.js","webpack://ppshome/./node_modules/core-js/internals/object-property-is-enumerable.js","webpack://ppshome/./node_modules/core-js/internals/ordinary-to-primitive.js","webpack://ppshome/./node_modules/core-js/internals/own-keys.js","webpack://ppshome/./node_modules/core-js/internals/require-object-coercible.js","webpack://ppshome/./node_modules/core-js/internals/shared-key.js","webpack://ppshome/./node_modules/core-js/internals/shared-store.js","webpack://ppshome/./node_modules/core-js/internals/shared.js","webpack://ppshome/./node_modules/core-js/internals/symbol-constructor-detection.js","webpack://ppshome/./node_modules/core-js/internals/to-absolute-index.js","webpack://ppshome/./node_modules/core-js/internals/to-indexed-object.js","webpack://ppshome/./node_modules/core-js/internals/to-integer-or-infinity.js","webpack://ppshome/./node_modules/core-js/internals/to-length.js","webpack://ppshome/./node_modules/core-js/internals/to-object.js","webpack://ppshome/./node_modules/core-js/internals/to-primitive.js","webpack://ppshome/./node_modules/core-js/internals/to-property-key.js","webpack://ppshome/./node_modules/core-js/internals/try-to-string.js","webpack://ppshome/./node_modules/core-js/internals/uid.js","webpack://ppshome/./node_modules/core-js/internals/use-symbol-as-uid.js","webpack://ppshome/./node_modules/core-js/internals/v8-prototype-define-bug.js","webpack://ppshome/./node_modules/core-js/internals/weak-map-basic-detection.js","webpack://ppshome/./node_modules/core-js/internals/well-known-symbol.js","webpack://ppshome/./node_modules/core-js/modules/es.array.push.js","webpack://ppshome/./node_modules/less/dist/less.js"],"sourcesContent":["/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent(\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */,\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options =\n    typeof scriptExports === 'function' ? scriptExports.options : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) {\n    // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n          injectStyles.call(\n            this,\n            (options.functional ? this.parent : this).$root.$options.shadowRoot\n          )\n        }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection(h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","var isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw $TypeError(tryToString(argument) + ' is not a function');\n};\n","var isObject = require('../internals/is-object');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw $TypeError($String(argument) + ' is not an object');\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar isArray = require('../internals/is-array');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Safari < 13 does not throw an error in this case\nvar SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS && !function () {\n  // makes no sense without proper strict mode support\n  if (this !== undefined) return true;\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).length = 1;\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n}();\n\nmodule.exports = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function (O, length) {\n  if (isArray(O) && !getOwnPropertyDescriptor(O, 'length').writable) {\n    throw $TypeError('Cannot set read only .length');\n  } return O.length = length;\n} : function (O, length) {\n  return O.length = length;\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};\n","var hasOwn = require('../internals/has-own-property');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source, exceptions) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {\n      defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n    }\n  }\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var isCallable = require('../internals/is-callable');\nvar definePropertyModule = require('../internals/object-define-property');\nvar makeBuiltIn = require('../internals/make-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nmodule.exports = function (O, key, value, options) {\n  if (!options) options = {};\n  var simple = options.enumerable;\n  var name = options.name !== undefined ? options.name : key;\n  if (isCallable(value)) makeBuiltIn(value, name, options);\n  if (options.global) {\n    if (simple) O[key] = value;\n    else defineGlobalProperty(key, value);\n  } else {\n    try {\n      if (!options.unsafe) delete O[key];\n      else if (O[key]) simple = true;\n    } catch (error) { /* empty */ }\n    if (simple) O[key] = value;\n    else definePropertyModule.f(O, key, {\n      value: value,\n      enumerable: false,\n      configurable: !options.nonConfigurable,\n      writable: !options.nonWritable\n    });\n  } return O;\n};\n","var global = require('../internals/global');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(global, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","var fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","var documentAll = typeof document == 'object' && document.all;\n\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\n// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing\nvar IS_HTMLDDA = typeof documentAll == 'undefined' && documentAll !== undefined;\n\nmodule.exports = {\n  all: documentAll,\n  IS_HTMLDDA: IS_HTMLDDA\n};\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var $TypeError = TypeError;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991\n\nmodule.exports = function (it) {\n  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');\n  return it;\n};\n","module.exports = typeof navigator != 'undefined' && String(navigator.userAgent) || '';\n","var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || defineGlobalProperty(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty == typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    defineBuiltIn(target, key, sourceProperty, options);\n  }\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar hasOwn = require('../internals/has-own-property');\n\nvar FunctionPrototype = Function.prototype;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\n\nvar EXISTS = hasOwn(FunctionPrototype, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));\n\nmodule.exports = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar call = FunctionPrototype.call;\nvar uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {\n  return function () {\n    return call.apply(fn, arguments);\n  };\n};\n","var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar aFunction = function (argument) {\n  return isCallable(argument) ? argument : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];\n};\n","var aCallable = require('../internals/a-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return isNullOrUndefined(func) ? undefined : aCallable(func);\n};\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || this || Function('return this')();\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n","module.exports = {};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar $Object = Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split(it, '') : $Object(it);\n} : $Object;\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar store = require('../internals/shared-store');\n\nvar functionToString = uncurryThis(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","var NATIVE_WEAK_MAP = require('../internals/weak-map-basic-detection');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar TypeError = global.TypeError;\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  /* eslint-disable no-self-assign -- prototype methods protection */\n  store.get = store.get;\n  store.has = store.has;\n  store.set = store.set;\n  /* eslint-enable no-self-assign -- prototype methods protection */\n  set = function (it, metadata) {\n    if (store.has(it)) throw TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    store.set(it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return store.get(it) || {};\n  };\n  has = function (it) {\n    return store.has(it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (hasOwn(it, STATE)) throw TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) == 'Array';\n};\n","var $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\n// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\nmodule.exports = $documentAll.IS_HTMLDDA ? function (argument) {\n  return typeof argument == 'function' || argument === documentAll;\n} : function (argument) {\n  return typeof argument == 'function';\n};\n","var fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : isCallable(detection) ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","// we can't use just `it == null` since of `document.all` special case\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec\nmodule.exports = function (it) {\n  return it === null || it === undefined;\n};\n","var isCallable = require('../internals/is-callable');\nvar $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\nmodule.exports = $documentAll.IS_HTMLDDA ? function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it) || it === documentAll;\n} : function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n","module.exports = false;\n","var getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar $Object = Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));\n};\n","var toLength = require('../internals/to-length');\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar hasOwn = require('../internals/has-own-property');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar CONFIGURABLE_FUNCTION_NAME = require('../internals/function-name').CONFIGURABLE;\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar enforceInternalState = InternalStateModule.enforce;\nvar getInternalState = InternalStateModule.get;\nvar $String = String;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\nvar stringSlice = uncurryThis(''.slice);\nvar replace = uncurryThis(''.replace);\nvar join = uncurryThis([].join);\n\nvar CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {\n  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;\n});\n\nvar TEMPLATE = String(String).split('String');\n\nvar makeBuiltIn = module.exports = function (value, name, options) {\n  if (stringSlice($String(name), 0, 7) === 'Symbol(') {\n    name = '[' + replace($String(name), /^Symbol\\(([^)]*)\\)/, '$1') + ']';\n  }\n  if (options && options.getter) name = 'get ' + name;\n  if (options && options.setter) name = 'set ' + name;\n  if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {\n    if (DESCRIPTORS) defineProperty(value, 'name', { value: name, configurable: true });\n    else value.name = name;\n  }\n  if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {\n    defineProperty(value, 'length', { value: options.arity });\n  }\n  try {\n    if (options && hasOwn(options, 'constructor') && options.constructor) {\n      if (DESCRIPTORS) defineProperty(value, 'prototype', { writable: false });\n    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable\n    } else if (value.prototype) value.prototype = undefined;\n  } catch (error) { /* empty */ }\n  var state = enforceInternalState(value);\n  if (!hasOwn(state, 'source')) {\n    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');\n  } return value;\n};\n\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n// eslint-disable-next-line no-extend-native -- required\nFunction.prototype.toString = makeBuiltIn(function toString() {\n  return isCallable(this) && getInternalState(this).source || inspectSource(this);\n}, 'toString');\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n// eslint-disable-next-line es/no-math-trunc -- safe\nmodule.exports = Math.trunc || function trunc(x) {\n  var n = +x;\n  return (n > 0 ? floor : ceil)(n);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw $TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar call = require('../internals/function-call');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar hasOwn = require('../internals/has-own-property');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar hasOwn = require('../internals/has-own-property');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (hasOwn(O, key = names[i++])) {\n    ~indexOf(result, key) || push(result, key);\n  }\n  return result;\n};\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","var call = require('../internals/function-call');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar $TypeError = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw $TypeError(\"Can't convert object to primitive value\");\n};\n","var getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\nvar concat = uncurryThis([].concat);\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;\n};\n","var isNullOrUndefined = require('../internals/is-null-or-undefined');\n\nvar $TypeError = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (isNullOrUndefined(it)) throw $TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","var global = require('../internals/global');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || defineGlobalProperty(SHARED, {});\n\nmodule.exports = store;\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.31.1',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.31.1/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n","/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\nvar global = require('../internals/global');\n\nvar $String = global.String;\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol();\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,\n  // of course, fail.\n  return !$String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","var trunc = require('../internals/math-trunc');\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return number !== number || number === 0 ? 0 : trunc(number);\n};\n","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar $Object = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return $Object(requireObjectCoercible(argument));\n};\n","var call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw $TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n","var toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n","var $String = String;\n\nmodule.exports = function (argument) {\n  try {\n    return $String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n","/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype != 42;\n});\n","var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar Symbol = global.Symbol;\nvar WellKnownSymbolsStore = shared('wks');\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name)) {\n    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)\n      ? Symbol[name]\n      : createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar setArrayLength = require('../internals/array-set-length');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\nvar fails = require('../internals/fails');\n\nvar INCORRECT_TO_LENGTH = fails(function () {\n  return [].push.call({ length: 0x100000000 }, 1) !== 4294967297;\n});\n\n// V8 and Safari <= 15.4, FF < 23 throws InternalError\n// https://bugs.chromium.org/p/v8/issues/detail?id=12681\nvar properErrorOnNonWritableLength = function () {\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).push();\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n};\n\nvar FORCED = INCORRECT_TO_LENGTH || !properErrorOnNonWritableLength();\n\n// `Array.prototype.push` method\n// https://tc39.es/ecma262/#sec-array.prototype.push\n$({ target: 'Array', proto: true, arity: 1, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  push: function push(item) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var argCount = arguments.length;\n    doesNotExceedSafeInteger(len + argCount);\n    for (var i = 0; i < argCount; i++) {\n      O[len] = arguments[i];\n      len++;\n    }\n    setArrayLength(O, len);\n    return len;\n  }\n});\n","/**\n * Less - Leaner CSS v4.1.3\n * http://lesscss.org\n * \n * Copyright (c) 2009-2022, Alexis Sellier <self@cloudhead.net>\n * Licensed under the Apache-2.0 License.\n *\n * @license Apache-2.0\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.less = factory());\n}(this, (function () { 'use strict';\n\n    // Export a new default each time\r\n    function defaultOptions () {\r\n        return {\r\n            /* Inline Javascript - @plugin still allowed */\r\n            javascriptEnabled: false,\r\n            /* Outputs a makefile import dependency list to stdout. */\r\n            depends: false,\r\n            /* (DEPRECATED) Compress using less built-in compression.\r\n             * This does an okay job but does not utilise all the tricks of\r\n             * dedicated css compression. */\r\n            compress: false,\r\n            /* Runs the less parser and just reports errors without any output. */\r\n            lint: false,\r\n            /* Sets available include paths.\r\n             * If the file in an @import rule does not exist at that exact location,\r\n             * less will look for it at the location(s) passed to this option.\r\n             * You might use this for instance to specify a path to a library which\r\n             * you want to be referenced simply and relatively in the less files. */\r\n            paths: [],\r\n            /* color output in the terminal */\r\n            color: true,\r\n            /* The strictImports controls whether the compiler will allow an @import inside of either\r\n             * @media blocks or (a later addition) other selector blocks.\r\n             * See: https://github.com/less/less.js/issues/656 */\r\n            strictImports: false,\r\n            /* Allow Imports from Insecure HTTPS Hosts */\r\n            insecure: false,\r\n            /* Allows you to add a path to every generated import and url in your css.\r\n             * This does not affect less import statements that are processed, just ones\r\n             * that are left in the output css. */\r\n            rootpath: '',\r\n            /* By default URLs are kept as-is, so if you import a file in a sub-directory\r\n             * that references an image, exactly the same URL will be output in the css.\r\n             * This option allows you to re-write URL's in imported files so that the\r\n             * URL is always relative to the base imported file */\r\n            rewriteUrls: false,\r\n            /* How to process math\r\n             *   0 always           - eagerly try to solve all operations\r\n             *   1 parens-division  - require parens for division \"/\"\r\n             *   2 parens | strict  - require parens for all operations\r\n             *   3 strict-legacy    - legacy strict behavior (super-strict)\r\n             */\r\n            math: 1,\r\n            /* Without this option, less attempts to guess at the output unit when it does maths. */\r\n            strictUnits: false,\r\n            /* Effectively the declaration is put at the top of your base Less file,\r\n             * meaning it can be used but it also can be overridden if this variable\r\n             * is defined in the file. */\r\n            globalVars: null,\r\n            /* As opposed to the global variable option, this puts the declaration at the\r\n             * end of your base file, meaning it will override anything defined in your Less file. */\r\n            modifyVars: null,\r\n            /* This option allows you to specify a argument to go on to every URL.  */\r\n            urlArgs: ''\r\n        };\r\n    }\n\n    function extractId(href) {\r\n        return href.replace(/^[a-z-]+:\\/+?[^\\/]+/, '') // Remove protocol & domain\r\n            .replace(/[\\?\\&]livereload=\\w+/, '') // Remove LiveReload cachebuster\r\n            .replace(/^\\//, '') // Remove root /\r\n            .replace(/\\.[a-zA-Z]+$/, '') // Remove simple extension\r\n            .replace(/[^\\.\\w-]+/g, '-') // Replace illegal characters\r\n            .replace(/\\./g, ':'); // Replace dots with colons(for valid id)\r\n    }\r\n    function addDataAttr(options, tag) {\r\n        if (!tag) {\r\n            return;\r\n        } // in case of tag is null or undefined\r\n        for (var opt in tag.dataset) {\r\n            if (tag.dataset.hasOwnProperty(opt)) {\r\n                if (opt === 'env' || opt === 'dumpLineNumbers' || opt === 'rootpath' || opt === 'errorReporting') {\r\n                    options[opt] = tag.dataset[opt];\r\n                }\r\n                else {\r\n                    try {\r\n                        options[opt] = JSON.parse(tag.dataset[opt]);\r\n                    }\r\n                    catch (_) { }\r\n                }\r\n            }\r\n        }\r\n    }\n\n    var browser = {\r\n        createCSS: function (document, styles, sheet) {\r\n            // Strip the query-string\r\n            var href = sheet.href || '';\r\n            // If there is no title set, use the filename, minus the extension\r\n            var id = \"less:\" + (sheet.title || extractId(href));\r\n            // If this has already been inserted into the DOM, we may need to replace it\r\n            var oldStyleNode = document.getElementById(id);\r\n            var keepOldStyleNode = false;\r\n            // Create a new stylesheet node for insertion or (if necessary) replacement\r\n            var styleNode = document.createElement('style');\r\n            styleNode.setAttribute('type', 'text/css');\r\n            if (sheet.media) {\r\n                styleNode.setAttribute('media', sheet.media);\r\n            }\r\n            styleNode.id = id;\r\n            if (!styleNode.styleSheet) {\r\n                styleNode.appendChild(document.createTextNode(styles));\r\n                // If new contents match contents of oldStyleNode, don't replace oldStyleNode\r\n                keepOldStyleNode = (oldStyleNode !== null && oldStyleNode.childNodes.length > 0 && styleNode.childNodes.length > 0 &&\r\n                    oldStyleNode.firstChild.nodeValue === styleNode.firstChild.nodeValue);\r\n            }\r\n            var head = document.getElementsByTagName('head')[0];\r\n            // If there is no oldStyleNode, just append; otherwise, only append if we need\r\n            // to replace oldStyleNode with an updated stylesheet\r\n            if (oldStyleNode === null || keepOldStyleNode === false) {\r\n                var nextEl = sheet && sheet.nextSibling || null;\r\n                if (nextEl) {\r\n                    nextEl.parentNode.insertBefore(styleNode, nextEl);\r\n                }\r\n                else {\r\n                    head.appendChild(styleNode);\r\n                }\r\n            }\r\n            if (oldStyleNode && keepOldStyleNode === false) {\r\n                oldStyleNode.parentNode.removeChild(oldStyleNode);\r\n            }\r\n            // For IE.\r\n            // This needs to happen *after* the style element is added to the DOM, otherwise IE 7 and 8 may crash.\r\n            // See http://social.msdn.microsoft.com/Forums/en-US/7e081b65-878a-4c22-8e68-c10d39c2ed32/internet-explorer-crashes-appending-style-element-to-head\r\n            if (styleNode.styleSheet) {\r\n                try {\r\n                    styleNode.styleSheet.cssText = styles;\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Couldn\\'t reassign styleSheet.cssText.');\r\n                }\r\n            }\r\n        },\r\n        currentScript: function (window) {\r\n            var document = window.document;\r\n            return document.currentScript || (function () {\r\n                var scripts = document.getElementsByTagName('script');\r\n                return scripts[scripts.length - 1];\r\n            })();\r\n        }\r\n    };\n\n    var addDefaultOptions = (function (window, options) {\r\n        // use options from the current script tag data attribues\r\n        addDataAttr(options, browser.currentScript(window));\r\n        if (options.isFileProtocol === undefined) {\r\n            options.isFileProtocol = /^(file|(chrome|safari)(-extension)?|resource|qrc|app):/.test(window.location.protocol);\r\n        }\r\n        // Load styles asynchronously (default: false)\r\n        //\r\n        // This is set to `false` by default, so that the body\r\n        // doesn't start loading before the stylesheets are parsed.\r\n        // Setting this to `true` can result in flickering.\r\n        //\r\n        options.async = options.async || false;\r\n        options.fileAsync = options.fileAsync || false;\r\n        // Interval between watch polls\r\n        options.poll = options.poll || (options.isFileProtocol ? 1000 : 1500);\r\n        options.env = options.env || (window.location.hostname == '127.0.0.1' ||\r\n            window.location.hostname == '0.0.0.0' ||\r\n            window.location.hostname == 'localhost' ||\r\n            (window.location.port &&\r\n                window.location.port.length > 0) ||\r\n            options.isFileProtocol ? 'development'\r\n            : 'production');\r\n        var dumpLineNumbers = /!dumpLineNumbers:(comments|mediaquery|all)/.exec(window.location.hash);\r\n        if (dumpLineNumbers) {\r\n            options.dumpLineNumbers = dumpLineNumbers[1];\r\n        }\r\n        if (options.useFileCache === undefined) {\r\n            options.useFileCache = true;\r\n        }\r\n        if (options.onReady === undefined) {\r\n            options.onReady = true;\r\n        }\r\n        if (options.relativeUrls) {\r\n            options.rewriteUrls = 'all';\r\n        }\r\n    });\n\n    var logger$1 = {\r\n        error: function (msg) {\r\n            this._fireEvent('error', msg);\r\n        },\r\n        warn: function (msg) {\r\n            this._fireEvent('warn', msg);\r\n        },\r\n        info: function (msg) {\r\n            this._fireEvent('info', msg);\r\n        },\r\n        debug: function (msg) {\r\n            this._fireEvent('debug', msg);\r\n        },\r\n        addListener: function (listener) {\r\n            this._listeners.push(listener);\r\n        },\r\n        removeListener: function (listener) {\r\n            for (var i = 0; i < this._listeners.length; i++) {\r\n                if (this._listeners[i] === listener) {\r\n                    this._listeners.splice(i, 1);\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n        _fireEvent: function (type, msg) {\r\n            for (var i = 0; i < this._listeners.length; i++) {\r\n                var logFunction = this._listeners[i][type];\r\n                if (logFunction) {\r\n                    logFunction(msg);\r\n                }\r\n            }\r\n        },\r\n        _listeners: []\r\n    };\n\n    /**\r\n     * @todo Document why this abstraction exists, and the relationship between\r\n     *       environment, file managers, and plugin manager\r\n     */\r\n    var Environment = /** @class */ (function () {\r\n        function Environment(externalEnvironment, fileManagers) {\r\n            this.fileManagers = fileManagers || [];\r\n            externalEnvironment = externalEnvironment || {};\r\n            var optionalFunctions = ['encodeBase64', 'mimeLookup', 'charsetLookup', 'getSourceMapGenerator'];\r\n            var requiredFunctions = [];\r\n            var functions = requiredFunctions.concat(optionalFunctions);\r\n            for (var i = 0; i < functions.length; i++) {\r\n                var propName = functions[i];\r\n                var environmentFunc = externalEnvironment[propName];\r\n                if (environmentFunc) {\r\n                    this[propName] = environmentFunc.bind(externalEnvironment);\r\n                }\r\n                else if (i < requiredFunctions.length) {\r\n                    this.warn(\"missing required function in environment - \" + propName);\r\n                }\r\n            }\r\n        }\r\n        Environment.prototype.getFileManager = function (filename, currentDirectory, options, environment, isSync) {\r\n            if (!filename) {\r\n                logger$1.warn('getFileManager called with no filename.. Please report this issue. continuing.');\r\n            }\r\n            if (currentDirectory == null) {\r\n                logger$1.warn('getFileManager called with null directory.. Please report this issue. continuing.');\r\n            }\r\n            var fileManagers = this.fileManagers;\r\n            if (options.pluginManager) {\r\n                fileManagers = [].concat(fileManagers).concat(options.pluginManager.getFileManagers());\r\n            }\r\n            for (var i = fileManagers.length - 1; i >= 0; i--) {\r\n                var fileManager = fileManagers[i];\r\n                if (fileManager[isSync ? 'supportsSync' : 'supports'](filename, currentDirectory, options, environment)) {\r\n                    return fileManager;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        Environment.prototype.addFileManager = function (fileManager) {\r\n            this.fileManagers.push(fileManager);\r\n        };\r\n        Environment.prototype.clearFileManagers = function () {\r\n            this.fileManagers = [];\r\n        };\r\n        return Environment;\r\n    }());\n\n    var colors = {\r\n        'aliceblue': '#f0f8ff',\r\n        'antiquewhite': '#faebd7',\r\n        'aqua': '#00ffff',\r\n        'aquamarine': '#7fffd4',\r\n        'azure': '#f0ffff',\r\n        'beige': '#f5f5dc',\r\n        'bisque': '#ffe4c4',\r\n        'black': '#000000',\r\n        'blanchedalmond': '#ffebcd',\r\n        'blue': '#0000ff',\r\n        'blueviolet': '#8a2be2',\r\n        'brown': '#a52a2a',\r\n        'burlywood': '#deb887',\r\n        'cadetblue': '#5f9ea0',\r\n        'chartreuse': '#7fff00',\r\n        'chocolate': '#d2691e',\r\n        'coral': '#ff7f50',\r\n        'cornflowerblue': '#6495ed',\r\n        'cornsilk': '#fff8dc',\r\n        'crimson': '#dc143c',\r\n        'cyan': '#00ffff',\r\n        'darkblue': '#00008b',\r\n        'darkcyan': '#008b8b',\r\n        'darkgoldenrod': '#b8860b',\r\n        'darkgray': '#a9a9a9',\r\n        'darkgrey': '#a9a9a9',\r\n        'darkgreen': '#006400',\r\n        'darkkhaki': '#bdb76b',\r\n        'darkmagenta': '#8b008b',\r\n        'darkolivegreen': '#556b2f',\r\n        'darkorange': '#ff8c00',\r\n        'darkorchid': '#9932cc',\r\n        'darkred': '#8b0000',\r\n        'darksalmon': '#e9967a',\r\n        'darkseagreen': '#8fbc8f',\r\n        'darkslateblue': '#483d8b',\r\n        'darkslategray': '#2f4f4f',\r\n        'darkslategrey': '#2f4f4f',\r\n        'darkturquoise': '#00ced1',\r\n        'darkviolet': '#9400d3',\r\n        'deeppink': '#ff1493',\r\n        'deepskyblue': '#00bfff',\r\n        'dimgray': '#696969',\r\n        'dimgrey': '#696969',\r\n        'dodgerblue': '#1e90ff',\r\n        'firebrick': '#b22222',\r\n        'floralwhite': '#fffaf0',\r\n        'forestgreen': '#228b22',\r\n        'fuchsia': '#ff00ff',\r\n        'gainsboro': '#dcdcdc',\r\n        'ghostwhite': '#f8f8ff',\r\n        'gold': '#ffd700',\r\n        'goldenrod': '#daa520',\r\n        'gray': '#808080',\r\n        'grey': '#808080',\r\n        'green': '#008000',\r\n        'greenyellow': '#adff2f',\r\n        'honeydew': '#f0fff0',\r\n        'hotpink': '#ff69b4',\r\n        'indianred': '#cd5c5c',\r\n        'indigo': '#4b0082',\r\n        'ivory': '#fffff0',\r\n        'khaki': '#f0e68c',\r\n        'lavender': '#e6e6fa',\r\n        'lavenderblush': '#fff0f5',\r\n        'lawngreen': '#7cfc00',\r\n        'lemonchiffon': '#fffacd',\r\n        'lightblue': '#add8e6',\r\n        'lightcoral': '#f08080',\r\n        'lightcyan': '#e0ffff',\r\n        'lightgoldenrodyellow': '#fafad2',\r\n        'lightgray': '#d3d3d3',\r\n        'lightgrey': '#d3d3d3',\r\n        'lightgreen': '#90ee90',\r\n        'lightpink': '#ffb6c1',\r\n        'lightsalmon': '#ffa07a',\r\n        'lightseagreen': '#20b2aa',\r\n        'lightskyblue': '#87cefa',\r\n        'lightslategray': '#778899',\r\n        'lightslategrey': '#778899',\r\n        'lightsteelblue': '#b0c4de',\r\n        'lightyellow': '#ffffe0',\r\n        'lime': '#00ff00',\r\n        'limegreen': '#32cd32',\r\n        'linen': '#faf0e6',\r\n        'magenta': '#ff00ff',\r\n        'maroon': '#800000',\r\n        'mediumaquamarine': '#66cdaa',\r\n        'mediumblue': '#0000cd',\r\n        'mediumorchid': '#ba55d3',\r\n        'mediumpurple': '#9370d8',\r\n        'mediumseagreen': '#3cb371',\r\n        'mediumslateblue': '#7b68ee',\r\n        'mediumspringgreen': '#00fa9a',\r\n        'mediumturquoise': '#48d1cc',\r\n        'mediumvioletred': '#c71585',\r\n        'midnightblue': '#191970',\r\n        'mintcream': '#f5fffa',\r\n        'mistyrose': '#ffe4e1',\r\n        'moccasin': '#ffe4b5',\r\n        'navajowhite': '#ffdead',\r\n        'navy': '#000080',\r\n        'oldlace': '#fdf5e6',\r\n        'olive': '#808000',\r\n        'olivedrab': '#6b8e23',\r\n        'orange': '#ffa500',\r\n        'orangered': '#ff4500',\r\n        'orchid': '#da70d6',\r\n        'palegoldenrod': '#eee8aa',\r\n        'palegreen': '#98fb98',\r\n        'paleturquoise': '#afeeee',\r\n        'palevioletred': '#d87093',\r\n        'papayawhip': '#ffefd5',\r\n        'peachpuff': '#ffdab9',\r\n        'peru': '#cd853f',\r\n        'pink': '#ffc0cb',\r\n        'plum': '#dda0dd',\r\n        'powderblue': '#b0e0e6',\r\n        'purple': '#800080',\r\n        'rebeccapurple': '#663399',\r\n        'red': '#ff0000',\r\n        'rosybrown': '#bc8f8f',\r\n        'royalblue': '#4169e1',\r\n        'saddlebrown': '#8b4513',\r\n        'salmon': '#fa8072',\r\n        'sandybrown': '#f4a460',\r\n        'seagreen': '#2e8b57',\r\n        'seashell': '#fff5ee',\r\n        'sienna': '#a0522d',\r\n        'silver': '#c0c0c0',\r\n        'skyblue': '#87ceeb',\r\n        'slateblue': '#6a5acd',\r\n        'slategray': '#708090',\r\n        'slategrey': '#708090',\r\n        'snow': '#fffafa',\r\n        'springgreen': '#00ff7f',\r\n        'steelblue': '#4682b4',\r\n        'tan': '#d2b48c',\r\n        'teal': '#008080',\r\n        'thistle': '#d8bfd8',\r\n        'tomato': '#ff6347',\r\n        'turquoise': '#40e0d0',\r\n        'violet': '#ee82ee',\r\n        'wheat': '#f5deb3',\r\n        'white': '#ffffff',\r\n        'whitesmoke': '#f5f5f5',\r\n        'yellow': '#ffff00',\r\n        'yellowgreen': '#9acd32'\r\n    };\n\n    var unitConversions = {\r\n        length: {\r\n            'm': 1,\r\n            'cm': 0.01,\r\n            'mm': 0.001,\r\n            'in': 0.0254,\r\n            'px': 0.0254 / 96,\r\n            'pt': 0.0254 / 72,\r\n            'pc': 0.0254 / 72 * 12\r\n        },\r\n        duration: {\r\n            's': 1,\r\n            'ms': 0.001\r\n        },\r\n        angle: {\r\n            'rad': 1 / (2 * Math.PI),\r\n            'deg': 1 / 360,\r\n            'grad': 1 / 400,\r\n            'turn': 1\r\n        }\r\n    };\n\n    var data = { colors: colors, unitConversions: unitConversions };\n\n    /**\r\n     * The reason why Node is a class and other nodes simply do not extend\r\n     * from Node (since we're transpiling) is due to this issue:\r\n     *\r\n     * https://github.com/less/less.js/issues/3434\r\n     */\r\n    var Node = /** @class */ (function () {\r\n        function Node() {\r\n            this.parent = null;\r\n            this.visibilityBlocks = undefined;\r\n            this.nodeVisible = undefined;\r\n            this.rootNode = null;\r\n            this.parsed = null;\r\n        }\r\n        Object.defineProperty(Node.prototype, \"currentFileInfo\", {\r\n            get: function () {\r\n                return this.fileInfo();\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Node.prototype, \"index\", {\r\n            get: function () {\r\n                return this.getIndex();\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Node.prototype.setParent = function (nodes, parent) {\r\n            function set(node) {\r\n                if (node && node instanceof Node) {\r\n                    node.parent = parent;\r\n                }\r\n            }\r\n            if (Array.isArray(nodes)) {\r\n                nodes.forEach(set);\r\n            }\r\n            else {\r\n                set(nodes);\r\n            }\r\n        };\r\n        Node.prototype.getIndex = function () {\r\n            return this._index || (this.parent && this.parent.getIndex()) || 0;\r\n        };\r\n        Node.prototype.fileInfo = function () {\r\n            return this._fileInfo || (this.parent && this.parent.fileInfo()) || {};\r\n        };\r\n        Node.prototype.isRulesetLike = function () { return false; };\r\n        Node.prototype.toCSS = function (context) {\r\n            var strs = [];\r\n            this.genCSS(context, {\r\n                add: function (chunk, fileInfo, index) {\r\n                    strs.push(chunk);\r\n                },\r\n                isEmpty: function () {\r\n                    return strs.length === 0;\r\n                }\r\n            });\r\n            return strs.join('');\r\n        };\r\n        Node.prototype.genCSS = function (context, output) {\r\n            output.add(this.value);\r\n        };\r\n        Node.prototype.accept = function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        };\r\n        Node.prototype.eval = function () { return this; };\r\n        Node.prototype._operate = function (context, op, a, b) {\r\n            switch (op) {\r\n                case '+': return a + b;\r\n                case '-': return a - b;\r\n                case '*': return a * b;\r\n                case '/': return a / b;\r\n            }\r\n        };\r\n        Node.prototype.fround = function (context, value) {\r\n            var precision = context && context.numPrecision;\r\n            // add \"epsilon\" to ensure numbers like 1.000000005 (represented as 1.000000004999...) are properly rounded:\r\n            return (precision) ? Number((value + 2e-16).toFixed(precision)) : value;\r\n        };\r\n        Node.compare = function (a, b) {\r\n            /* returns:\r\n             -1: a < b\r\n             0: a = b\r\n             1: a > b\r\n             and *any* other value for a != b (e.g. undefined, NaN, -2 etc.) */\r\n            if ((a.compare) &&\r\n                // for \"symmetric results\" force toCSS-based comparison\r\n                // of Quoted or Anonymous if either value is one of those\r\n                !(b.type === 'Quoted' || b.type === 'Anonymous')) {\r\n                return a.compare(b);\r\n            }\r\n            else if (b.compare) {\r\n                return -b.compare(a);\r\n            }\r\n            else if (a.type !== b.type) {\r\n                return undefined;\r\n            }\r\n            a = a.value;\r\n            b = b.value;\r\n            if (!Array.isArray(a)) {\r\n                return a === b ? 0 : undefined;\r\n            }\r\n            if (a.length !== b.length) {\r\n                return undefined;\r\n            }\r\n            for (var i = 0; i < a.length; i++) {\r\n                if (Node.compare(a[i], b[i]) !== 0) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            return 0;\r\n        };\r\n        Node.numericCompare = function (a, b) {\r\n            return a < b ? -1\r\n                : a === b ? 0\r\n                    : a > b ? 1 : undefined;\r\n        };\r\n        // Returns true if this node represents root of ast imported by reference\r\n        Node.prototype.blocksVisibility = function () {\r\n            if (this.visibilityBlocks == null) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            return this.visibilityBlocks !== 0;\r\n        };\r\n        Node.prototype.addVisibilityBlock = function () {\r\n            if (this.visibilityBlocks == null) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            this.visibilityBlocks = this.visibilityBlocks + 1;\r\n        };\r\n        Node.prototype.removeVisibilityBlock = function () {\r\n            if (this.visibilityBlocks == null) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            this.visibilityBlocks = this.visibilityBlocks - 1;\r\n        };\r\n        // Turns on node visibility - if called node will be shown in output regardless\r\n        // of whether it comes from import by reference or not\r\n        Node.prototype.ensureVisibility = function () {\r\n            this.nodeVisible = true;\r\n        };\r\n        // Turns off node visibility - if called node will NOT be shown in output regardless\r\n        // of whether it comes from import by reference or not\r\n        Node.prototype.ensureInvisibility = function () {\r\n            this.nodeVisible = false;\r\n        };\r\n        // return values:\r\n        // false - the node must not be visible\r\n        // true - the node must be visible\r\n        // undefined or null - the node has the same visibility as its parent\r\n        Node.prototype.isVisible = function () {\r\n            return this.nodeVisible;\r\n        };\r\n        Node.prototype.visibilityInfo = function () {\r\n            return {\r\n                visibilityBlocks: this.visibilityBlocks,\r\n                nodeVisible: this.nodeVisible\r\n            };\r\n        };\r\n        Node.prototype.copyVisibilityInfo = function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            this.visibilityBlocks = info.visibilityBlocks;\r\n            this.nodeVisible = info.nodeVisible;\r\n        };\r\n        return Node;\r\n    }());\n\n    //\r\n    // RGB Colors - #ff0014, #eee\r\n    //\r\n    var Color = function (rgb, a, originalForm) {\r\n        var self = this;\r\n        //\r\n        // The end goal here, is to parse the arguments\r\n        // into an integer triplet, such as `128, 255, 0`\r\n        //\r\n        // This facilitates operations and conversions.\r\n        //\r\n        if (Array.isArray(rgb)) {\r\n            this.rgb = rgb;\r\n        }\r\n        else if (rgb.length >= 6) {\r\n            this.rgb = [];\r\n            rgb.match(/.{2}/g).map(function (c, i) {\r\n                if (i < 3) {\r\n                    self.rgb.push(parseInt(c, 16));\r\n                }\r\n                else {\r\n                    self.alpha = (parseInt(c, 16)) / 255;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.rgb = [];\r\n            rgb.split('').map(function (c, i) {\r\n                if (i < 3) {\r\n                    self.rgb.push(parseInt(c + c, 16));\r\n                }\r\n                else {\r\n                    self.alpha = (parseInt(c + c, 16)) / 255;\r\n                }\r\n            });\r\n        }\r\n        this.alpha = this.alpha || (typeof a === 'number' ? a : 1);\r\n        if (typeof originalForm !== 'undefined') {\r\n            this.value = originalForm;\r\n        }\r\n    };\r\n    Color.prototype = Object.assign(new Node(), {\r\n        type: 'Color',\r\n        luma: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255;\r\n            r = (r <= 0.03928) ? r / 12.92 : Math.pow(((r + 0.055) / 1.055), 2.4);\r\n            g = (g <= 0.03928) ? g / 12.92 : Math.pow(((g + 0.055) / 1.055), 2.4);\r\n            b = (b <= 0.03928) ? b / 12.92 : Math.pow(((b + 0.055) / 1.055), 2.4);\r\n            return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context));\r\n        },\r\n        toCSS: function (context, doNotCompress) {\r\n            var compress = context && context.compress && !doNotCompress;\r\n            var color;\r\n            var alpha;\r\n            var colorFunction;\r\n            var args = [];\r\n            // `value` is set if this color was originally\r\n            // converted from a named color string so we need\r\n            // to respect this and try to output named color too.\r\n            alpha = this.fround(context, this.alpha);\r\n            if (this.value) {\r\n                if (this.value.indexOf('rgb') === 0) {\r\n                    if (alpha < 1) {\r\n                        colorFunction = 'rgba';\r\n                    }\r\n                }\r\n                else if (this.value.indexOf('hsl') === 0) {\r\n                    if (alpha < 1) {\r\n                        colorFunction = 'hsla';\r\n                    }\r\n                    else {\r\n                        colorFunction = 'hsl';\r\n                    }\r\n                }\r\n                else {\r\n                    return this.value;\r\n                }\r\n            }\r\n            else {\r\n                if (alpha < 1) {\r\n                    colorFunction = 'rgba';\r\n                }\r\n            }\r\n            switch (colorFunction) {\r\n                case 'rgba':\r\n                    args = this.rgb.map(function (c) {\r\n                        return clamp$1(Math.round(c), 255);\r\n                    }).concat(clamp$1(alpha, 1));\r\n                    break;\r\n                case 'hsla':\r\n                    args.push(clamp$1(alpha, 1));\r\n                case 'hsl':\r\n                    color = this.toHSL();\r\n                    args = [\r\n                        this.fround(context, color.h),\r\n                        this.fround(context, color.s * 100) + \"%\",\r\n                        this.fround(context, color.l * 100) + \"%\"\r\n                    ].concat(args);\r\n            }\r\n            if (colorFunction) {\r\n                // Values are capped between `0` and `255`, rounded and zero-padded.\r\n                return colorFunction + \"(\" + args.join(\",\" + (compress ? '' : ' ')) + \")\";\r\n            }\r\n            color = this.toRGB();\r\n            if (compress) {\r\n                var splitcolor = color.split('');\r\n                // Convert color to short format\r\n                if (splitcolor[1] === splitcolor[2] && splitcolor[3] === splitcolor[4] && splitcolor[5] === splitcolor[6]) {\r\n                    color = \"#\" + splitcolor[1] + splitcolor[3] + splitcolor[5];\r\n                }\r\n            }\r\n            return color;\r\n        },\r\n        //\r\n        // Operations have to be done per-channel, if not,\r\n        // channels will spill onto each other. Once we have\r\n        // our result, in the form of an integer triplet,\r\n        // we create a new Color node to hold the result.\r\n        //\r\n        operate: function (context, op, other) {\r\n            var rgb = new Array(3);\r\n            var alpha = this.alpha * (1 - other.alpha) + other.alpha;\r\n            for (var c = 0; c < 3; c++) {\r\n                rgb[c] = this._operate(context, op, this.rgb[c], other.rgb[c]);\r\n            }\r\n            return new Color(rgb, alpha);\r\n        },\r\n        toRGB: function () {\r\n            return toHex(this.rgb);\r\n        },\r\n        toHSL: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\r\n            var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n            var h;\r\n            var s;\r\n            var l = (max + min) / 2;\r\n            var d = max - min;\r\n            if (max === min) {\r\n                h = s = 0;\r\n            }\r\n            else {\r\n                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n                switch (max) {\r\n                    case r:\r\n                        h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        h = (r - g) / d + 4;\r\n                        break;\r\n                }\r\n                h /= 6;\r\n            }\r\n            return { h: h * 360, s: s, l: l, a: a };\r\n        },\r\n        // Adapted from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\r\n        toHSV: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\r\n            var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n            var h;\r\n            var s;\r\n            var v = max;\r\n            var d = max - min;\r\n            if (max === 0) {\r\n                s = 0;\r\n            }\r\n            else {\r\n                s = d / max;\r\n            }\r\n            if (max === min) {\r\n                h = 0;\r\n            }\r\n            else {\r\n                switch (max) {\r\n                    case r:\r\n                        h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        h = (r - g) / d + 4;\r\n                        break;\r\n                }\r\n                h /= 6;\r\n            }\r\n            return { h: h * 360, s: s, v: v, a: a };\r\n        },\r\n        toARGB: function () {\r\n            return toHex([this.alpha * 255].concat(this.rgb));\r\n        },\r\n        compare: function (x) {\r\n            return (x.rgb &&\r\n                x.rgb[0] === this.rgb[0] &&\r\n                x.rgb[1] === this.rgb[1] &&\r\n                x.rgb[2] === this.rgb[2] &&\r\n                x.alpha === this.alpha) ? 0 : undefined;\r\n        }\r\n    });\r\n    Color.fromKeyword = function (keyword) {\r\n        var c;\r\n        var key = keyword.toLowerCase();\r\n        if (colors.hasOwnProperty(key)) {\r\n            c = new Color(colors[key].slice(1));\r\n        }\r\n        else if (key === 'transparent') {\r\n            c = new Color([0, 0, 0], 0);\r\n        }\r\n        if (c) {\r\n            c.value = keyword;\r\n            return c;\r\n        }\r\n    };\r\n    function clamp$1(v, max) {\r\n        return Math.min(Math.max(v, 0), max);\r\n    }\r\n    function toHex(v) {\r\n        return \"#\" + v.map(function (c) {\r\n            c = clamp$1(Math.round(c), 255);\r\n            return (c < 16 ? '0' : '') + c.toString(16);\r\n        }).join('');\r\n    }\n\n    var Paren = function (node) {\r\n        this.value = node;\r\n    };\r\n    Paren.prototype = Object.assign(new Node(), {\r\n        type: 'Paren',\r\n        genCSS: function (context, output) {\r\n            output.add('(');\r\n            this.value.genCSS(context, output);\r\n            output.add(')');\r\n        },\r\n        eval: function (context) {\r\n            return new Paren(this.value.eval(context));\r\n        }\r\n    });\n\n    var _noSpaceCombinators = {\r\n        '': true,\r\n        ' ': true,\r\n        '|': true\r\n    };\r\n    var Combinator = function (value) {\r\n        if (value === ' ') {\r\n            this.value = ' ';\r\n            this.emptyOrWhitespace = true;\r\n        }\r\n        else {\r\n            this.value = value ? value.trim() : '';\r\n            this.emptyOrWhitespace = this.value === '';\r\n        }\r\n    };\r\n    Combinator.prototype = Object.assign(new Node(), {\r\n        type: 'Combinator',\r\n        genCSS: function (context, output) {\r\n            var spaceOrEmpty = (context.compress || _noSpaceCombinators[this.value]) ? '' : ' ';\r\n            output.add(spaceOrEmpty + this.value + spaceOrEmpty);\r\n        }\r\n    });\n\n    var Element = function (combinator, value, isVariable, index, currentFileInfo, visibilityInfo) {\r\n        this.combinator = combinator instanceof Combinator ?\r\n            combinator : new Combinator(combinator);\r\n        if (typeof value === 'string') {\r\n            this.value = value.trim();\r\n        }\r\n        else if (value) {\r\n            this.value = value;\r\n        }\r\n        else {\r\n            this.value = '';\r\n        }\r\n        this.isVariable = isVariable;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.combinator, this);\r\n    };\r\n    Element.prototype = Object.assign(new Node(), {\r\n        type: 'Element',\r\n        accept: function (visitor) {\r\n            var value = this.value;\r\n            this.combinator = visitor.visit(this.combinator);\r\n            if (typeof value === 'object') {\r\n                this.value = visitor.visit(value);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            return new Element(this.combinator, this.value.eval ? this.value.eval(context) : this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        clone: function () {\r\n            return new Element(this.combinator, this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context), this.fileInfo(), this.getIndex());\r\n        },\r\n        toCSS: function (context) {\r\n            context = context || {};\r\n            var value = this.value;\r\n            var firstSelector = context.firstSelector;\r\n            if (value instanceof Paren) {\r\n                // selector in parens should not be affected by outer selector\r\n                // flags (breaks only interpolated selectors - see #1973)\r\n                context.firstSelector = true;\r\n            }\r\n            value = value.toCSS ? value.toCSS(context) : value;\r\n            context.firstSelector = firstSelector;\r\n            if (value === '' && this.combinator.value.charAt(0) === '&') {\r\n                return '';\r\n            }\r\n            else {\r\n                return this.combinator.toCSS(context) + value;\r\n            }\r\n        }\r\n    });\n\n    var Math$1 = {\r\n        ALWAYS: 0,\r\n        PARENS_DIVISION: 1,\r\n        PARENS: 2\r\n        // removed - STRICT_LEGACY: 3\r\n    };\r\n    var RewriteUrls = {\r\n        OFF: 0,\r\n        LOCAL: 1,\r\n        ALL: 2\r\n    };\n\n    /**\r\n     * Returns the object type of the given payload\r\n     *\r\n     * @param {*} payload\r\n     * @returns {string}\r\n     */\r\n    function getType(payload) {\r\n        return Object.prototype.toString.call(payload).slice(8, -1);\r\n    }\r\n    /**\r\n     * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n     *\r\n     * @param {*} payload\r\n     * @returns {payload is Record<string, any>}\r\n     */\r\n    function isPlainObject(payload) {\r\n        if (getType(payload) !== 'Object')\r\n            return false;\r\n        return payload.constructor === Object && Object.getPrototypeOf(payload) === Object.prototype;\r\n    }\r\n    /**\r\n     * Returns whether the payload is an array\r\n     *\r\n     * @param {any} payload\r\n     * @returns {payload is any[]}\r\n     */\r\n    function isArray(payload) {\r\n        return getType(payload) === 'Array';\r\n    }\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    }\n\n    function assignProp(carry, key, newVal, originalObject, includeNonenumerable) {\r\n        var propType = {}.propertyIsEnumerable.call(originalObject, key)\r\n            ? 'enumerable'\r\n            : 'nonenumerable';\r\n        if (propType === 'enumerable')\r\n            carry[key] = newVal;\r\n        if (includeNonenumerable && propType === 'nonenumerable') {\r\n            Object.defineProperty(carry, key, {\r\n                value: newVal,\r\n                enumerable: false,\r\n                writable: true,\r\n                configurable: true,\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Copy (clone) an object and all its props recursively to get rid of any prop referenced of the original object. Arrays are also cloned, however objects inside arrays are still linked.\r\n     *\r\n     * @export\r\n     * @template T\r\n     * @param {T} target Target can be anything\r\n     * @param {Options} [options={}] Options can be `props` or `nonenumerable`\r\n     * @returns {T} the target with replaced values\r\n     * @export\r\n     */\r\n    function copy(target, options) {\r\n        if (options === void 0) { options = {}; }\r\n        if (isArray(target))\r\n            return target.map(function (i) { return copy(i, options); });\r\n        if (!isPlainObject(target))\r\n            return target;\r\n        var props = Object.getOwnPropertyNames(target);\r\n        var symbols = Object.getOwnPropertySymbols(target);\r\n        return __spreadArrays(props, symbols).reduce(function (carry, key) {\r\n            if (isArray(options.props) && !options.props.includes(key)) {\r\n                return carry;\r\n            }\r\n            var val = target[key];\r\n            var newVal = copy(val, options);\r\n            assignProp(carry, key, newVal, target, options.nonenumerable);\r\n            return carry;\r\n        }, {});\r\n    }\n\n    /* jshint proto: true */\r\n    function getLocation(index, inputStream) {\r\n        var n = index + 1;\r\n        var line = null;\r\n        var column = -1;\r\n        while (--n >= 0 && inputStream.charAt(n) !== '\\n') {\r\n            column++;\r\n        }\r\n        if (typeof index === 'number') {\r\n            line = (inputStream.slice(0, index).match(/\\n/g) || '').length;\r\n        }\r\n        return {\r\n            line: line,\r\n            column: column\r\n        };\r\n    }\r\n    function copyArray(arr) {\r\n        var i;\r\n        var length = arr.length;\r\n        var copy = new Array(length);\r\n        for (i = 0; i < length; i++) {\r\n            copy[i] = arr[i];\r\n        }\r\n        return copy;\r\n    }\r\n    function clone(obj) {\r\n        var cloned = {};\r\n        for (var prop in obj) {\r\n            if (obj.hasOwnProperty(prop)) {\r\n                cloned[prop] = obj[prop];\r\n            }\r\n        }\r\n        return cloned;\r\n    }\r\n    function defaults(obj1, obj2) {\r\n        var newObj = obj2 || {};\r\n        if (!obj2._defaults) {\r\n            newObj = {};\r\n            var defaults_1 = copy(obj1);\r\n            newObj._defaults = defaults_1;\r\n            var cloned = obj2 ? copy(obj2) : {};\r\n            Object.assign(newObj, defaults_1, cloned);\r\n        }\r\n        return newObj;\r\n    }\r\n    function copyOptions(obj1, obj2) {\r\n        if (obj2 && obj2._defaults) {\r\n            return obj2;\r\n        }\r\n        var opts = defaults(obj1, obj2);\r\n        if (opts.strictMath) {\r\n            opts.math = Math$1.PARENS;\r\n        }\r\n        // Back compat with changed relativeUrls option\r\n        if (opts.relativeUrls) {\r\n            opts.rewriteUrls = RewriteUrls.ALL;\r\n        }\r\n        if (typeof opts.math === 'string') {\r\n            switch (opts.math.toLowerCase()) {\r\n                case 'always':\r\n                    opts.math = Math$1.ALWAYS;\r\n                    break;\r\n                case 'parens-division':\r\n                    opts.math = Math$1.PARENS_DIVISION;\r\n                    break;\r\n                case 'strict':\r\n                case 'parens':\r\n                    opts.math = Math$1.PARENS;\r\n                    break;\r\n                default:\r\n                    opts.math = Math$1.PARENS;\r\n            }\r\n        }\r\n        if (typeof opts.rewriteUrls === 'string') {\r\n            switch (opts.rewriteUrls.toLowerCase()) {\r\n                case 'off':\r\n                    opts.rewriteUrls = RewriteUrls.OFF;\r\n                    break;\r\n                case 'local':\r\n                    opts.rewriteUrls = RewriteUrls.LOCAL;\r\n                    break;\r\n                case 'all':\r\n                    opts.rewriteUrls = RewriteUrls.ALL;\r\n                    break;\r\n            }\r\n        }\r\n        return opts;\r\n    }\r\n    function merge(obj1, obj2) {\r\n        for (var prop in obj2) {\r\n            if (obj2.hasOwnProperty(prop)) {\r\n                obj1[prop] = obj2[prop];\r\n            }\r\n        }\r\n        return obj1;\r\n    }\r\n    function flattenArray(arr, result) {\r\n        if (result === void 0) { result = []; }\r\n        for (var i = 0, length_1 = arr.length; i < length_1; i++) {\r\n            var value = arr[i];\r\n            if (Array.isArray(value)) {\r\n                flattenArray(value, result);\r\n            }\r\n            else {\r\n                if (value !== undefined) {\r\n                    result.push(value);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\n\n    var utils = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getLocation: getLocation,\n        copyArray: copyArray,\n        clone: clone,\n        defaults: defaults,\n        copyOptions: copyOptions,\n        merge: merge,\n        flattenArray: flattenArray\n    });\n\n    var anonymousFunc = /(<anonymous>|Function):(\\d+):(\\d+)/;\r\n    /**\r\n     * This is a centralized class of any error that could be thrown internally (mostly by the parser).\r\n     * Besides standard .message it keeps some additional data like a path to the file where the error\r\n     * occurred along with line and column numbers.\r\n     *\r\n     * @class\r\n     * @extends Error\r\n     * @type {module.LessError}\r\n     *\r\n     * @prop {string} type\r\n     * @prop {string} filename\r\n     * @prop {number} index\r\n     * @prop {number} line\r\n     * @prop {number} column\r\n     * @prop {number} callLine\r\n     * @prop {number} callExtract\r\n     * @prop {string[]} extract\r\n     *\r\n     * @param {Object} e              - An error object to wrap around or just a descriptive object\r\n     * @param {Object} fileContentMap - An object with file contents in 'contents' property (like importManager) @todo - move to fileManager?\r\n     * @param {string} [currentFilename]\r\n     */\r\n    var LessError = function (e, fileContentMap, currentFilename) {\r\n        Error.call(this);\r\n        var filename = e.filename || currentFilename;\r\n        this.message = e.message;\r\n        this.stack = e.stack;\r\n        if (fileContentMap && filename) {\r\n            var input = fileContentMap.contents[filename];\r\n            var loc = getLocation(e.index, input);\r\n            var line = loc.line;\r\n            var col = loc.column;\r\n            var callLine = e.call && getLocation(e.call, input).line;\r\n            var lines = input ? input.split('\\n') : '';\r\n            this.type = e.type || 'Syntax';\r\n            this.filename = filename;\r\n            this.index = e.index;\r\n            this.line = typeof line === 'number' ? line + 1 : null;\r\n            this.column = col;\r\n            if (!this.line && this.stack) {\r\n                var found = this.stack.match(anonymousFunc);\r\n                /**\r\n                 * We have to figure out how this environment stringifies anonymous functions\r\n                 * so we can correctly map plugin errors.\r\n                 *\r\n                 * Note, in Node 8, the output of anonymous funcs varied based on parameters\r\n                 * being present or not, so we inject dummy params.\r\n                 */\r\n                var func = new Function('a', 'throw new Error()');\r\n                var lineAdjust = 0;\r\n                try {\r\n                    func();\r\n                }\r\n                catch (e) {\r\n                    var match = e.stack.match(anonymousFunc);\r\n                    var line = parseInt(match[2]);\r\n                    lineAdjust = 1 - line;\r\n                }\r\n                if (found) {\r\n                    if (found[2]) {\r\n                        this.line = parseInt(found[2]) + lineAdjust;\r\n                    }\r\n                    if (found[3]) {\r\n                        this.column = parseInt(found[3]);\r\n                    }\r\n                }\r\n            }\r\n            this.callLine = callLine + 1;\r\n            this.callExtract = lines[callLine];\r\n            this.extract = [\r\n                lines[this.line - 2],\r\n                lines[this.line - 1],\r\n                lines[this.line]\r\n            ];\r\n        }\r\n    };\r\n    if (typeof Object.create === 'undefined') {\r\n        var F = function () { };\r\n        F.prototype = Error.prototype;\r\n        LessError.prototype = new F();\r\n    }\r\n    else {\r\n        LessError.prototype = Object.create(Error.prototype);\r\n    }\r\n    LessError.prototype.constructor = LessError;\r\n    /**\r\n     * An overridden version of the default Object.prototype.toString\r\n     * which uses additional information to create a helpful message.\r\n     *\r\n     * @param {Object} options\r\n     * @returns {string}\r\n     */\r\n    LessError.prototype.toString = function (options) {\r\n        options = options || {};\r\n        var message = '';\r\n        var extract = this.extract || [];\r\n        var error = [];\r\n        var stylize = function (str) { return str; };\r\n        if (options.stylize) {\r\n            var type = typeof options.stylize;\r\n            if (type !== 'function') {\r\n                throw Error(\"options.stylize should be a function, got a \" + type + \"!\");\r\n            }\r\n            stylize = options.stylize;\r\n        }\r\n        if (this.line !== null) {\r\n            if (typeof extract[0] === 'string') {\r\n                error.push(stylize(this.line - 1 + \" \" + extract[0], 'grey'));\r\n            }\r\n            if (typeof extract[1] === 'string') {\r\n                var errorTxt = this.line + \" \";\r\n                if (extract[1]) {\r\n                    errorTxt += extract[1].slice(0, this.column) +\r\n                        stylize(stylize(stylize(extract[1].substr(this.column, 1), 'bold') +\r\n                            extract[1].slice(this.column + 1), 'red'), 'inverse');\r\n                }\r\n                error.push(errorTxt);\r\n            }\r\n            if (typeof extract[2] === 'string') {\r\n                error.push(stylize(this.line + 1 + \" \" + extract[2], 'grey'));\r\n            }\r\n            error = error.join('\\n') + stylize('', 'reset') + \"\\n\";\r\n        }\r\n        message += stylize(this.type + \"Error: \" + this.message, 'red');\r\n        if (this.filename) {\r\n            message += stylize(' in ', 'red') + this.filename;\r\n        }\r\n        if (this.line) {\r\n            message += stylize(\" on line \" + this.line + \", column \" + (this.column + 1) + \":\", 'grey');\r\n        }\r\n        message += \"\\n\" + error;\r\n        if (this.callLine) {\r\n            message += stylize('from ', 'red') + (this.filename || '') + \"/n\";\r\n            message += stylize(this.callLine, 'grey') + \" \" + this.callExtract + \"/n\";\r\n        }\r\n        return message;\r\n    };\n\n    var Selector = function (elements, extendList, condition, index, currentFileInfo, visibilityInfo) {\r\n        this.extendList = extendList;\r\n        this.condition = condition;\r\n        this.evaldCondition = !condition;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.elements = this.getElements(elements);\r\n        this.mixinElements_ = undefined;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.elements, this);\r\n    };\r\n    Selector.prototype = Object.assign(new Node(), {\r\n        type: 'Selector',\r\n        accept: function (visitor) {\r\n            if (this.elements) {\r\n                this.elements = visitor.visitArray(this.elements);\r\n            }\r\n            if (this.extendList) {\r\n                this.extendList = visitor.visitArray(this.extendList);\r\n            }\r\n            if (this.condition) {\r\n                this.condition = visitor.visit(this.condition);\r\n            }\r\n        },\r\n        createDerived: function (elements, extendList, evaldCondition) {\r\n            elements = this.getElements(elements);\r\n            var newSelector = new Selector(elements, extendList || this.extendList, null, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n            newSelector.evaldCondition = (evaldCondition != null) ? evaldCondition : this.evaldCondition;\r\n            newSelector.mediaEmpty = this.mediaEmpty;\r\n            return newSelector;\r\n        },\r\n        getElements: function (els) {\r\n            if (!els) {\r\n                return [new Element('', '&', false, this._index, this._fileInfo)];\r\n            }\r\n            if (typeof els === 'string') {\r\n                this.parse.parseNode(els, ['selector'], this._index, this._fileInfo, function (err, result) {\r\n                    if (err) {\r\n                        throw new LessError({\r\n                            index: err.index,\r\n                            message: err.message\r\n                        }, this.parse.imports, this._fileInfo.filename);\r\n                    }\r\n                    els = result[0].elements;\r\n                });\r\n            }\r\n            return els;\r\n        },\r\n        createEmptySelectors: function () {\r\n            var el = new Element('', '&', false, this._index, this._fileInfo), sels = [new Selector([el], null, null, this._index, this._fileInfo)];\r\n            sels[0].mediaEmpty = true;\r\n            return sels;\r\n        },\r\n        match: function (other) {\r\n            var elements = this.elements;\r\n            var len = elements.length;\r\n            var olen;\r\n            var i;\r\n            other = other.mixinElements();\r\n            olen = other.length;\r\n            if (olen === 0 || len < olen) {\r\n                return 0;\r\n            }\r\n            else {\r\n                for (i = 0; i < olen; i++) {\r\n                    if (elements[i].value !== other[i]) {\r\n                        return 0;\r\n                    }\r\n                }\r\n            }\r\n            return olen; // return number of matched elements\r\n        },\r\n        mixinElements: function () {\r\n            if (this.mixinElements_) {\r\n                return this.mixinElements_;\r\n            }\r\n            var elements = this.elements.map(function (v) {\r\n                return v.combinator.value + (v.value.value || v.value);\r\n            }).join('').match(/[,&#\\*\\.\\w-]([\\w-]|(\\\\.))*/g);\r\n            if (elements) {\r\n                if (elements[0] === '&') {\r\n                    elements.shift();\r\n                }\r\n            }\r\n            else {\r\n                elements = [];\r\n            }\r\n            return (this.mixinElements_ = elements);\r\n        },\r\n        isJustParentSelector: function () {\r\n            return !this.mediaEmpty &&\r\n                this.elements.length === 1 &&\r\n                this.elements[0].value === '&' &&\r\n                (this.elements[0].combinator.value === ' ' || this.elements[0].combinator.value === '');\r\n        },\r\n        eval: function (context) {\r\n            var evaldCondition = this.condition && this.condition.eval(context);\r\n            var elements = this.elements;\r\n            var extendList = this.extendList;\r\n            elements = elements && elements.map(function (e) { return e.eval(context); });\r\n            extendList = extendList && extendList.map(function (extend) { return extend.eval(context); });\r\n            return this.createDerived(elements, extendList, evaldCondition);\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i, element;\r\n            if ((!context || !context.firstSelector) && this.elements[0].combinator.value === '') {\r\n                output.add(' ', this.fileInfo(), this.getIndex());\r\n            }\r\n            for (i = 0; i < this.elements.length; i++) {\r\n                element = this.elements[i];\r\n                element.genCSS(context, output);\r\n            }\r\n        },\r\n        getIsOutput: function () {\r\n            return this.evaldCondition;\r\n        }\r\n    });\n\n    var Value = function (value) {\r\n        if (!value) {\r\n            throw new Error('Value requires an array argument');\r\n        }\r\n        if (!Array.isArray(value)) {\r\n            this.value = [value];\r\n        }\r\n        else {\r\n            this.value = value;\r\n        }\r\n    };\r\n    Value.prototype = Object.assign(new Node(), {\r\n        type: 'Value',\r\n        accept: function (visitor) {\r\n            if (this.value) {\r\n                this.value = visitor.visitArray(this.value);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            if (this.value.length === 1) {\r\n                return this.value[0].eval(context);\r\n            }\r\n            else {\r\n                return new Value(this.value.map(function (v) {\r\n                    return v.eval(context);\r\n                }));\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i;\r\n            for (i = 0; i < this.value.length; i++) {\r\n                this.value[i].genCSS(context, output);\r\n                if (i + 1 < this.value.length) {\r\n                    output.add((context && context.compress) ? ',' : ', ');\r\n                }\r\n            }\r\n        }\r\n    });\n\n    var Keyword = function (value) {\r\n        this.value = value;\r\n    };\r\n    Keyword.prototype = Object.assign(new Node(), {\r\n        type: 'Keyword',\r\n        genCSS: function (context, output) {\r\n            if (this.value === '%') {\r\n                throw { type: 'Syntax', message: 'Invalid % without number' };\r\n            }\r\n            output.add(this.value);\r\n        }\r\n    });\r\n    Keyword.True = new Keyword('true');\r\n    Keyword.False = new Keyword('false');\n\n    var Anonymous = function (value, index, currentFileInfo, mapLines, rulesetLike, visibilityInfo) {\r\n        this.value = value;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.mapLines = mapLines;\r\n        this.rulesetLike = (typeof rulesetLike === 'undefined') ? false : rulesetLike;\r\n        this.allowRoot = true;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n    };\r\n    Anonymous.prototype = Object.assign(new Node(), {\r\n        type: 'Anonymous',\r\n        eval: function () {\r\n            return new Anonymous(this.value, this._index, this._fileInfo, this.mapLines, this.rulesetLike, this.visibilityInfo());\r\n        },\r\n        compare: function (other) {\r\n            return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\r\n        },\r\n        isRulesetLike: function () {\r\n            return this.rulesetLike;\r\n        },\r\n        genCSS: function (context, output) {\r\n            this.nodeVisible = Boolean(this.value);\r\n            if (this.nodeVisible) {\r\n                output.add(this.value, this._fileInfo, this._index, this.mapLines);\r\n            }\r\n        }\r\n    });\n\n    var MATH$1 = Math$1;\r\n    function evalName(context, name) {\r\n        var value = '';\r\n        var i;\r\n        var n = name.length;\r\n        var output = { add: function (s) { value += s; } };\r\n        for (i = 0; i < n; i++) {\r\n            name[i].eval(context).genCSS(context, output);\r\n        }\r\n        return value;\r\n    }\r\n    var Declaration = function (name, value, important, merge, index, currentFileInfo, inline, variable) {\r\n        this.name = name;\r\n        this.value = (value instanceof Node) ? value : new Value([value ? new Anonymous(value) : null]);\r\n        this.important = important ? \" \" + important.trim() : '';\r\n        this.merge = merge;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.inline = inline || false;\r\n        this.variable = (variable !== undefined) ? variable\r\n            : (name.charAt && (name.charAt(0) === '@'));\r\n        this.allowRoot = true;\r\n        this.setParent(this.value, this);\r\n    };\r\n    Declaration.prototype = Object.assign(new Node(), {\r\n        type: 'Declaration',\r\n        genCSS: function (context, output) {\r\n            output.add(this.name + (context.compress ? ':' : ': '), this.fileInfo(), this.getIndex());\r\n            try {\r\n                this.value.genCSS(context, output);\r\n            }\r\n            catch (e) {\r\n                e.index = this._index;\r\n                e.filename = this._fileInfo.filename;\r\n                throw e;\r\n            }\r\n            output.add(this.important + ((this.inline || (context.lastRule && context.compress)) ? '' : ';'), this._fileInfo, this._index);\r\n        },\r\n        eval: function (context) {\r\n            var mathBypass = false, prevMath, name = this.name, evaldValue, variable = this.variable;\r\n            if (typeof name !== 'string') {\r\n                // expand 'primitive' name directly to get\r\n                // things faster (~10% for benchmark.less):\r\n                name = (name.length === 1) && (name[0] instanceof Keyword) ?\r\n                    name[0].value : evalName(context, name);\r\n                variable = false; // never treat expanded interpolation as new variable name\r\n            }\r\n            // @todo remove when parens-division is default\r\n            if (name === 'font' && context.math === MATH$1.ALWAYS) {\r\n                mathBypass = true;\r\n                prevMath = context.math;\r\n                context.math = MATH$1.PARENS_DIVISION;\r\n            }\r\n            try {\r\n                context.importantScope.push({});\r\n                evaldValue = this.value.eval(context);\r\n                if (!this.variable && evaldValue.type === 'DetachedRuleset') {\r\n                    throw { message: 'Rulesets cannot be evaluated on a property.',\r\n                        index: this.getIndex(), filename: this.fileInfo().filename };\r\n                }\r\n                var important = this.important;\r\n                var importantResult = context.importantScope.pop();\r\n                if (!important && importantResult.important) {\r\n                    important = importantResult.important;\r\n                }\r\n                return new Declaration(name, evaldValue, important, this.merge, this.getIndex(), this.fileInfo(), this.inline, variable);\r\n            }\r\n            catch (e) {\r\n                if (typeof e.index !== 'number') {\r\n                    e.index = this.getIndex();\r\n                    e.filename = this.fileInfo().filename;\r\n                }\r\n                throw e;\r\n            }\r\n            finally {\r\n                if (mathBypass) {\r\n                    context.math = prevMath;\r\n                }\r\n            }\r\n        },\r\n        makeImportant: function () {\r\n            return new Declaration(this.name, this.value, '!important', this.merge, this.getIndex(), this.fileInfo(), this.inline);\r\n        }\r\n    });\n\n    function asComment(ctx) {\r\n        return \"/* line \" + ctx.debugInfo.lineNumber + \", \" + ctx.debugInfo.fileName + \" */\\n\";\r\n    }\r\n    function asMediaQuery(ctx) {\r\n        var filenameWithProtocol = ctx.debugInfo.fileName;\r\n        if (!/^[a-z]+:\\/\\//i.test(filenameWithProtocol)) {\r\n            filenameWithProtocol = \"file://\" + filenameWithProtocol;\r\n        }\r\n        return \"@media -sass-debug-info{filename{font-family:\" + filenameWithProtocol.replace(/([.:\\/\\\\])/g, function (a) {\r\n            if (a == '\\\\') {\r\n                a = '\\/';\r\n            }\r\n            return \"\\\\\" + a;\r\n        }) + \"}line{font-family:\\\\00003\" + ctx.debugInfo.lineNumber + \"}}\\n\";\r\n    }\r\n    function debugInfo(context, ctx, lineSeparator) {\r\n        var result = '';\r\n        if (context.dumpLineNumbers && !context.compress) {\r\n            switch (context.dumpLineNumbers) {\r\n                case 'comments':\r\n                    result = asComment(ctx);\r\n                    break;\r\n                case 'mediaquery':\r\n                    result = asMediaQuery(ctx);\r\n                    break;\r\n                case 'all':\r\n                    result = asComment(ctx) + (lineSeparator || '') + asMediaQuery(ctx);\r\n                    break;\r\n            }\r\n        }\r\n        return result;\r\n    }\n\n    var Comment = function (value, isLineComment, index, currentFileInfo) {\r\n        this.value = value;\r\n        this.isLineComment = isLineComment;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.allowRoot = true;\r\n    };\r\n    Comment.prototype = Object.assign(new Node(), {\r\n        type: 'Comment',\r\n        genCSS: function (context, output) {\r\n            if (this.debugInfo) {\r\n                output.add(debugInfo(context, this), this.fileInfo(), this.getIndex());\r\n            }\r\n            output.add(this.value);\r\n        },\r\n        isSilent: function (context) {\r\n            var isCompressed = context.compress && this.value[2] !== '!';\r\n            return this.isLineComment || isCompressed;\r\n        }\r\n    });\n\n    var contexts = {};\r\n    var copyFromOriginal = function copyFromOriginal(original, destination, propertiesToCopy) {\r\n        if (!original) {\r\n            return;\r\n        }\r\n        for (var i = 0; i < propertiesToCopy.length; i++) {\r\n            if (original.hasOwnProperty(propertiesToCopy[i])) {\r\n                destination[propertiesToCopy[i]] = original[propertiesToCopy[i]];\r\n            }\r\n        }\r\n    };\r\n    /*\r\n     parse is used whilst parsing\r\n     */\r\n    var parseCopyProperties = [\r\n        // options\r\n        'paths',\r\n        'rewriteUrls',\r\n        'rootpath',\r\n        'strictImports',\r\n        'insecure',\r\n        'dumpLineNumbers',\r\n        'compress',\r\n        'syncImport',\r\n        'chunkInput',\r\n        'mime',\r\n        'useFileCache',\r\n        // context\r\n        'processImports',\r\n        // Used by the import manager to stop multiple import visitors being created.\r\n        'pluginManager' // Used as the plugin manager for the session\r\n    ];\r\n    contexts.Parse = function (options) {\r\n        copyFromOriginal(options, this, parseCopyProperties);\r\n        if (typeof this.paths === 'string') {\r\n            this.paths = [this.paths];\r\n        }\r\n    };\r\n    var evalCopyProperties = [\r\n        'paths',\r\n        'compress',\r\n        'math',\r\n        'strictUnits',\r\n        'sourceMap',\r\n        'importMultiple',\r\n        'urlArgs',\r\n        'javascriptEnabled',\r\n        'pluginManager',\r\n        'importantScope',\r\n        'rewriteUrls' // option - whether to adjust URL's to be relative\r\n    ];\r\n    contexts.Eval = function (options, frames) {\r\n        copyFromOriginal(options, this, evalCopyProperties);\r\n        if (typeof this.paths === 'string') {\r\n            this.paths = [this.paths];\r\n        }\r\n        this.frames = frames || [];\r\n        this.importantScope = this.importantScope || [];\r\n    };\r\n    contexts.Eval.prototype.enterCalc = function () {\r\n        if (!this.calcStack) {\r\n            this.calcStack = [];\r\n        }\r\n        this.calcStack.push(true);\r\n        this.inCalc = true;\r\n    };\r\n    contexts.Eval.prototype.exitCalc = function () {\r\n        this.calcStack.pop();\r\n        if (!this.calcStack.length) {\r\n            this.inCalc = false;\r\n        }\r\n    };\r\n    contexts.Eval.prototype.inParenthesis = function () {\r\n        if (!this.parensStack) {\r\n            this.parensStack = [];\r\n        }\r\n        this.parensStack.push(true);\r\n    };\r\n    contexts.Eval.prototype.outOfParenthesis = function () {\r\n        this.parensStack.pop();\r\n    };\r\n    contexts.Eval.prototype.inCalc = false;\r\n    contexts.Eval.prototype.mathOn = true;\r\n    contexts.Eval.prototype.isMathOn = function (op) {\r\n        if (!this.mathOn) {\r\n            return false;\r\n        }\r\n        if (op === '/' && this.math !== Math$1.ALWAYS && (!this.parensStack || !this.parensStack.length)) {\r\n            return false;\r\n        }\r\n        if (this.math > Math$1.PARENS_DIVISION) {\r\n            return this.parensStack && this.parensStack.length;\r\n        }\r\n        return true;\r\n    };\r\n    contexts.Eval.prototype.pathRequiresRewrite = function (path) {\r\n        var isRelative = this.rewriteUrls === RewriteUrls.LOCAL ? isPathLocalRelative : isPathRelative;\r\n        return isRelative(path);\r\n    };\r\n    contexts.Eval.prototype.rewritePath = function (path, rootpath) {\r\n        var newPath;\r\n        rootpath = rootpath || '';\r\n        newPath = this.normalizePath(rootpath + path);\r\n        // If a path was explicit relative and the rootpath was not an absolute path\r\n        // we must ensure that the new path is also explicit relative.\r\n        if (isPathLocalRelative(path) &&\r\n            isPathRelative(rootpath) &&\r\n            isPathLocalRelative(newPath) === false) {\r\n            newPath = \"./\" + newPath;\r\n        }\r\n        return newPath;\r\n    };\r\n    contexts.Eval.prototype.normalizePath = function (path) {\r\n        var segments = path.split('/').reverse();\r\n        var segment;\r\n        path = [];\r\n        while (segments.length !== 0) {\r\n            segment = segments.pop();\r\n            switch (segment) {\r\n                case '.':\r\n                    break;\r\n                case '..':\r\n                    if ((path.length === 0) || (path[path.length - 1] === '..')) {\r\n                        path.push(segment);\r\n                    }\r\n                    else {\r\n                        path.pop();\r\n                    }\r\n                    break;\r\n                default:\r\n                    path.push(segment);\r\n                    break;\r\n            }\r\n        }\r\n        return path.join('/');\r\n    };\r\n    function isPathRelative(path) {\r\n        return !/^(?:[a-z-]+:|\\/|#)/i.test(path);\r\n    }\r\n    function isPathLocalRelative(path) {\r\n        return path.charAt(0) === '.';\r\n    }\r\n    // todo - do the same for the toCSS ?\n\n    function makeRegistry(base) {\r\n        return {\r\n            _data: {},\r\n            add: function (name, func) {\r\n                // precautionary case conversion, as later querying of\r\n                // the registry by function-caller uses lower case as well.\r\n                name = name.toLowerCase();\r\n                if (this._data.hasOwnProperty(name)) ;\r\n                this._data[name] = func;\r\n            },\r\n            addMultiple: function (functions) {\r\n                var _this = this;\r\n                Object.keys(functions).forEach(function (name) {\r\n                    _this.add(name, functions[name]);\r\n                });\r\n            },\r\n            get: function (name) {\r\n                return this._data[name] || (base && base.get(name));\r\n            },\r\n            getLocalFunctions: function () {\r\n                return this._data;\r\n            },\r\n            inherit: function () {\r\n                return makeRegistry(this);\r\n            },\r\n            create: function (base) {\r\n                return makeRegistry(base);\r\n            }\r\n        };\r\n    }\r\n    var functionRegistry = makeRegistry(null);\n\n    var defaultFunc = {\r\n        eval: function () {\r\n            var v = this.value_;\r\n            var e = this.error_;\r\n            if (e) {\r\n                throw e;\r\n            }\r\n            if (v != null) {\r\n                return v ? Keyword.True : Keyword.False;\r\n            }\r\n        },\r\n        value: function (v) {\r\n            this.value_ = v;\r\n        },\r\n        error: function (e) {\r\n            this.error_ = e;\r\n        },\r\n        reset: function () {\r\n            this.value_ = this.error_ = null;\r\n        }\r\n    };\n\n    var Ruleset = function (selectors, rules, strictImports, visibilityInfo) {\r\n        this.selectors = selectors;\r\n        this.rules = rules;\r\n        this._lookups = {};\r\n        this._variables = null;\r\n        this._properties = null;\r\n        this.strictImports = strictImports;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        this.setParent(this.selectors, this);\r\n        this.setParent(this.rules, this);\r\n    };\r\n    Ruleset.prototype = Object.assign(new Node(), {\r\n        type: 'Ruleset',\r\n        isRuleset: true,\r\n        isRulesetLike: function () { return true; },\r\n        accept: function (visitor) {\r\n            if (this.paths) {\r\n                this.paths = visitor.visitArray(this.paths, true);\r\n            }\r\n            else if (this.selectors) {\r\n                this.selectors = visitor.visitArray(this.selectors);\r\n            }\r\n            if (this.rules && this.rules.length) {\r\n                this.rules = visitor.visitArray(this.rules);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var selectors;\r\n            var selCnt;\r\n            var selector;\r\n            var i;\r\n            var hasVariable;\r\n            var hasOnePassingSelector = false;\r\n            if (this.selectors && (selCnt = this.selectors.length)) {\r\n                selectors = new Array(selCnt);\r\n                defaultFunc.error({\r\n                    type: 'Syntax',\r\n                    message: 'it is currently only allowed in parametric mixin guards,'\r\n                });\r\n                for (i = 0; i < selCnt; i++) {\r\n                    selector = this.selectors[i].eval(context);\r\n                    for (var j = 0; j < selector.elements.length; j++) {\r\n                        if (selector.elements[j].isVariable) {\r\n                            hasVariable = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    selectors[i] = selector;\r\n                    if (selector.evaldCondition) {\r\n                        hasOnePassingSelector = true;\r\n                    }\r\n                }\r\n                if (hasVariable) {\r\n                    var toParseSelectors = new Array(selCnt);\r\n                    for (i = 0; i < selCnt; i++) {\r\n                        selector = selectors[i];\r\n                        toParseSelectors[i] = selector.toCSS(context);\r\n                    }\r\n                    this.parse.parseNode(toParseSelectors.join(','), [\"selectors\"], selectors[0].getIndex(), selectors[0].fileInfo(), function (err, result) {\r\n                        if (result) {\r\n                            selectors = flattenArray(result);\r\n                        }\r\n                    });\r\n                }\r\n                defaultFunc.reset();\r\n            }\r\n            else {\r\n                hasOnePassingSelector = true;\r\n            }\r\n            var rules = this.rules ? copyArray(this.rules) : null;\r\n            var ruleset = new Ruleset(selectors, rules, this.strictImports, this.visibilityInfo());\r\n            var rule;\r\n            var subRule;\r\n            ruleset.originalRuleset = this;\r\n            ruleset.root = this.root;\r\n            ruleset.firstRoot = this.firstRoot;\r\n            ruleset.allowImports = this.allowImports;\r\n            if (this.debugInfo) {\r\n                ruleset.debugInfo = this.debugInfo;\r\n            }\r\n            if (!hasOnePassingSelector) {\r\n                rules.length = 0;\r\n            }\r\n            // inherit a function registry from the frames stack when possible;\r\n            // otherwise from the global registry\r\n            ruleset.functionRegistry = (function (frames) {\r\n                var i = 0;\r\n                var n = frames.length;\r\n                var found;\r\n                for (; i !== n; ++i) {\r\n                    found = frames[i].functionRegistry;\r\n                    if (found) {\r\n                        return found;\r\n                    }\r\n                }\r\n                return functionRegistry;\r\n            }(context.frames)).inherit();\r\n            // push the current ruleset to the frames stack\r\n            var ctxFrames = context.frames;\r\n            ctxFrames.unshift(ruleset);\r\n            // currrent selectors\r\n            var ctxSelectors = context.selectors;\r\n            if (!ctxSelectors) {\r\n                context.selectors = ctxSelectors = [];\r\n            }\r\n            ctxSelectors.unshift(this.selectors);\r\n            // Evaluate imports\r\n            if (ruleset.root || ruleset.allowImports || !ruleset.strictImports) {\r\n                ruleset.evalImports(context);\r\n            }\r\n            // Store the frames around mixin definitions,\r\n            // so they can be evaluated like closures when the time comes.\r\n            var rsRules = ruleset.rules;\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (rule.evalFirst) {\r\n                    rsRules[i] = rule.eval(context);\r\n                }\r\n            }\r\n            var mediaBlockCount = (context.mediaBlocks && context.mediaBlocks.length) || 0;\r\n            // Evaluate mixin calls.\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (rule.type === 'MixinCall') {\r\n                    /* jshint loopfunc:true */\r\n                    rules = rule.eval(context).filter(function (r) {\r\n                        if ((r instanceof Declaration) && r.variable) {\r\n                            // do not pollute the scope if the variable is\r\n                            // already there. consider returning false here\r\n                            // but we need a way to \"return\" variable from mixins\r\n                            return !(ruleset.variable(r.name));\r\n                        }\r\n                        return true;\r\n                    });\r\n                    rsRules.splice.apply(rsRules, [i, 1].concat(rules));\r\n                    i += rules.length - 1;\r\n                    ruleset.resetCache();\r\n                }\r\n                else if (rule.type === 'VariableCall') {\r\n                    /* jshint loopfunc:true */\r\n                    rules = rule.eval(context).rules.filter(function (r) {\r\n                        if ((r instanceof Declaration) && r.variable) {\r\n                            // do not pollute the scope at all\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                    rsRules.splice.apply(rsRules, [i, 1].concat(rules));\r\n                    i += rules.length - 1;\r\n                    ruleset.resetCache();\r\n                }\r\n            }\r\n            // Evaluate everything else\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (!rule.evalFirst) {\r\n                    rsRules[i] = rule = rule.eval ? rule.eval(context) : rule;\r\n                }\r\n            }\r\n            // Evaluate everything else\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                // for rulesets, check if it is a css guard and can be removed\r\n                if (rule instanceof Ruleset && rule.selectors && rule.selectors.length === 1) {\r\n                    // check if it can be folded in (e.g. & where)\r\n                    if (rule.selectors[0] && rule.selectors[0].isJustParentSelector()) {\r\n                        rsRules.splice(i--, 1);\r\n                        for (var j = 0; (subRule = rule.rules[j]); j++) {\r\n                            if (subRule instanceof Node) {\r\n                                subRule.copyVisibilityInfo(rule.visibilityInfo());\r\n                                if (!(subRule instanceof Declaration) || !subRule.variable) {\r\n                                    rsRules.splice(++i, 0, subRule);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Pop the stack\r\n            ctxFrames.shift();\r\n            ctxSelectors.shift();\r\n            if (context.mediaBlocks) {\r\n                for (i = mediaBlockCount; i < context.mediaBlocks.length; i++) {\r\n                    context.mediaBlocks[i].bubbleSelectors(selectors);\r\n                }\r\n            }\r\n            return ruleset;\r\n        },\r\n        evalImports: function (context) {\r\n            var rules = this.rules;\r\n            var i;\r\n            var importRules;\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            for (i = 0; i < rules.length; i++) {\r\n                if (rules[i].type === 'Import') {\r\n                    importRules = rules[i].eval(context);\r\n                    if (importRules && (importRules.length || importRules.length === 0)) {\r\n                        rules.splice.apply(rules, [i, 1].concat(importRules));\r\n                        i += importRules.length - 1;\r\n                    }\r\n                    else {\r\n                        rules.splice(i, 1, importRules);\r\n                    }\r\n                    this.resetCache();\r\n                }\r\n            }\r\n        },\r\n        makeImportant: function () {\r\n            var result = new Ruleset(this.selectors, this.rules.map(function (r) {\r\n                if (r.makeImportant) {\r\n                    return r.makeImportant();\r\n                }\r\n                else {\r\n                    return r;\r\n                }\r\n            }), this.strictImports, this.visibilityInfo());\r\n            return result;\r\n        },\r\n        matchArgs: function (args) {\r\n            return !args || args.length === 0;\r\n        },\r\n        // lets you call a css selector with a guard\r\n        matchCondition: function (args, context) {\r\n            var lastSelector = this.selectors[this.selectors.length - 1];\r\n            if (!lastSelector.evaldCondition) {\r\n                return false;\r\n            }\r\n            if (lastSelector.condition &&\r\n                !lastSelector.condition.eval(new contexts.Eval(context, context.frames))) {\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        resetCache: function () {\r\n            this._rulesets = null;\r\n            this._variables = null;\r\n            this._properties = null;\r\n            this._lookups = {};\r\n        },\r\n        variables: function () {\r\n            if (!this._variables) {\r\n                this._variables = !this.rules ? {} : this.rules.reduce(function (hash, r) {\r\n                    if (r instanceof Declaration && r.variable === true) {\r\n                        hash[r.name] = r;\r\n                    }\r\n                    // when evaluating variables in an import statement, imports have not been eval'd\r\n                    // so we need to go inside import statements.\r\n                    // guard against root being a string (in the case of inlined less)\r\n                    if (r.type === 'Import' && r.root && r.root.variables) {\r\n                        var vars = r.root.variables();\r\n                        for (var name_1 in vars) {\r\n                            if (vars.hasOwnProperty(name_1)) {\r\n                                hash[name_1] = r.root.variable(name_1);\r\n                            }\r\n                        }\r\n                    }\r\n                    return hash;\r\n                }, {});\r\n            }\r\n            return this._variables;\r\n        },\r\n        properties: function () {\r\n            if (!this._properties) {\r\n                this._properties = !this.rules ? {} : this.rules.reduce(function (hash, r) {\r\n                    if (r instanceof Declaration && r.variable !== true) {\r\n                        var name_2 = (r.name.length === 1) && (r.name[0] instanceof Keyword) ?\r\n                            r.name[0].value : r.name;\r\n                        // Properties don't overwrite as they can merge\r\n                        if (!hash[\"$\" + name_2]) {\r\n                            hash[\"$\" + name_2] = [r];\r\n                        }\r\n                        else {\r\n                            hash[\"$\" + name_2].push(r);\r\n                        }\r\n                    }\r\n                    return hash;\r\n                }, {});\r\n            }\r\n            return this._properties;\r\n        },\r\n        variable: function (name) {\r\n            var decl = this.variables()[name];\r\n            if (decl) {\r\n                return this.parseValue(decl);\r\n            }\r\n        },\r\n        property: function (name) {\r\n            var decl = this.properties()[name];\r\n            if (decl) {\r\n                return this.parseValue(decl);\r\n            }\r\n        },\r\n        lastDeclaration: function () {\r\n            for (var i = this.rules.length; i > 0; i--) {\r\n                var decl = this.rules[i - 1];\r\n                if (decl instanceof Declaration) {\r\n                    return this.parseValue(decl);\r\n                }\r\n            }\r\n        },\r\n        parseValue: function (toParse) {\r\n            var self = this;\r\n            function transformDeclaration(decl) {\r\n                if (decl.value instanceof Anonymous && !decl.parsed) {\r\n                    if (typeof decl.value.value === 'string') {\r\n                        this.parse.parseNode(decl.value.value, ['value', 'important'], decl.value.getIndex(), decl.fileInfo(), function (err, result) {\r\n                            if (err) {\r\n                                decl.parsed = true;\r\n                            }\r\n                            if (result) {\r\n                                decl.value = result[0];\r\n                                decl.important = result[1] || '';\r\n                                decl.parsed = true;\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        decl.parsed = true;\r\n                    }\r\n                    return decl;\r\n                }\r\n                else {\r\n                    return decl;\r\n                }\r\n            }\r\n            if (!Array.isArray(toParse)) {\r\n                return transformDeclaration.call(self, toParse);\r\n            }\r\n            else {\r\n                var nodes_1 = [];\r\n                toParse.forEach(function (n) {\r\n                    nodes_1.push(transformDeclaration.call(self, n));\r\n                });\r\n                return nodes_1;\r\n            }\r\n        },\r\n        rulesets: function () {\r\n            if (!this.rules) {\r\n                return [];\r\n            }\r\n            var filtRules = [];\r\n            var rules = this.rules;\r\n            var i;\r\n            var rule;\r\n            for (i = 0; (rule = rules[i]); i++) {\r\n                if (rule.isRuleset) {\r\n                    filtRules.push(rule);\r\n                }\r\n            }\r\n            return filtRules;\r\n        },\r\n        prependRule: function (rule) {\r\n            var rules = this.rules;\r\n            if (rules) {\r\n                rules.unshift(rule);\r\n            }\r\n            else {\r\n                this.rules = [rule];\r\n            }\r\n            this.setParent(rule, this);\r\n        },\r\n        find: function (selector, self, filter) {\r\n            self = self || this;\r\n            var rules = [];\r\n            var match;\r\n            var foundMixins;\r\n            var key = selector.toCSS();\r\n            if (key in this._lookups) {\r\n                return this._lookups[key];\r\n            }\r\n            this.rulesets().forEach(function (rule) {\r\n                if (rule !== self) {\r\n                    for (var j = 0; j < rule.selectors.length; j++) {\r\n                        match = selector.match(rule.selectors[j]);\r\n                        if (match) {\r\n                            if (selector.elements.length > match) {\r\n                                if (!filter || filter(rule)) {\r\n                                    foundMixins = rule.find(new Selector(selector.elements.slice(match)), self, filter);\r\n                                    for (var i = 0; i < foundMixins.length; ++i) {\r\n                                        foundMixins[i].path.push(rule);\r\n                                    }\r\n                                    Array.prototype.push.apply(rules, foundMixins);\r\n                                }\r\n                            }\r\n                            else {\r\n                                rules.push({ rule: rule, path: [] });\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this._lookups[key] = rules;\r\n            return rules;\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i;\r\n            var j;\r\n            var charsetRuleNodes = [];\r\n            var ruleNodes = [];\r\n            var // Line number debugging\r\n            debugInfo$1;\r\n            var rule;\r\n            var path;\r\n            context.tabLevel = (context.tabLevel || 0);\r\n            if (!this.root) {\r\n                context.tabLevel++;\r\n            }\r\n            var tabRuleStr = context.compress ? '' : Array(context.tabLevel + 1).join('  ');\r\n            var tabSetStr = context.compress ? '' : Array(context.tabLevel).join('  ');\r\n            var sep;\r\n            var charsetNodeIndex = 0;\r\n            var importNodeIndex = 0;\r\n            for (i = 0; (rule = this.rules[i]); i++) {\r\n                if (rule instanceof Comment) {\r\n                    if (importNodeIndex === i) {\r\n                        importNodeIndex++;\r\n                    }\r\n                    ruleNodes.push(rule);\r\n                }\r\n                else if (rule.isCharset && rule.isCharset()) {\r\n                    ruleNodes.splice(charsetNodeIndex, 0, rule);\r\n                    charsetNodeIndex++;\r\n                    importNodeIndex++;\r\n                }\r\n                else if (rule.type === 'Import') {\r\n                    ruleNodes.splice(importNodeIndex, 0, rule);\r\n                    importNodeIndex++;\r\n                }\r\n                else {\r\n                    ruleNodes.push(rule);\r\n                }\r\n            }\r\n            ruleNodes = charsetRuleNodes.concat(ruleNodes);\r\n            // If this is the root node, we don't render\r\n            // a selector, or {}.\r\n            if (!this.root) {\r\n                debugInfo$1 = debugInfo(context, this, tabSetStr);\r\n                if (debugInfo$1) {\r\n                    output.add(debugInfo$1);\r\n                    output.add(tabSetStr);\r\n                }\r\n                var paths = this.paths;\r\n                var pathCnt = paths.length;\r\n                var pathSubCnt = void 0;\r\n                sep = context.compress ? ',' : (\",\\n\" + tabSetStr);\r\n                for (i = 0; i < pathCnt; i++) {\r\n                    path = paths[i];\r\n                    if (!(pathSubCnt = path.length)) {\r\n                        continue;\r\n                    }\r\n                    if (i > 0) {\r\n                        output.add(sep);\r\n                    }\r\n                    context.firstSelector = true;\r\n                    path[0].genCSS(context, output);\r\n                    context.firstSelector = false;\r\n                    for (j = 1; j < pathSubCnt; j++) {\r\n                        path[j].genCSS(context, output);\r\n                    }\r\n                }\r\n                output.add((context.compress ? '{' : ' {\\n') + tabRuleStr);\r\n            }\r\n            // Compile rules and rulesets\r\n            for (i = 0; (rule = ruleNodes[i]); i++) {\r\n                if (i + 1 === ruleNodes.length) {\r\n                    context.lastRule = true;\r\n                }\r\n                var currentLastRule = context.lastRule;\r\n                if (rule.isRulesetLike(rule)) {\r\n                    context.lastRule = false;\r\n                }\r\n                if (rule.genCSS) {\r\n                    rule.genCSS(context, output);\r\n                }\r\n                else if (rule.value) {\r\n                    output.add(rule.value.toString());\r\n                }\r\n                context.lastRule = currentLastRule;\r\n                if (!context.lastRule && rule.isVisible()) {\r\n                    output.add(context.compress ? '' : (\"\\n\" + tabRuleStr));\r\n                }\r\n                else {\r\n                    context.lastRule = false;\r\n                }\r\n            }\r\n            if (!this.root) {\r\n                output.add((context.compress ? '}' : \"\\n\" + tabSetStr + \"}\"));\r\n                context.tabLevel--;\r\n            }\r\n            if (!output.isEmpty() && !context.compress && this.firstRoot) {\r\n                output.add('\\n');\r\n            }\r\n        },\r\n        joinSelectors: function (paths, context, selectors) {\r\n            for (var s = 0; s < selectors.length; s++) {\r\n                this.joinSelector(paths, context, selectors[s]);\r\n            }\r\n        },\r\n        joinSelector: function (paths, context, selector) {\r\n            function createParenthesis(elementsToPak, originalElement) {\r\n                var replacementParen, j;\r\n                if (elementsToPak.length === 0) {\r\n                    replacementParen = new Paren(elementsToPak[0]);\r\n                }\r\n                else {\r\n                    var insideParent = new Array(elementsToPak.length);\r\n                    for (j = 0; j < elementsToPak.length; j++) {\r\n                        insideParent[j] = new Element(null, elementsToPak[j], originalElement.isVariable, originalElement._index, originalElement._fileInfo);\r\n                    }\r\n                    replacementParen = new Paren(new Selector(insideParent));\r\n                }\r\n                return replacementParen;\r\n            }\r\n            function createSelector(containedElement, originalElement) {\r\n                var element, selector;\r\n                element = new Element(null, containedElement, originalElement.isVariable, originalElement._index, originalElement._fileInfo);\r\n                selector = new Selector([element]);\r\n                return selector;\r\n            }\r\n            // joins selector path from `beginningPath` with selector path in `addPath`\r\n            // `replacedElement` contains element that is being replaced by `addPath`\r\n            // returns concatenated path\r\n            function addReplacementIntoPath(beginningPath, addPath, replacedElement, originalSelector) {\r\n                var newSelectorPath, lastSelector, newJoinedSelector;\r\n                // our new selector path\r\n                newSelectorPath = [];\r\n                // construct the joined selector - if & is the first thing this will be empty,\r\n                // if not newJoinedSelector will be the last set of elements in the selector\r\n                if (beginningPath.length > 0) {\r\n                    newSelectorPath = copyArray(beginningPath);\r\n                    lastSelector = newSelectorPath.pop();\r\n                    newJoinedSelector = originalSelector.createDerived(copyArray(lastSelector.elements));\r\n                }\r\n                else {\r\n                    newJoinedSelector = originalSelector.createDerived([]);\r\n                }\r\n                if (addPath.length > 0) {\r\n                    // /deep/ is a CSS4 selector - (removed, so should deprecate)\r\n                    // that is valid without anything in front of it\r\n                    // so if the & does not have a combinator that is \"\" or \" \" then\r\n                    // and there is a combinator on the parent, then grab that.\r\n                    // this also allows + a { & .b { .a & { ... though not sure why you would want to do that\r\n                    var combinator = replacedElement.combinator;\r\n                    var parentEl = addPath[0].elements[0];\r\n                    if (combinator.emptyOrWhitespace && !parentEl.combinator.emptyOrWhitespace) {\r\n                        combinator = parentEl.combinator;\r\n                    }\r\n                    // join the elements so far with the first part of the parent\r\n                    newJoinedSelector.elements.push(new Element(combinator, parentEl.value, replacedElement.isVariable, replacedElement._index, replacedElement._fileInfo));\r\n                    newJoinedSelector.elements = newJoinedSelector.elements.concat(addPath[0].elements.slice(1));\r\n                }\r\n                // now add the joined selector - but only if it is not empty\r\n                if (newJoinedSelector.elements.length !== 0) {\r\n                    newSelectorPath.push(newJoinedSelector);\r\n                }\r\n                // put together the parent selectors after the join (e.g. the rest of the parent)\r\n                if (addPath.length > 1) {\r\n                    var restOfPath = addPath.slice(1);\r\n                    restOfPath = restOfPath.map(function (selector) {\r\n                        return selector.createDerived(selector.elements, []);\r\n                    });\r\n                    newSelectorPath = newSelectorPath.concat(restOfPath);\r\n                }\r\n                return newSelectorPath;\r\n            }\r\n            // joins selector path from `beginningPath` with every selector path in `addPaths` array\r\n            // `replacedElement` contains element that is being replaced by `addPath`\r\n            // returns array with all concatenated paths\r\n            function addAllReplacementsIntoPath(beginningPath, addPaths, replacedElement, originalSelector, result) {\r\n                var j;\r\n                for (j = 0; j < beginningPath.length; j++) {\r\n                    var newSelectorPath = addReplacementIntoPath(beginningPath[j], addPaths, replacedElement, originalSelector);\r\n                    result.push(newSelectorPath);\r\n                }\r\n                return result;\r\n            }\r\n            function mergeElementsOnToSelectors(elements, selectors) {\r\n                var i, sel;\r\n                if (elements.length === 0) {\r\n                    return;\r\n                }\r\n                if (selectors.length === 0) {\r\n                    selectors.push([new Selector(elements)]);\r\n                    return;\r\n                }\r\n                for (i = 0; (sel = selectors[i]); i++) {\r\n                    // if the previous thing in sel is a parent this needs to join on to it\r\n                    if (sel.length > 0) {\r\n                        sel[sel.length - 1] = sel[sel.length - 1].createDerived(sel[sel.length - 1].elements.concat(elements));\r\n                    }\r\n                    else {\r\n                        sel.push(new Selector(elements));\r\n                    }\r\n                }\r\n            }\r\n            // replace all parent selectors inside `inSelector` by content of `context` array\r\n            // resulting selectors are returned inside `paths` array\r\n            // returns true if `inSelector` contained at least one parent selector\r\n            function replaceParentSelector(paths, context, inSelector) {\r\n                // The paths are [[Selector]]\r\n                // The first list is a list of comma separated selectors\r\n                // The inner list is a list of inheritance separated selectors\r\n                // e.g.\r\n                // .a, .b {\r\n                //   .c {\r\n                //   }\r\n                // }\r\n                // == [[.a] [.c]] [[.b] [.c]]\r\n                //\r\n                var i, j, k, currentElements, newSelectors, selectorsMultiplied, sel, el, hadParentSelector = false, length, lastSelector;\r\n                function findNestedSelector(element) {\r\n                    var maybeSelector;\r\n                    if (!(element.value instanceof Paren)) {\r\n                        return null;\r\n                    }\r\n                    maybeSelector = element.value.value;\r\n                    if (!(maybeSelector instanceof Selector)) {\r\n                        return null;\r\n                    }\r\n                    return maybeSelector;\r\n                }\r\n                // the elements from the current selector so far\r\n                currentElements = [];\r\n                // the current list of new selectors to add to the path.\r\n                // We will build it up. We initiate it with one empty selector as we \"multiply\" the new selectors\r\n                // by the parents\r\n                newSelectors = [\r\n                    []\r\n                ];\r\n                for (i = 0; (el = inSelector.elements[i]); i++) {\r\n                    // non parent reference elements just get added\r\n                    if (el.value !== '&') {\r\n                        var nestedSelector = findNestedSelector(el);\r\n                        if (nestedSelector != null) {\r\n                            // merge the current list of non parent selector elements\r\n                            // on to the current list of selectors to add\r\n                            mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                            var nestedPaths = [];\r\n                            var replaced = void 0;\r\n                            var replacedNewSelectors = [];\r\n                            replaced = replaceParentSelector(nestedPaths, context, nestedSelector);\r\n                            hadParentSelector = hadParentSelector || replaced;\r\n                            // the nestedPaths array should have only one member - replaceParentSelector does not multiply selectors\r\n                            for (k = 0; k < nestedPaths.length; k++) {\r\n                                var replacementSelector = createSelector(createParenthesis(nestedPaths[k], el), el);\r\n                                addAllReplacementsIntoPath(newSelectors, [replacementSelector], el, inSelector, replacedNewSelectors);\r\n                            }\r\n                            newSelectors = replacedNewSelectors;\r\n                            currentElements = [];\r\n                        }\r\n                        else {\r\n                            currentElements.push(el);\r\n                        }\r\n                    }\r\n                    else {\r\n                        hadParentSelector = true;\r\n                        // the new list of selectors to add\r\n                        selectorsMultiplied = [];\r\n                        // merge the current list of non parent selector elements\r\n                        // on to the current list of selectors to add\r\n                        mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                        // loop through our current selectors\r\n                        for (j = 0; j < newSelectors.length; j++) {\r\n                            sel = newSelectors[j];\r\n                            // if we don't have any parent paths, the & might be in a mixin so that it can be used\r\n                            // whether there are parents or not\r\n                            if (context.length === 0) {\r\n                                // the combinator used on el should now be applied to the next element instead so that\r\n                                // it is not lost\r\n                                if (sel.length > 0) {\r\n                                    sel[0].elements.push(new Element(el.combinator, '', el.isVariable, el._index, el._fileInfo));\r\n                                }\r\n                                selectorsMultiplied.push(sel);\r\n                            }\r\n                            else {\r\n                                // and the parent selectors\r\n                                for (k = 0; k < context.length; k++) {\r\n                                    // We need to put the current selectors\r\n                                    // then join the last selector's elements on to the parents selectors\r\n                                    var newSelectorPath = addReplacementIntoPath(sel, context[k], el, inSelector);\r\n                                    // add that to our new set of selectors\r\n                                    selectorsMultiplied.push(newSelectorPath);\r\n                                }\r\n                            }\r\n                        }\r\n                        // our new selectors has been multiplied, so reset the state\r\n                        newSelectors = selectorsMultiplied;\r\n                        currentElements = [];\r\n                    }\r\n                }\r\n                // if we have any elements left over (e.g. .a& .b == .b)\r\n                // add them on to all the current selectors\r\n                mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                for (i = 0; i < newSelectors.length; i++) {\r\n                    length = newSelectors[i].length;\r\n                    if (length > 0) {\r\n                        paths.push(newSelectors[i]);\r\n                        lastSelector = newSelectors[i][length - 1];\r\n                        newSelectors[i][length - 1] = lastSelector.createDerived(lastSelector.elements, inSelector.extendList);\r\n                    }\r\n                }\r\n                return hadParentSelector;\r\n            }\r\n            function deriveSelector(visibilityInfo, deriveFrom) {\r\n                var newSelector = deriveFrom.createDerived(deriveFrom.elements, deriveFrom.extendList, deriveFrom.evaldCondition);\r\n                newSelector.copyVisibilityInfo(visibilityInfo);\r\n                return newSelector;\r\n            }\r\n            // joinSelector code follows\r\n            var i, newPaths, hadParentSelector;\r\n            newPaths = [];\r\n            hadParentSelector = replaceParentSelector(newPaths, context, selector);\r\n            if (!hadParentSelector) {\r\n                if (context.length > 0) {\r\n                    newPaths = [];\r\n                    for (i = 0; i < context.length; i++) {\r\n                        var concatenated = context[i].map(deriveSelector.bind(this, selector.visibilityInfo()));\r\n                        concatenated.push(selector);\r\n                        newPaths.push(concatenated);\r\n                    }\r\n                }\r\n                else {\r\n                    newPaths = [[selector]];\r\n                }\r\n            }\r\n            for (i = 0; i < newPaths.length; i++) {\r\n                paths.push(newPaths[i]);\r\n            }\r\n        }\r\n    });\n\n    var AtRule = function (name, value, rules, index, currentFileInfo, debugInfo, isRooted, visibilityInfo) {\r\n        var i;\r\n        this.name = name;\r\n        this.value = (value instanceof Node) ? value : (value ? new Anonymous(value) : value);\r\n        if (rules) {\r\n            if (Array.isArray(rules)) {\r\n                this.rules = rules;\r\n            }\r\n            else {\r\n                this.rules = [rules];\r\n                this.rules[0].selectors = (new Selector([], null, null, index, currentFileInfo)).createEmptySelectors();\r\n            }\r\n            for (i = 0; i < this.rules.length; i++) {\r\n                this.rules[i].allowImports = true;\r\n            }\r\n            this.setParent(this.rules, this);\r\n        }\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.debugInfo = debugInfo;\r\n        this.isRooted = isRooted || false;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n    };\r\n    AtRule.prototype = Object.assign(new Node(), {\r\n        type: 'AtRule',\r\n        accept: function (visitor) {\r\n            var value = this.value, rules = this.rules;\r\n            if (rules) {\r\n                this.rules = visitor.visitArray(rules);\r\n            }\r\n            if (value) {\r\n                this.value = visitor.visit(value);\r\n            }\r\n        },\r\n        isRulesetLike: function () {\r\n            return this.rules || !this.isCharset();\r\n        },\r\n        isCharset: function () {\r\n            return '@charset' === this.name;\r\n        },\r\n        genCSS: function (context, output) {\r\n            var value = this.value, rules = this.rules;\r\n            output.add(this.name, this.fileInfo(), this.getIndex());\r\n            if (value) {\r\n                output.add(' ');\r\n                value.genCSS(context, output);\r\n            }\r\n            if (rules) {\r\n                this.outputRuleset(context, output, rules);\r\n            }\r\n            else {\r\n                output.add(';');\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var mediaPathBackup, mediaBlocksBackup, value = this.value, rules = this.rules;\r\n            // media stored inside other atrule should not bubble over it\r\n            // backpup media bubbling information\r\n            mediaPathBackup = context.mediaPath;\r\n            mediaBlocksBackup = context.mediaBlocks;\r\n            // deleted media bubbling information\r\n            context.mediaPath = [];\r\n            context.mediaBlocks = [];\r\n            if (value) {\r\n                value = value.eval(context);\r\n            }\r\n            if (rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                rules = [rules[0].eval(context)];\r\n                rules[0].root = true;\r\n            }\r\n            // restore media bubbling information\r\n            context.mediaPath = mediaPathBackup;\r\n            context.mediaBlocks = mediaBlocksBackup;\r\n            return new AtRule(this.name, value, rules, this.getIndex(), this.fileInfo(), this.debugInfo, this.isRooted, this.visibilityInfo());\r\n        },\r\n        variable: function (name) {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.variable.call(this.rules[0], name);\r\n            }\r\n        },\r\n        find: function () {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.find.apply(this.rules[0], arguments);\r\n            }\r\n        },\r\n        rulesets: function () {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.rulesets.apply(this.rules[0]);\r\n            }\r\n        },\r\n        outputRuleset: function (context, output, rules) {\r\n            var ruleCnt = rules.length;\r\n            var i;\r\n            context.tabLevel = (context.tabLevel | 0) + 1;\r\n            // Compressed\r\n            if (context.compress) {\r\n                output.add('{');\r\n                for (i = 0; i < ruleCnt; i++) {\r\n                    rules[i].genCSS(context, output);\r\n                }\r\n                output.add('}');\r\n                context.tabLevel--;\r\n                return;\r\n            }\r\n            // Non-compressed\r\n            var tabSetStr = \"\\n\" + Array(context.tabLevel).join('  '), tabRuleStr = tabSetStr + \"  \";\r\n            if (!ruleCnt) {\r\n                output.add(\" {\" + tabSetStr + \"}\");\r\n            }\r\n            else {\r\n                output.add(\" {\" + tabRuleStr);\r\n                rules[0].genCSS(context, output);\r\n                for (i = 1; i < ruleCnt; i++) {\r\n                    output.add(tabRuleStr);\r\n                    rules[i].genCSS(context, output);\r\n                }\r\n                output.add(tabSetStr + \"}\");\r\n            }\r\n            context.tabLevel--;\r\n        }\r\n    });\n\n    var DetachedRuleset = function (ruleset, frames) {\r\n        this.ruleset = ruleset;\r\n        this.frames = frames;\r\n        this.setParent(this.ruleset, this);\r\n    };\r\n    DetachedRuleset.prototype = Object.assign(new Node(), {\r\n        type: 'DetachedRuleset',\r\n        evalFirst: true,\r\n        accept: function (visitor) {\r\n            this.ruleset = visitor.visit(this.ruleset);\r\n        },\r\n        eval: function (context) {\r\n            var frames = this.frames || copyArray(context.frames);\r\n            return new DetachedRuleset(this.ruleset, frames);\r\n        },\r\n        callEval: function (context) {\r\n            return this.ruleset.eval(this.frames ? new contexts.Eval(context, this.frames.concat(context.frames)) : context);\r\n        }\r\n    });\n\n    var Unit = function (numerator, denominator, backupUnit) {\r\n        this.numerator = numerator ? copyArray(numerator).sort() : [];\r\n        this.denominator = denominator ? copyArray(denominator).sort() : [];\r\n        if (backupUnit) {\r\n            this.backupUnit = backupUnit;\r\n        }\r\n        else if (numerator && numerator.length) {\r\n            this.backupUnit = numerator[0];\r\n        }\r\n    };\r\n    Unit.prototype = Object.assign(new Node(), {\r\n        type: 'Unit',\r\n        clone: function () {\r\n            return new Unit(copyArray(this.numerator), copyArray(this.denominator), this.backupUnit);\r\n        },\r\n        genCSS: function (context, output) {\r\n            // Dimension checks the unit is singular and throws an error if in strict math mode.\r\n            var strictUnits = context && context.strictUnits;\r\n            if (this.numerator.length === 1) {\r\n                output.add(this.numerator[0]); // the ideal situation\r\n            }\r\n            else if (!strictUnits && this.backupUnit) {\r\n                output.add(this.backupUnit);\r\n            }\r\n            else if (!strictUnits && this.denominator.length) {\r\n                output.add(this.denominator[0]);\r\n            }\r\n        },\r\n        toString: function () {\r\n            var i, returnStr = this.numerator.join('*');\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                returnStr += \"/\" + this.denominator[i];\r\n            }\r\n            return returnStr;\r\n        },\r\n        compare: function (other) {\r\n            return this.is(other.toString()) ? 0 : undefined;\r\n        },\r\n        is: function (unitString) {\r\n            return this.toString().toUpperCase() === unitString.toUpperCase();\r\n        },\r\n        isLength: function () {\r\n            return RegExp('^(px|em|ex|ch|rem|in|cm|mm|pc|pt|ex|vw|vh|vmin|vmax)$', 'gi').test(this.toCSS());\r\n        },\r\n        isEmpty: function () {\r\n            return this.numerator.length === 0 && this.denominator.length === 0;\r\n        },\r\n        isSingular: function () {\r\n            return this.numerator.length <= 1 && this.denominator.length === 0;\r\n        },\r\n        map: function (callback) {\r\n            var i;\r\n            for (i = 0; i < this.numerator.length; i++) {\r\n                this.numerator[i] = callback(this.numerator[i], false);\r\n            }\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                this.denominator[i] = callback(this.denominator[i], true);\r\n            }\r\n        },\r\n        usedUnits: function () {\r\n            var group;\r\n            var result = {};\r\n            var mapUnit;\r\n            var groupName;\r\n            mapUnit = function (atomicUnit) {\r\n                /* jshint loopfunc:true */\r\n                if (group.hasOwnProperty(atomicUnit) && !result[groupName]) {\r\n                    result[groupName] = atomicUnit;\r\n                }\r\n                return atomicUnit;\r\n            };\r\n            for (groupName in unitConversions) {\r\n                if (unitConversions.hasOwnProperty(groupName)) {\r\n                    group = unitConversions[groupName];\r\n                    this.map(mapUnit);\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        cancel: function () {\r\n            var counter = {};\r\n            var atomicUnit;\r\n            var i;\r\n            for (i = 0; i < this.numerator.length; i++) {\r\n                atomicUnit = this.numerator[i];\r\n                counter[atomicUnit] = (counter[atomicUnit] || 0) + 1;\r\n            }\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                atomicUnit = this.denominator[i];\r\n                counter[atomicUnit] = (counter[atomicUnit] || 0) - 1;\r\n            }\r\n            this.numerator = [];\r\n            this.denominator = [];\r\n            for (atomicUnit in counter) {\r\n                if (counter.hasOwnProperty(atomicUnit)) {\r\n                    var count = counter[atomicUnit];\r\n                    if (count > 0) {\r\n                        for (i = 0; i < count; i++) {\r\n                            this.numerator.push(atomicUnit);\r\n                        }\r\n                    }\r\n                    else if (count < 0) {\r\n                        for (i = 0; i < -count; i++) {\r\n                            this.denominator.push(atomicUnit);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.numerator.sort();\r\n            this.denominator.sort();\r\n        }\r\n    });\n\n    //\r\n    // A number with a unit\r\n    //\r\n    var Dimension = function (value, unit) {\r\n        this.value = parseFloat(value);\r\n        if (isNaN(this.value)) {\r\n            throw new Error('Dimension is not a number.');\r\n        }\r\n        this.unit = (unit && unit instanceof Unit) ? unit :\r\n            new Unit(unit ? [unit] : undefined);\r\n        this.setParent(this.unit, this);\r\n    };\r\n    Dimension.prototype = Object.assign(new Node(), {\r\n        type: 'Dimension',\r\n        accept: function (visitor) {\r\n            this.unit = visitor.visit(this.unit);\r\n        },\r\n        eval: function (context) {\r\n            return this;\r\n        },\r\n        toColor: function () {\r\n            return new Color([this.value, this.value, this.value]);\r\n        },\r\n        genCSS: function (context, output) {\r\n            if ((context && context.strictUnits) && !this.unit.isSingular()) {\r\n                throw new Error(\"Multiple units in dimension. Correct the units or use the unit function. Bad unit: \" + this.unit.toString());\r\n            }\r\n            var value = this.fround(context, this.value);\r\n            var strValue = String(value);\r\n            if (value !== 0 && value < 0.000001 && value > -0.000001) {\r\n                // would be output 1e-6 etc.\r\n                strValue = value.toFixed(20).replace(/0+$/, '');\r\n            }\r\n            if (context && context.compress) {\r\n                // Zero values doesn't need a unit\r\n                if (value === 0 && this.unit.isLength()) {\r\n                    output.add(strValue);\r\n                    return;\r\n                }\r\n                // Float values doesn't need a leading zero\r\n                if (value > 0 && value < 1) {\r\n                    strValue = (strValue).substr(1);\r\n                }\r\n            }\r\n            output.add(strValue);\r\n            this.unit.genCSS(context, output);\r\n        },\r\n        // In an operation between two Dimensions,\r\n        // we default to the first Dimension's unit,\r\n        // so `1px + 2` will yield `3px`.\r\n        operate: function (context, op, other) {\r\n            /* jshint noempty:false */\r\n            var value = this._operate(context, op, this.value, other.value);\r\n            var unit = this.unit.clone();\r\n            if (op === '+' || op === '-') {\r\n                if (unit.numerator.length === 0 && unit.denominator.length === 0) {\r\n                    unit = other.unit.clone();\r\n                    if (this.unit.backupUnit) {\r\n                        unit.backupUnit = this.unit.backupUnit;\r\n                    }\r\n                }\r\n                else if (other.unit.numerator.length === 0 && unit.denominator.length === 0) ;\r\n                else {\r\n                    other = other.convertTo(this.unit.usedUnits());\r\n                    if (context.strictUnits && other.unit.toString() !== unit.toString()) {\r\n                        throw new Error(\"Incompatible units. Change the units or use the unit function. \"\r\n                            + (\"Bad units: '\" + unit.toString() + \"' and '\" + other.unit.toString() + \"'.\"));\r\n                    }\r\n                    value = this._operate(context, op, this.value, other.value);\r\n                }\r\n            }\r\n            else if (op === '*') {\r\n                unit.numerator = unit.numerator.concat(other.unit.numerator).sort();\r\n                unit.denominator = unit.denominator.concat(other.unit.denominator).sort();\r\n                unit.cancel();\r\n            }\r\n            else if (op === '/') {\r\n                unit.numerator = unit.numerator.concat(other.unit.denominator).sort();\r\n                unit.denominator = unit.denominator.concat(other.unit.numerator).sort();\r\n                unit.cancel();\r\n            }\r\n            return new Dimension(value, unit);\r\n        },\r\n        compare: function (other) {\r\n            var a, b;\r\n            if (!(other instanceof Dimension)) {\r\n                return undefined;\r\n            }\r\n            if (this.unit.isEmpty() || other.unit.isEmpty()) {\r\n                a = this;\r\n                b = other;\r\n            }\r\n            else {\r\n                a = this.unify();\r\n                b = other.unify();\r\n                if (a.unit.compare(b.unit) !== 0) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            return Node.numericCompare(a.value, b.value);\r\n        },\r\n        unify: function () {\r\n            return this.convertTo({ length: 'px', duration: 's', angle: 'rad' });\r\n        },\r\n        convertTo: function (conversions) {\r\n            var value = this.value;\r\n            var unit = this.unit.clone();\r\n            var i;\r\n            var groupName;\r\n            var group;\r\n            var targetUnit;\r\n            var derivedConversions = {};\r\n            var applyUnit;\r\n            if (typeof conversions === 'string') {\r\n                for (i in unitConversions) {\r\n                    if (unitConversions[i].hasOwnProperty(conversions)) {\r\n                        derivedConversions = {};\r\n                        derivedConversions[i] = conversions;\r\n                    }\r\n                }\r\n                conversions = derivedConversions;\r\n            }\r\n            applyUnit = function (atomicUnit, denominator) {\r\n                /* jshint loopfunc:true */\r\n                if (group.hasOwnProperty(atomicUnit)) {\r\n                    if (denominator) {\r\n                        value = value / (group[atomicUnit] / group[targetUnit]);\r\n                    }\r\n                    else {\r\n                        value = value * (group[atomicUnit] / group[targetUnit]);\r\n                    }\r\n                    return targetUnit;\r\n                }\r\n                return atomicUnit;\r\n            };\r\n            for (groupName in conversions) {\r\n                if (conversions.hasOwnProperty(groupName)) {\r\n                    targetUnit = conversions[groupName];\r\n                    group = unitConversions[groupName];\r\n                    unit.map(applyUnit);\r\n                }\r\n            }\r\n            unit.cancel();\r\n            return new Dimension(value, unit);\r\n        }\r\n    });\n\n    var MATH = Math$1;\r\n    var Operation = function (op, operands, isSpaced) {\r\n        this.op = op.trim();\r\n        this.operands = operands;\r\n        this.isSpaced = isSpaced;\r\n    };\r\n    Operation.prototype = Object.assign(new Node(), {\r\n        type: 'Operation',\r\n        accept: function (visitor) {\r\n            this.operands = visitor.visitArray(this.operands);\r\n        },\r\n        eval: function (context) {\r\n            var a = this.operands[0].eval(context), b = this.operands[1].eval(context), op;\r\n            if (context.isMathOn(this.op)) {\r\n                op = this.op === './' ? '/' : this.op;\r\n                if (a instanceof Dimension && b instanceof Color) {\r\n                    a = a.toColor();\r\n                }\r\n                if (b instanceof Dimension && a instanceof Color) {\r\n                    b = b.toColor();\r\n                }\r\n                if (!a.operate || !b.operate) {\r\n                    if ((a instanceof Operation || b instanceof Operation)\r\n                        && a.op === '/' && context.math === MATH.PARENS_DIVISION) {\r\n                        return new Operation(this.op, [a, b], this.isSpaced);\r\n                    }\r\n                    throw { type: 'Operation',\r\n                        message: 'Operation on an invalid type' };\r\n                }\r\n                return a.operate(context, op, b);\r\n            }\r\n            else {\r\n                return new Operation(this.op, [a, b], this.isSpaced);\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            this.operands[0].genCSS(context, output);\r\n            if (this.isSpaced) {\r\n                output.add(' ');\r\n            }\r\n            output.add(this.op);\r\n            if (this.isSpaced) {\r\n                output.add(' ');\r\n            }\r\n            this.operands[1].genCSS(context, output);\r\n        }\r\n    });\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    function __spreadArray(to, from, pack) {\r\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n            if (ar || !(i in from)) {\r\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n                ar[i] = from[i];\r\n            }\r\n        }\r\n        return to.concat(ar || from);\r\n    }\n\n    var Expression = function (value, noSpacing) {\r\n        this.value = value;\r\n        this.noSpacing = noSpacing;\r\n        if (!value) {\r\n            throw new Error('Expression requires an array parameter');\r\n        }\r\n    };\r\n    Expression.prototype = Object.assign(new Node(), {\r\n        type: 'Expression',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visitArray(this.value);\r\n        },\r\n        eval: function (context) {\r\n            var returnValue;\r\n            var mathOn = context.isMathOn();\r\n            var inParenthesis = this.parens;\r\n            var doubleParen = false;\r\n            if (inParenthesis) {\r\n                context.inParenthesis();\r\n            }\r\n            if (this.value.length > 1) {\r\n                returnValue = new Expression(this.value.map(function (e) {\r\n                    if (!e.eval) {\r\n                        return e;\r\n                    }\r\n                    return e.eval(context);\r\n                }), this.noSpacing);\r\n            }\r\n            else if (this.value.length === 1) {\r\n                if (this.value[0].parens && !this.value[0].parensInOp && !context.inCalc) {\r\n                    doubleParen = true;\r\n                }\r\n                returnValue = this.value[0].eval(context);\r\n            }\r\n            else {\r\n                returnValue = this;\r\n            }\r\n            if (inParenthesis) {\r\n                context.outOfParenthesis();\r\n            }\r\n            if (this.parens && this.parensInOp && !mathOn && !doubleParen\r\n                && (!(returnValue instanceof Dimension))) {\r\n                returnValue = new Paren(returnValue);\r\n            }\r\n            return returnValue;\r\n        },\r\n        genCSS: function (context, output) {\r\n            for (var i = 0; i < this.value.length; i++) {\r\n                this.value[i].genCSS(context, output);\r\n                if (!this.noSpacing && i + 1 < this.value.length) {\r\n                    output.add(' ');\r\n                }\r\n            }\r\n        },\r\n        throwAwayComments: function () {\r\n            this.value = this.value.filter(function (v) {\r\n                return !(v instanceof Comment);\r\n            });\r\n        }\r\n    });\n\n    var functionCaller = /** @class */ (function () {\r\n        function functionCaller(name, context, index, currentFileInfo) {\r\n            this.name = name.toLowerCase();\r\n            this.index = index;\r\n            this.context = context;\r\n            this.currentFileInfo = currentFileInfo;\r\n            this.func = context.frames[0].functionRegistry.get(this.name);\r\n        }\r\n        functionCaller.prototype.isValid = function () {\r\n            return Boolean(this.func);\r\n        };\r\n        functionCaller.prototype.call = function (args) {\r\n            var _this = this;\r\n            if (!(Array.isArray(args))) {\r\n                args = [args];\r\n            }\r\n            var evalArgs = this.func.evalArgs;\r\n            if (evalArgs !== false) {\r\n                args = args.map(function (a) { return a.eval(_this.context); });\r\n            }\r\n            var commentFilter = function (item) { return !(item.type === 'Comment'); };\r\n            // This code is terrible and should be replaced as per this issue...\r\n            // https://github.com/less/less.js/issues/2477\r\n            args = args\r\n                .filter(commentFilter)\r\n                .map(function (item) {\r\n                if (item.type === 'Expression') {\r\n                    var subNodes = item.value.filter(commentFilter);\r\n                    if (subNodes.length === 1) {\r\n                        // https://github.com/less/less.js/issues/3616\r\n                        if (item.parens && subNodes[0].op === '/') {\r\n                            return item;\r\n                        }\r\n                        return subNodes[0];\r\n                    }\r\n                    else {\r\n                        return new Expression(subNodes);\r\n                    }\r\n                }\r\n                return item;\r\n            });\r\n            if (evalArgs === false) {\r\n                return this.func.apply(this, __spreadArray([this.context], args));\r\n            }\r\n            return this.func.apply(this, args);\r\n        };\r\n        return functionCaller;\r\n    }());\n\n    //\r\n    // A function call node.\r\n    //\r\n    var Call = function (name, args, index, currentFileInfo) {\r\n        this.name = name;\r\n        this.args = args;\r\n        this.calc = name === 'calc';\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Call.prototype = Object.assign(new Node(), {\r\n        type: 'Call',\r\n        accept: function (visitor) {\r\n            if (this.args) {\r\n                this.args = visitor.visitArray(this.args);\r\n            }\r\n        },\r\n        //\r\n        // When evaluating a function call,\r\n        // we either find the function in the functionRegistry,\r\n        // in which case we call it, passing the  evaluated arguments,\r\n        // if this returns null or we cannot find the function, we\r\n        // simply print it out as it appeared originally [2].\r\n        //\r\n        // The reason why we evaluate the arguments, is in the case where\r\n        // we try to pass a variable to a function, like: `saturate(@color)`.\r\n        // The function should receive the value, not the variable.\r\n        //\r\n        eval: function (context) {\r\n            var _this = this;\r\n            /**\r\n             * Turn off math for calc(), and switch back on for evaluating nested functions\r\n             */\r\n            var currentMathContext = context.mathOn;\r\n            context.mathOn = !this.calc;\r\n            if (this.calc || context.inCalc) {\r\n                context.enterCalc();\r\n            }\r\n            var exitCalc = function () {\r\n                if (_this.calc || context.inCalc) {\r\n                    context.exitCalc();\r\n                }\r\n                context.mathOn = currentMathContext;\r\n            };\r\n            var result;\r\n            var funcCaller = new functionCaller(this.name, context, this.getIndex(), this.fileInfo());\r\n            if (funcCaller.isValid()) {\r\n                try {\r\n                    result = funcCaller.call(this.args);\r\n                    exitCalc();\r\n                }\r\n                catch (e) {\r\n                    if (e.hasOwnProperty('line') && e.hasOwnProperty('column')) {\r\n                        throw e;\r\n                    }\r\n                    throw {\r\n                        type: e.type || 'Runtime',\r\n                        message: \"Error evaluating function `\" + this.name + \"`\" + (e.message ? \": \" + e.message : ''),\r\n                        index: this.getIndex(),\r\n                        filename: this.fileInfo().filename,\r\n                        line: e.lineNumber,\r\n                        column: e.columnNumber\r\n                    };\r\n                }\r\n            }\r\n            if (result !== null && result !== undefined) {\r\n                // Results that that are not nodes are cast as Anonymous nodes\r\n                // Falsy values or booleans are returned as empty nodes\r\n                if (!(result instanceof Node)) {\r\n                    if (!result || result === true) {\r\n                        result = new Anonymous(null);\r\n                    }\r\n                    else {\r\n                        result = new Anonymous(result.toString());\r\n                    }\r\n                }\r\n                result._index = this._index;\r\n                result._fileInfo = this._fileInfo;\r\n                return result;\r\n            }\r\n            var args = this.args.map(function (a) { return a.eval(context); });\r\n            exitCalc();\r\n            return new Call(this.name, args, this.getIndex(), this.fileInfo());\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.name + \"(\", this.fileInfo(), this.getIndex());\r\n            for (var i = 0; i < this.args.length; i++) {\r\n                this.args[i].genCSS(context, output);\r\n                if (i + 1 < this.args.length) {\r\n                    output.add(', ');\r\n                }\r\n            }\r\n            output.add(')');\r\n        }\r\n    });\n\n    var Variable = function (name, index, currentFileInfo) {\r\n        this.name = name;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Variable.prototype = Object.assign(new Node(), {\r\n        type: 'Variable',\r\n        eval: function (context) {\r\n            var variable, name = this.name;\r\n            if (name.indexOf('@@') === 0) {\r\n                name = \"@\" + new Variable(name.slice(1), this.getIndex(), this.fileInfo()).eval(context).value;\r\n            }\r\n            if (this.evaluating) {\r\n                throw { type: 'Name',\r\n                    message: \"Recursive variable definition for \" + name,\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            this.evaluating = true;\r\n            variable = this.find(context.frames, function (frame) {\r\n                var v = frame.variable(name);\r\n                if (v) {\r\n                    if (v.important) {\r\n                        var importantScope = context.importantScope[context.importantScope.length - 1];\r\n                        importantScope.important = v.important;\r\n                    }\r\n                    // If in calc, wrap vars in a function call to cascade evaluate args first\r\n                    if (context.inCalc) {\r\n                        return (new Call('_SELF', [v.value])).eval(context);\r\n                    }\r\n                    else {\r\n                        return v.value.eval(context);\r\n                    }\r\n                }\r\n            });\r\n            if (variable) {\r\n                this.evaluating = false;\r\n                return variable;\r\n            }\r\n            else {\r\n                throw { type: 'Name',\r\n                    message: \"variable \" + name + \" is undefined\",\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n        },\r\n        find: function (obj, fun) {\r\n            for (var i = 0, r = void 0; i < obj.length; i++) {\r\n                r = fun.call(obj, obj[i]);\r\n                if (r) {\r\n                    return r;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    });\n\n    var Property = function (name, index, currentFileInfo) {\r\n        this.name = name;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Property.prototype = Object.assign(new Node(), {\r\n        type: 'Property',\r\n        eval: function (context) {\r\n            var property;\r\n            var name = this.name;\r\n            // TODO: shorten this reference\r\n            var mergeRules = context.pluginManager.less.visitors.ToCSSVisitor.prototype._mergeRules;\r\n            if (this.evaluating) {\r\n                throw { type: 'Name',\r\n                    message: \"Recursive property reference for \" + name,\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            this.evaluating = true;\r\n            property = this.find(context.frames, function (frame) {\r\n                var v;\r\n                var vArr = frame.property(name);\r\n                if (vArr) {\r\n                    for (var i = 0; i < vArr.length; i++) {\r\n                        v = vArr[i];\r\n                        vArr[i] = new Declaration(v.name, v.value, v.important, v.merge, v.index, v.currentFileInfo, v.inline, v.variable);\r\n                    }\r\n                    mergeRules(vArr);\r\n                    v = vArr[vArr.length - 1];\r\n                    if (v.important) {\r\n                        var importantScope = context.importantScope[context.importantScope.length - 1];\r\n                        importantScope.important = v.important;\r\n                    }\r\n                    v = v.value.eval(context);\r\n                    return v;\r\n                }\r\n            });\r\n            if (property) {\r\n                this.evaluating = false;\r\n                return property;\r\n            }\r\n            else {\r\n                throw { type: 'Name',\r\n                    message: \"Property '\" + name + \"' is undefined\",\r\n                    filename: this.currentFileInfo.filename,\r\n                    index: this.index };\r\n            }\r\n        },\r\n        find: function (obj, fun) {\r\n            for (var i = 0, r = void 0; i < obj.length; i++) {\r\n                r = fun.call(obj, obj[i]);\r\n                if (r) {\r\n                    return r;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    });\n\n    var Attribute = function (key, op, value, cif) {\r\n        this.key = key;\r\n        this.op = op;\r\n        this.value = value;\r\n        this.cif = cif;\r\n    };\r\n    Attribute.prototype = Object.assign(new Node(), {\r\n        type: 'Attribute',\r\n        eval: function (context) {\r\n            return new Attribute(this.key.eval ? this.key.eval(context) : this.key, this.op, (this.value && this.value.eval) ? this.value.eval(context) : this.value, this.cif);\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context));\r\n        },\r\n        toCSS: function (context) {\r\n            var value = this.key.toCSS ? this.key.toCSS(context) : this.key;\r\n            if (this.op) {\r\n                value += this.op;\r\n                value += (this.value.toCSS ? this.value.toCSS(context) : this.value);\r\n            }\r\n            if (this.cif) {\r\n                value = value + \" \" + this.cif;\r\n            }\r\n            return \"[\" + value + \"]\";\r\n        }\r\n    });\n\n    var Quoted = function (str, content, escaped, index, currentFileInfo) {\r\n        this.escaped = (escaped == null) ? true : escaped;\r\n        this.value = content || '';\r\n        this.quote = str.charAt(0);\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.variableRegex = /@\\{([\\w-]+)\\}/g;\r\n        this.propRegex = /\\$\\{([\\w-]+)\\}/g;\r\n        this.allowRoot = escaped;\r\n    };\r\n    Quoted.prototype = Object.assign(new Node(), {\r\n        type: 'Quoted',\r\n        genCSS: function (context, output) {\r\n            if (!this.escaped) {\r\n                output.add(this.quote, this.fileInfo(), this.getIndex());\r\n            }\r\n            output.add(this.value);\r\n            if (!this.escaped) {\r\n                output.add(this.quote);\r\n            }\r\n        },\r\n        containsVariables: function () {\r\n            return this.value.match(this.variableRegex);\r\n        },\r\n        eval: function (context) {\r\n            var that = this;\r\n            var value = this.value;\r\n            var variableReplacement = function (_, name) {\r\n                var v = new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\r\n                return (v instanceof Quoted) ? v.value : v.toCSS();\r\n            };\r\n            var propertyReplacement = function (_, name) {\r\n                var v = new Property(\"$\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\r\n                return (v instanceof Quoted) ? v.value : v.toCSS();\r\n            };\r\n            function iterativeReplace(value, regexp, replacementFnc) {\r\n                var evaluatedValue = value;\r\n                do {\r\n                    value = evaluatedValue.toString();\r\n                    evaluatedValue = value.replace(regexp, replacementFnc);\r\n                } while (value !== evaluatedValue);\r\n                return evaluatedValue;\r\n            }\r\n            value = iterativeReplace(value, this.variableRegex, variableReplacement);\r\n            value = iterativeReplace(value, this.propRegex, propertyReplacement);\r\n            return new Quoted(this.quote + value + this.quote, value, this.escaped, this.getIndex(), this.fileInfo());\r\n        },\r\n        compare: function (other) {\r\n            // when comparing quoted strings allow the quote to differ\r\n            if (other.type === 'Quoted' && !this.escaped && !other.escaped) {\r\n                return Node.numericCompare(this.value, other.value);\r\n            }\r\n            else {\r\n                return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\r\n            }\r\n        }\r\n    });\n\n    function escapePath(path) {\r\n        return path.replace(/[\\(\\)'\"\\s]/g, function (match) { return \"\\\\\" + match; });\r\n    }\r\n    var URL = function (val, index, currentFileInfo, isEvald) {\r\n        this.value = val;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.isEvald = isEvald;\r\n    };\r\n    URL.prototype = Object.assign(new Node(), {\r\n        type: 'Url',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add('url(');\r\n            this.value.genCSS(context, output);\r\n            output.add(')');\r\n        },\r\n        eval: function (context) {\r\n            var val = this.value.eval(context);\r\n            var rootpath;\r\n            if (!this.isEvald) {\r\n                // Add the rootpath if the URL requires a rewrite\r\n                rootpath = this.fileInfo() && this.fileInfo().rootpath;\r\n                if (typeof rootpath === 'string' &&\r\n                    typeof val.value === 'string' &&\r\n                    context.pathRequiresRewrite(val.value)) {\r\n                    if (!val.quote) {\r\n                        rootpath = escapePath(rootpath);\r\n                    }\r\n                    val.value = context.rewritePath(val.value, rootpath);\r\n                }\r\n                else {\r\n                    val.value = context.normalizePath(val.value);\r\n                }\r\n                // Add url args if enabled\r\n                if (context.urlArgs) {\r\n                    if (!val.value.match(/^\\s*data:/)) {\r\n                        var delimiter = val.value.indexOf('?') === -1 ? '?' : '&';\r\n                        var urlArgs = delimiter + context.urlArgs;\r\n                        if (val.value.indexOf('#') !== -1) {\r\n                            val.value = val.value.replace('#', urlArgs + \"#\");\r\n                        }\r\n                        else {\r\n                            val.value += urlArgs;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return new URL(val, this.getIndex(), this.fileInfo(), true);\r\n        }\r\n    });\n\n    var Media = function (value, features, index, currentFileInfo, visibilityInfo) {\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        var selectors = (new Selector([], null, null, this._index, this._fileInfo)).createEmptySelectors();\r\n        this.features = new Value(features);\r\n        this.rules = [new Ruleset(selectors, value)];\r\n        this.rules[0].allowImports = true;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        this.setParent(selectors, this);\r\n        this.setParent(this.features, this);\r\n        this.setParent(this.rules, this);\r\n    };\r\n    Media.prototype = Object.assign(new AtRule(), {\r\n        type: 'Media',\r\n        isRulesetLike: function () {\r\n            return true;\r\n        },\r\n        accept: function (visitor) {\r\n            if (this.features) {\r\n                this.features = visitor.visit(this.features);\r\n            }\r\n            if (this.rules) {\r\n                this.rules = visitor.visitArray(this.rules);\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add('@media ', this._fileInfo, this._index);\r\n            this.features.genCSS(context, output);\r\n            this.outputRuleset(context, output, this.rules);\r\n        },\r\n        eval: function (context) {\r\n            if (!context.mediaBlocks) {\r\n                context.mediaBlocks = [];\r\n                context.mediaPath = [];\r\n            }\r\n            var media = new Media(null, [], this._index, this._fileInfo, this.visibilityInfo());\r\n            if (this.debugInfo) {\r\n                this.rules[0].debugInfo = this.debugInfo;\r\n                media.debugInfo = this.debugInfo;\r\n            }\r\n            media.features = this.features.eval(context);\r\n            context.mediaPath.push(media);\r\n            context.mediaBlocks.push(media);\r\n            this.rules[0].functionRegistry = context.frames[0].functionRegistry.inherit();\r\n            context.frames.unshift(this.rules[0]);\r\n            media.rules = [this.rules[0].eval(context)];\r\n            context.frames.shift();\r\n            context.mediaPath.pop();\r\n            return context.mediaPath.length === 0 ? media.evalTop(context) :\r\n                media.evalNested(context);\r\n        },\r\n        evalTop: function (context) {\r\n            var result = this;\r\n            // Render all dependent Media blocks.\r\n            if (context.mediaBlocks.length > 1) {\r\n                var selectors = (new Selector([], null, null, this.getIndex(), this.fileInfo())).createEmptySelectors();\r\n                result = new Ruleset(selectors, context.mediaBlocks);\r\n                result.multiMedia = true;\r\n                result.copyVisibilityInfo(this.visibilityInfo());\r\n                this.setParent(result, this);\r\n            }\r\n            delete context.mediaBlocks;\r\n            delete context.mediaPath;\r\n            return result;\r\n        },\r\n        evalNested: function (context) {\r\n            var i;\r\n            var value;\r\n            var path = context.mediaPath.concat([this]);\r\n            // Extract the media-query conditions separated with `,` (OR).\r\n            for (i = 0; i < path.length; i++) {\r\n                value = path[i].features instanceof Value ?\r\n                    path[i].features.value : path[i].features;\r\n                path[i] = Array.isArray(value) ? value : [value];\r\n            }\r\n            // Trace all permutations to generate the resulting media-query.\r\n            //\r\n            // (a, b and c) with nested (d, e) ->\r\n            //    a and d\r\n            //    a and e\r\n            //    b and c and d\r\n            //    b and c and e\r\n            this.features = new Value(this.permute(path).map(function (path) {\r\n                path = path.map(function (fragment) { return fragment.toCSS ? fragment : new Anonymous(fragment); });\r\n                for (i = path.length - 1; i > 0; i--) {\r\n                    path.splice(i, 0, new Anonymous('and'));\r\n                }\r\n                return new Expression(path);\r\n            }));\r\n            this.setParent(this.features, this);\r\n            // Fake a tree-node that doesn't output anything.\r\n            return new Ruleset([], []);\r\n        },\r\n        permute: function (arr) {\r\n            if (arr.length === 0) {\r\n                return [];\r\n            }\r\n            else if (arr.length === 1) {\r\n                return arr[0];\r\n            }\r\n            else {\r\n                var result = [];\r\n                var rest = this.permute(arr.slice(1));\r\n                for (var i = 0; i < rest.length; i++) {\r\n                    for (var j = 0; j < arr[0].length; j++) {\r\n                        result.push([arr[0][j]].concat(rest[i]));\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n        },\r\n        bubbleSelectors: function (selectors) {\r\n            if (!selectors) {\r\n                return;\r\n            }\r\n            this.rules = [new Ruleset(copyArray(selectors), [this.rules[0]])];\r\n            this.setParent(this.rules, this);\r\n        }\r\n    });\n\n    //\r\n    // CSS @import node\r\n    //\r\n    // The general strategy here is that we don't want to wait\r\n    // for the parsing to be completed, before we start importing\r\n    // the file. That's because in the context of a browser,\r\n    // most of the time will be spent waiting for the server to respond.\r\n    //\r\n    // On creation, we push the import path to our import queue, though\r\n    // `import,push`, we also pass it a callback, which it'll call once\r\n    // the file has been fetched, and parsed.\r\n    //\r\n    var Import = function (path, features, options, index, currentFileInfo, visibilityInfo) {\r\n        this.options = options;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.path = path;\r\n        this.features = features;\r\n        this.allowRoot = true;\r\n        if (this.options.less !== undefined || this.options.inline) {\r\n            this.css = !this.options.less || this.options.inline;\r\n        }\r\n        else {\r\n            var pathValue = this.getPath();\r\n            if (pathValue && /[#\\.\\&\\?]css([\\?;].*)?$/.test(pathValue)) {\r\n                this.css = true;\r\n            }\r\n        }\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.features, this);\r\n        this.setParent(this.path, this);\r\n    };\r\n    Import.prototype = Object.assign(new Node(), {\r\n        type: 'Import',\r\n        accept: function (visitor) {\r\n            if (this.features) {\r\n                this.features = visitor.visit(this.features);\r\n            }\r\n            this.path = visitor.visit(this.path);\r\n            if (!this.options.isPlugin && !this.options.inline && this.root) {\r\n                this.root = visitor.visit(this.root);\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            if (this.css && this.path._fileInfo.reference === undefined) {\r\n                output.add('@import ', this._fileInfo, this._index);\r\n                this.path.genCSS(context, output);\r\n                if (this.features) {\r\n                    output.add(' ');\r\n                    this.features.genCSS(context, output);\r\n                }\r\n                output.add(';');\r\n            }\r\n        },\r\n        getPath: function () {\r\n            return (this.path instanceof URL) ?\r\n                this.path.value.value : this.path.value;\r\n        },\r\n        isVariableImport: function () {\r\n            var path = this.path;\r\n            if (path instanceof URL) {\r\n                path = path.value;\r\n            }\r\n            if (path instanceof Quoted) {\r\n                return path.containsVariables();\r\n            }\r\n            return true;\r\n        },\r\n        evalForImport: function (context) {\r\n            var path = this.path;\r\n            if (path instanceof URL) {\r\n                path = path.value;\r\n            }\r\n            return new Import(path.eval(context), this.features, this.options, this._index, this._fileInfo, this.visibilityInfo());\r\n        },\r\n        evalPath: function (context) {\r\n            var path = this.path.eval(context);\r\n            var fileInfo = this._fileInfo;\r\n            if (!(path instanceof URL)) {\r\n                // Add the rootpath if the URL requires a rewrite\r\n                var pathValue = path.value;\r\n                if (fileInfo &&\r\n                    pathValue &&\r\n                    context.pathRequiresRewrite(pathValue)) {\r\n                    path.value = context.rewritePath(pathValue, fileInfo.rootpath);\r\n                }\r\n                else {\r\n                    path.value = context.normalizePath(path.value);\r\n                }\r\n            }\r\n            return path;\r\n        },\r\n        eval: function (context) {\r\n            var result = this.doEval(context);\r\n            if (this.options.reference || this.blocksVisibility()) {\r\n                if (result.length || result.length === 0) {\r\n                    result.forEach(function (node) {\r\n                        node.addVisibilityBlock();\r\n                    });\r\n                }\r\n                else {\r\n                    result.addVisibilityBlock();\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        doEval: function (context) {\r\n            var ruleset;\r\n            var registry;\r\n            var features = this.features && this.features.eval(context);\r\n            if (this.options.isPlugin) {\r\n                if (this.root && this.root.eval) {\r\n                    try {\r\n                        this.root.eval(context);\r\n                    }\r\n                    catch (e) {\r\n                        e.message = 'Plugin error during evaluation';\r\n                        throw new LessError(e, this.root.imports, this.root.filename);\r\n                    }\r\n                }\r\n                registry = context.frames[0] && context.frames[0].functionRegistry;\r\n                if (registry && this.root && this.root.functions) {\r\n                    registry.addMultiple(this.root.functions);\r\n                }\r\n                return [];\r\n            }\r\n            if (this.skip) {\r\n                if (typeof this.skip === 'function') {\r\n                    this.skip = this.skip();\r\n                }\r\n                if (this.skip) {\r\n                    return [];\r\n                }\r\n            }\r\n            if (this.options.inline) {\r\n                var contents = new Anonymous(this.root, 0, {\r\n                    filename: this.importedFilename,\r\n                    reference: this.path._fileInfo && this.path._fileInfo.reference\r\n                }, true, true);\r\n                return this.features ? new Media([contents], this.features.value) : [contents];\r\n            }\r\n            else if (this.css) {\r\n                var newImport = new Import(this.evalPath(context), features, this.options, this._index);\r\n                if (!newImport.css && this.error) {\r\n                    throw this.error;\r\n                }\r\n                return newImport;\r\n            }\r\n            else if (this.root) {\r\n                ruleset = new Ruleset(null, copyArray(this.root.rules));\r\n                ruleset.evalImports(context);\r\n                return this.features ? new Media(ruleset.rules, this.features.value) : ruleset.rules;\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        }\r\n    });\n\n    var JsEvalNode = function () { };\r\n    JsEvalNode.prototype = Object.assign(new Node(), {\r\n        evaluateJavaScript: function (expression, context) {\r\n            var result;\r\n            var that = this;\r\n            var evalContext = {};\r\n            if (!context.javascriptEnabled) {\r\n                throw { message: 'Inline JavaScript is not enabled. Is it set in your options?',\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            expression = expression.replace(/@\\{([\\w-]+)\\}/g, function (_, name) {\r\n                return that.jsify(new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context));\r\n            });\r\n            try {\r\n                expression = new Function(\"return (\" + expression + \")\");\r\n            }\r\n            catch (e) {\r\n                throw { message: \"JavaScript evaluation error: \" + e.message + \" from `\" + expression + \"`\",\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            var variables = context.frames[0].variables();\r\n            for (var k in variables) {\r\n                if (variables.hasOwnProperty(k)) {\r\n                    /* jshint loopfunc:true */\r\n                    evalContext[k.slice(1)] = {\r\n                        value: variables[k].value,\r\n                        toJS: function () {\r\n                            return this.value.eval(context).toCSS();\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n            try {\r\n                result = expression.call(evalContext);\r\n            }\r\n            catch (e) {\r\n                throw { message: \"JavaScript evaluation error: '\" + e.name + \": \" + e.message.replace(/[\"]/g, '\\'') + \"'\",\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            return result;\r\n        },\r\n        jsify: function (obj) {\r\n            if (Array.isArray(obj.value) && (obj.value.length > 1)) {\r\n                return \"[\" + obj.value.map(function (v) { return v.toCSS(); }).join(', ') + \"]\";\r\n            }\r\n            else {\r\n                return obj.toCSS();\r\n            }\r\n        }\r\n    });\n\n    var JavaScript = function (string, escaped, index, currentFileInfo) {\r\n        this.escaped = escaped;\r\n        this.expression = string;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    JavaScript.prototype = Object.assign(new JsEvalNode(), {\r\n        type: 'JavaScript',\r\n        eval: function (context) {\r\n            var result = this.evaluateJavaScript(this.expression, context);\r\n            var type = typeof result;\r\n            if (type === 'number' && !isNaN(result)) {\r\n                return new Dimension(result);\r\n            }\r\n            else if (type === 'string') {\r\n                return new Quoted(\"\\\"\" + result + \"\\\"\", result, this.escaped, this._index);\r\n            }\r\n            else if (Array.isArray(result)) {\r\n                return new Anonymous(result.join(', '));\r\n            }\r\n            else {\r\n                return new Anonymous(result);\r\n            }\r\n        }\r\n    });\n\n    var Assignment = function (key, val) {\r\n        this.key = key;\r\n        this.value = val;\r\n    };\r\n    Assignment.prototype = Object.assign(new Node(), {\r\n        type: 'Assignment',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        },\r\n        eval: function (context) {\r\n            if (this.value.eval) {\r\n                return new Assignment(this.key, this.value.eval(context));\r\n            }\r\n            return this;\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.key + \"=\");\r\n            if (this.value.genCSS) {\r\n                this.value.genCSS(context, output);\r\n            }\r\n            else {\r\n                output.add(this.value);\r\n            }\r\n        }\r\n    });\n\n    var Condition = function (op, l, r, i, negate) {\r\n        this.op = op.trim();\r\n        this.lvalue = l;\r\n        this.rvalue = r;\r\n        this._index = i;\r\n        this.negate = negate;\r\n    };\r\n    Condition.prototype = Object.assign(new Node(), {\r\n        type: 'Condition',\r\n        accept: function (visitor) {\r\n            this.lvalue = visitor.visit(this.lvalue);\r\n            this.rvalue = visitor.visit(this.rvalue);\r\n        },\r\n        eval: function (context) {\r\n            var result = (function (op, a, b) {\r\n                switch (op) {\r\n                    case 'and': return a && b;\r\n                    case 'or': return a || b;\r\n                    default:\r\n                        switch (Node.compare(a, b)) {\r\n                            case -1:\r\n                                return op === '<' || op === '=<' || op === '<=';\r\n                            case 0:\r\n                                return op === '=' || op === '>=' || op === '=<' || op === '<=';\r\n                            case 1:\r\n                                return op === '>' || op === '>=';\r\n                            default:\r\n                                return false;\r\n                        }\r\n                }\r\n            })(this.op, this.lvalue.eval(context), this.rvalue.eval(context));\r\n            return this.negate ? !result : result;\r\n        }\r\n    });\n\n    var UnicodeDescriptor = function (value) {\r\n        this.value = value;\r\n    };\r\n    UnicodeDescriptor.prototype = Object.assign(new Node(), {\r\n        type: 'UnicodeDescriptor'\r\n    });\n\n    var Negative = function (node) {\r\n        this.value = node;\r\n    };\r\n    Negative.prototype = Object.assign(new Node(), {\r\n        type: 'Negative',\r\n        genCSS: function (context, output) {\r\n            output.add('-');\r\n            this.value.genCSS(context, output);\r\n        },\r\n        eval: function (context) {\r\n            if (context.isMathOn()) {\r\n                return (new Operation('*', [new Dimension(-1), this.value])).eval(context);\r\n            }\r\n            return new Negative(this.value.eval(context));\r\n        }\r\n    });\n\n    var Extend = function (selector, option, index, currentFileInfo, visibilityInfo) {\r\n        this.selector = selector;\r\n        this.option = option;\r\n        this.object_id = Extend.next_id++;\r\n        this.parent_ids = [this.object_id];\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        switch (option) {\r\n            case 'all':\r\n                this.allowBefore = true;\r\n                this.allowAfter = true;\r\n                break;\r\n            default:\r\n                this.allowBefore = false;\r\n                this.allowAfter = false;\r\n                break;\r\n        }\r\n        this.setParent(this.selector, this);\r\n    };\r\n    Extend.prototype = Object.assign(new Node(), {\r\n        type: 'Extend',\r\n        accept: function (visitor) {\r\n            this.selector = visitor.visit(this.selector);\r\n        },\r\n        eval: function (context) {\r\n            return new Extend(this.selector.eval(context), this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        clone: function (context) {\r\n            return new Extend(this.selector, this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        // it concatenates (joins) all selectors in selector array\r\n        findSelfSelectors: function (selectors) {\r\n            var selfElements = [], i, selectorElements;\r\n            for (i = 0; i < selectors.length; i++) {\r\n                selectorElements = selectors[i].elements;\r\n                // duplicate the logic in genCSS function inside the selector node.\r\n                // future TODO - move both logics into the selector joiner visitor\r\n                if (i > 0 && selectorElements.length && selectorElements[0].combinator.value === '') {\r\n                    selectorElements[0].combinator.value = ' ';\r\n                }\r\n                selfElements = selfElements.concat(selectors[i].elements);\r\n            }\r\n            this.selfSelectors = [new Selector(selfElements)];\r\n            this.selfSelectors[0].copyVisibilityInfo(this.visibilityInfo());\r\n        }\r\n    });\r\n    Extend.next_id = 0;\n\n    var VariableCall = function (variable, index, currentFileInfo) {\r\n        this.variable = variable;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.allowRoot = true;\r\n    };\r\n    VariableCall.prototype = Object.assign(new Node(), {\r\n        type: 'VariableCall',\r\n        eval: function (context) {\r\n            var rules;\r\n            var detachedRuleset = new Variable(this.variable, this.getIndex(), this.fileInfo()).eval(context);\r\n            var error = new LessError({ message: \"Could not evaluate variable call \" + this.variable });\r\n            if (!detachedRuleset.ruleset) {\r\n                if (detachedRuleset.rules) {\r\n                    rules = detachedRuleset;\r\n                }\r\n                else if (Array.isArray(detachedRuleset)) {\r\n                    rules = new Ruleset('', detachedRuleset);\r\n                }\r\n                else if (Array.isArray(detachedRuleset.value)) {\r\n                    rules = new Ruleset('', detachedRuleset.value);\r\n                }\r\n                else {\r\n                    throw error;\r\n                }\r\n                detachedRuleset = new DetachedRuleset(rules);\r\n            }\r\n            if (detachedRuleset.ruleset) {\r\n                return detachedRuleset.callEval(context);\r\n            }\r\n            throw error;\r\n        }\r\n    });\n\n    var NamespaceValue = function (ruleCall, lookups, index, fileInfo) {\r\n        this.value = ruleCall;\r\n        this.lookups = lookups;\r\n        this._index = index;\r\n        this._fileInfo = fileInfo;\r\n    };\r\n    NamespaceValue.prototype = Object.assign(new Node(), {\r\n        type: 'NamespaceValue',\r\n        eval: function (context) {\r\n            var i, name, rules = this.value.eval(context);\r\n            for (i = 0; i < this.lookups.length; i++) {\r\n                name = this.lookups[i];\r\n                /**\r\n                 * Eval'd DRs return rulesets.\r\n                 * Eval'd mixins return rules, so let's make a ruleset if we need it.\r\n                 * We need to do this because of late parsing of values\r\n                 */\r\n                if (Array.isArray(rules)) {\r\n                    rules = new Ruleset([new Selector()], rules);\r\n                }\r\n                if (name === '') {\r\n                    rules = rules.lastDeclaration();\r\n                }\r\n                else if (name.charAt(0) === '@') {\r\n                    if (name.charAt(1) === '@') {\r\n                        name = \"@\" + new Variable(name.substr(1)).eval(context).value;\r\n                    }\r\n                    if (rules.variables) {\r\n                        rules = rules.variable(name);\r\n                    }\r\n                    if (!rules) {\r\n                        throw { type: 'Name',\r\n                            message: \"variable \" + name + \" not found\",\r\n                            filename: this.fileInfo().filename,\r\n                            index: this.getIndex() };\r\n                    }\r\n                }\r\n                else {\r\n                    if (name.substring(0, 2) === '$@') {\r\n                        name = \"$\" + new Variable(name.substr(1)).eval(context).value;\r\n                    }\r\n                    else {\r\n                        name = name.charAt(0) === '$' ? name : \"$\" + name;\r\n                    }\r\n                    if (rules.properties) {\r\n                        rules = rules.property(name);\r\n                    }\r\n                    if (!rules) {\r\n                        throw { type: 'Name',\r\n                            message: \"property \\\"\" + name.substr(1) + \"\\\" not found\",\r\n                            filename: this.fileInfo().filename,\r\n                            index: this.getIndex() };\r\n                    }\r\n                    // Properties are an array of values, since a ruleset can have multiple props.\r\n                    // We pick the last one (the \"cascaded\" value)\r\n                    rules = rules[rules.length - 1];\r\n                }\r\n                if (rules.value) {\r\n                    rules = rules.eval(context).value;\r\n                }\r\n                if (rules.ruleset) {\r\n                    rules = rules.ruleset.eval(context);\r\n                }\r\n            }\r\n            return rules;\r\n        }\r\n    });\n\n    var Definition = function (name, params, rules, condition, variadic, frames, visibilityInfo) {\r\n        this.name = name || 'anonymous mixin';\r\n        this.selectors = [new Selector([new Element(null, name, false, this._index, this._fileInfo)])];\r\n        this.params = params;\r\n        this.condition = condition;\r\n        this.variadic = variadic;\r\n        this.arity = params.length;\r\n        this.rules = rules;\r\n        this._lookups = {};\r\n        var optionalParameters = [];\r\n        this.required = params.reduce(function (count, p) {\r\n            if (!p.name || (p.name && !p.value)) {\r\n                return count + 1;\r\n            }\r\n            else {\r\n                optionalParameters.push(p.name);\r\n                return count;\r\n            }\r\n        }, 0);\r\n        this.optionalParameters = optionalParameters;\r\n        this.frames = frames;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n    };\r\n    Definition.prototype = Object.assign(new Ruleset(), {\r\n        type: 'MixinDefinition',\r\n        evalFirst: true,\r\n        accept: function (visitor) {\r\n            if (this.params && this.params.length) {\r\n                this.params = visitor.visitArray(this.params);\r\n            }\r\n            this.rules = visitor.visitArray(this.rules);\r\n            if (this.condition) {\r\n                this.condition = visitor.visit(this.condition);\r\n            }\r\n        },\r\n        evalParams: function (context, mixinEnv, args, evaldArguments) {\r\n            /* jshint boss:true */\r\n            var frame = new Ruleset(null, null);\r\n            var varargs;\r\n            var arg;\r\n            var params = copyArray(this.params);\r\n            var i;\r\n            var j;\r\n            var val;\r\n            var name;\r\n            var isNamedFound;\r\n            var argIndex;\r\n            var argsLength = 0;\r\n            if (mixinEnv.frames && mixinEnv.frames[0] && mixinEnv.frames[0].functionRegistry) {\r\n                frame.functionRegistry = mixinEnv.frames[0].functionRegistry.inherit();\r\n            }\r\n            mixinEnv = new contexts.Eval(mixinEnv, [frame].concat(mixinEnv.frames));\r\n            if (args) {\r\n                args = copyArray(args);\r\n                argsLength = args.length;\r\n                for (i = 0; i < argsLength; i++) {\r\n                    arg = args[i];\r\n                    if (name = (arg && arg.name)) {\r\n                        isNamedFound = false;\r\n                        for (j = 0; j < params.length; j++) {\r\n                            if (!evaldArguments[j] && name === params[j].name) {\r\n                                evaldArguments[j] = arg.value.eval(context);\r\n                                frame.prependRule(new Declaration(name, arg.value.eval(context)));\r\n                                isNamedFound = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (isNamedFound) {\r\n                            args.splice(i, 1);\r\n                            i--;\r\n                            continue;\r\n                        }\r\n                        else {\r\n                            throw { type: 'Runtime', message: \"Named argument for \" + this.name + \" \" + args[i].name + \" not found\" };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            argIndex = 0;\r\n            for (i = 0; i < params.length; i++) {\r\n                if (evaldArguments[i]) {\r\n                    continue;\r\n                }\r\n                arg = args && args[argIndex];\r\n                if (name = params[i].name) {\r\n                    if (params[i].variadic) {\r\n                        varargs = [];\r\n                        for (j = argIndex; j < argsLength; j++) {\r\n                            varargs.push(args[j].value.eval(context));\r\n                        }\r\n                        frame.prependRule(new Declaration(name, new Expression(varargs).eval(context)));\r\n                    }\r\n                    else {\r\n                        val = arg && arg.value;\r\n                        if (val) {\r\n                            // This was a mixin call, pass in a detached ruleset of it's eval'd rules\r\n                            if (Array.isArray(val)) {\r\n                                val = new DetachedRuleset(new Ruleset('', val));\r\n                            }\r\n                            else {\r\n                                val = val.eval(context);\r\n                            }\r\n                        }\r\n                        else if (params[i].value) {\r\n                            val = params[i].value.eval(mixinEnv);\r\n                            frame.resetCache();\r\n                        }\r\n                        else {\r\n                            throw { type: 'Runtime', message: \"wrong number of arguments for \" + this.name + \" (\" + argsLength + \" for \" + this.arity + \")\" };\r\n                        }\r\n                        frame.prependRule(new Declaration(name, val));\r\n                        evaldArguments[i] = val;\r\n                    }\r\n                }\r\n                if (params[i].variadic && args) {\r\n                    for (j = argIndex; j < argsLength; j++) {\r\n                        evaldArguments[j] = args[j].value.eval(context);\r\n                    }\r\n                }\r\n                argIndex++;\r\n            }\r\n            return frame;\r\n        },\r\n        makeImportant: function () {\r\n            var rules = !this.rules ? this.rules : this.rules.map(function (r) {\r\n                if (r.makeImportant) {\r\n                    return r.makeImportant(true);\r\n                }\r\n                else {\r\n                    return r;\r\n                }\r\n            });\r\n            var result = new Definition(this.name, this.params, rules, this.condition, this.variadic, this.frames);\r\n            return result;\r\n        },\r\n        eval: function (context) {\r\n            return new Definition(this.name, this.params, this.rules, this.condition, this.variadic, this.frames || copyArray(context.frames));\r\n        },\r\n        evalCall: function (context, args, important) {\r\n            var _arguments = [];\r\n            var mixinFrames = this.frames ? this.frames.concat(context.frames) : context.frames;\r\n            var frame = this.evalParams(context, new contexts.Eval(context, mixinFrames), args, _arguments);\r\n            var rules;\r\n            var ruleset;\r\n            frame.prependRule(new Declaration('@arguments', new Expression(_arguments).eval(context)));\r\n            rules = copyArray(this.rules);\r\n            ruleset = new Ruleset(null, rules);\r\n            ruleset.originalRuleset = this;\r\n            ruleset = ruleset.eval(new contexts.Eval(context, [this, frame].concat(mixinFrames)));\r\n            if (important) {\r\n                ruleset = ruleset.makeImportant();\r\n            }\r\n            return ruleset;\r\n        },\r\n        matchCondition: function (args, context) {\r\n            if (this.condition && !this.condition.eval(new contexts.Eval(context, [this.evalParams(context, /* the parameter variables */ new contexts.Eval(context, this.frames ? this.frames.concat(context.frames) : context.frames), args, [])]\r\n                .concat(this.frames || []) // the parent namespace/mixin frames\r\n                .concat(context.frames)))) { // the current environment frames\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        matchArgs: function (args, context) {\r\n            var allArgsCnt = (args && args.length) || 0;\r\n            var len;\r\n            var optionalParameters = this.optionalParameters;\r\n            var requiredArgsCnt = !args ? 0 : args.reduce(function (count, p) {\r\n                if (optionalParameters.indexOf(p.name) < 0) {\r\n                    return count + 1;\r\n                }\r\n                else {\r\n                    return count;\r\n                }\r\n            }, 0);\r\n            if (!this.variadic) {\r\n                if (requiredArgsCnt < this.required) {\r\n                    return false;\r\n                }\r\n                if (allArgsCnt > this.params.length) {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                if (requiredArgsCnt < (this.required - 1)) {\r\n                    return false;\r\n                }\r\n            }\r\n            // check patterns\r\n            len = Math.min(requiredArgsCnt, this.arity);\r\n            for (var i = 0; i < len; i++) {\r\n                if (!this.params[i].name && !this.params[i].variadic) {\r\n                    if (args[i].value.eval(context).toCSS() != this.params[i].value.eval(context).toCSS()) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    });\n\n    var MixinCall = function (elements, args, index, currentFileInfo, important) {\r\n        this.selector = new Selector(elements);\r\n        this.arguments = args || [];\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.important = important;\r\n        this.allowRoot = true;\r\n        this.setParent(this.selector, this);\r\n    };\r\n    MixinCall.prototype = Object.assign(new Node(), {\r\n        type: 'MixinCall',\r\n        accept: function (visitor) {\r\n            if (this.selector) {\r\n                this.selector = visitor.visit(this.selector);\r\n            }\r\n            if (this.arguments.length) {\r\n                this.arguments = visitor.visitArray(this.arguments);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var mixins;\r\n            var mixin;\r\n            var mixinPath;\r\n            var args = [];\r\n            var arg;\r\n            var argValue;\r\n            var rules = [];\r\n            var match = false;\r\n            var i;\r\n            var m;\r\n            var f;\r\n            var isRecursive;\r\n            var isOneFound;\r\n            var candidates = [];\r\n            var candidate;\r\n            var conditionResult = [];\r\n            var defaultResult;\r\n            var defFalseEitherCase = -1;\r\n            var defNone = 0;\r\n            var defTrue = 1;\r\n            var defFalse = 2;\r\n            var count;\r\n            var originalRuleset;\r\n            var noArgumentsFilter;\r\n            this.selector = this.selector.eval(context);\r\n            function calcDefGroup(mixin, mixinPath) {\r\n                var f, p, namespace;\r\n                for (f = 0; f < 2; f++) {\r\n                    conditionResult[f] = true;\r\n                    defaultFunc.value(f);\r\n                    for (p = 0; p < mixinPath.length && conditionResult[f]; p++) {\r\n                        namespace = mixinPath[p];\r\n                        if (namespace.matchCondition) {\r\n                            conditionResult[f] = conditionResult[f] && namespace.matchCondition(null, context);\r\n                        }\r\n                    }\r\n                    if (mixin.matchCondition) {\r\n                        conditionResult[f] = conditionResult[f] && mixin.matchCondition(args, context);\r\n                    }\r\n                }\r\n                if (conditionResult[0] || conditionResult[1]) {\r\n                    if (conditionResult[0] != conditionResult[1]) {\r\n                        return conditionResult[1] ?\r\n                            defTrue : defFalse;\r\n                    }\r\n                    return defNone;\r\n                }\r\n                return defFalseEitherCase;\r\n            }\r\n            for (i = 0; i < this.arguments.length; i++) {\r\n                arg = this.arguments[i];\r\n                argValue = arg.value.eval(context);\r\n                if (arg.expand && Array.isArray(argValue.value)) {\r\n                    argValue = argValue.value;\r\n                    for (m = 0; m < argValue.length; m++) {\r\n                        args.push({ value: argValue[m] });\r\n                    }\r\n                }\r\n                else {\r\n                    args.push({ name: arg.name, value: argValue });\r\n                }\r\n            }\r\n            noArgumentsFilter = function (rule) { return rule.matchArgs(null, context); };\r\n            for (i = 0; i < context.frames.length; i++) {\r\n                if ((mixins = context.frames[i].find(this.selector, null, noArgumentsFilter)).length > 0) {\r\n                    isOneFound = true;\r\n                    // To make `default()` function independent of definition order we have two \"subpasses\" here.\r\n                    // At first we evaluate each guard *twice* (with `default() == true` and `default() == false`),\r\n                    // and build candidate list with corresponding flags. Then, when we know all possible matches,\r\n                    // we make a final decision.\r\n                    for (m = 0; m < mixins.length; m++) {\r\n                        mixin = mixins[m].rule;\r\n                        mixinPath = mixins[m].path;\r\n                        isRecursive = false;\r\n                        for (f = 0; f < context.frames.length; f++) {\r\n                            if ((!(mixin instanceof Definition)) && mixin === (context.frames[f].originalRuleset || context.frames[f])) {\r\n                                isRecursive = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (isRecursive) {\r\n                            continue;\r\n                        }\r\n                        if (mixin.matchArgs(args, context)) {\r\n                            candidate = { mixin: mixin, group: calcDefGroup(mixin, mixinPath) };\r\n                            if (candidate.group !== defFalseEitherCase) {\r\n                                candidates.push(candidate);\r\n                            }\r\n                            match = true;\r\n                        }\r\n                    }\r\n                    defaultFunc.reset();\r\n                    count = [0, 0, 0];\r\n                    for (m = 0; m < candidates.length; m++) {\r\n                        count[candidates[m].group]++;\r\n                    }\r\n                    if (count[defNone] > 0) {\r\n                        defaultResult = defFalse;\r\n                    }\r\n                    else {\r\n                        defaultResult = defTrue;\r\n                        if ((count[defTrue] + count[defFalse]) > 1) {\r\n                            throw { type: 'Runtime',\r\n                                message: \"Ambiguous use of `default()` found when matching for `\" + this.format(args) + \"`\",\r\n                                index: this.getIndex(), filename: this.fileInfo().filename };\r\n                        }\r\n                    }\r\n                    for (m = 0; m < candidates.length; m++) {\r\n                        candidate = candidates[m].group;\r\n                        if ((candidate === defNone) || (candidate === defaultResult)) {\r\n                            try {\r\n                                mixin = candidates[m].mixin;\r\n                                if (!(mixin instanceof Definition)) {\r\n                                    originalRuleset = mixin.originalRuleset || mixin;\r\n                                    mixin = new Definition('', [], mixin.rules, null, false, null, originalRuleset.visibilityInfo());\r\n                                    mixin.originalRuleset = originalRuleset;\r\n                                }\r\n                                var newRules = mixin.evalCall(context, args, this.important).rules;\r\n                                this._setVisibilityToReplacement(newRules);\r\n                                Array.prototype.push.apply(rules, newRules);\r\n                            }\r\n                            catch (e) {\r\n                                throw { message: e.message, index: this.getIndex(), filename: this.fileInfo().filename, stack: e.stack };\r\n                            }\r\n                        }\r\n                    }\r\n                    if (match) {\r\n                        return rules;\r\n                    }\r\n                }\r\n            }\r\n            if (isOneFound) {\r\n                throw { type: 'Runtime',\r\n                    message: \"No matching definition was found for `\" + this.format(args) + \"`\",\r\n                    index: this.getIndex(), filename: this.fileInfo().filename };\r\n            }\r\n            else {\r\n                throw { type: 'Name',\r\n                    message: this.selector.toCSS().trim() + \" is undefined\",\r\n                    index: this.getIndex(), filename: this.fileInfo().filename };\r\n            }\r\n        },\r\n        _setVisibilityToReplacement: function (replacement) {\r\n            var i, rule;\r\n            if (this.blocksVisibility()) {\r\n                for (i = 0; i < replacement.length; i++) {\r\n                    rule = replacement[i];\r\n                    rule.addVisibilityBlock();\r\n                }\r\n            }\r\n        },\r\n        format: function (args) {\r\n            return this.selector.toCSS().trim() + \"(\" + (args ? args.map(function (a) {\r\n                var argValue = '';\r\n                if (a.name) {\r\n                    argValue += a.name + \":\";\r\n                }\r\n                if (a.value.toCSS) {\r\n                    argValue += a.value.toCSS();\r\n                }\r\n                else {\r\n                    argValue += '???';\r\n                }\r\n                return argValue;\r\n            }).join(', ') : '') + \")\";\r\n        }\r\n    });\n\n    var tree = {\r\n        Node: Node,\r\n        Color: Color,\r\n        AtRule: AtRule,\r\n        DetachedRuleset: DetachedRuleset,\r\n        Operation: Operation,\r\n        Dimension: Dimension,\r\n        Unit: Unit,\r\n        Keyword: Keyword,\r\n        Variable: Variable,\r\n        Property: Property,\r\n        Ruleset: Ruleset,\r\n        Element: Element,\r\n        Attribute: Attribute,\r\n        Combinator: Combinator,\r\n        Selector: Selector,\r\n        Quoted: Quoted,\r\n        Expression: Expression,\r\n        Declaration: Declaration,\r\n        Call: Call,\r\n        URL: URL,\r\n        Import: Import,\r\n        Comment: Comment,\r\n        Anonymous: Anonymous,\r\n        Value: Value,\r\n        JavaScript: JavaScript,\r\n        Assignment: Assignment,\r\n        Condition: Condition,\r\n        Paren: Paren,\r\n        Media: Media,\r\n        UnicodeDescriptor: UnicodeDescriptor,\r\n        Negative: Negative,\r\n        Extend: Extend,\r\n        VariableCall: VariableCall,\r\n        NamespaceValue: NamespaceValue,\r\n        mixin: {\r\n            Call: MixinCall,\r\n            Definition: Definition\r\n        }\r\n    };\n\n    var AbstractFileManager = /** @class */ (function () {\r\n        function AbstractFileManager() {\r\n        }\r\n        AbstractFileManager.prototype.getPath = function (filename) {\r\n            var j = filename.lastIndexOf('?');\r\n            if (j > 0) {\r\n                filename = filename.slice(0, j);\r\n            }\r\n            j = filename.lastIndexOf('/');\r\n            if (j < 0) {\r\n                j = filename.lastIndexOf('\\\\');\r\n            }\r\n            if (j < 0) {\r\n                return '';\r\n            }\r\n            return filename.slice(0, j + 1);\r\n        };\r\n        AbstractFileManager.prototype.tryAppendExtension = function (path, ext) {\r\n            return /(\\.[a-z]*$)|([\\?;].*)$/.test(path) ? path : path + ext;\r\n        };\r\n        AbstractFileManager.prototype.tryAppendLessExtension = function (path) {\r\n            return this.tryAppendExtension(path, '.less');\r\n        };\r\n        AbstractFileManager.prototype.supportsSync = function () {\r\n            return false;\r\n        };\r\n        AbstractFileManager.prototype.alwaysMakePathsAbsolute = function () {\r\n            return false;\r\n        };\r\n        AbstractFileManager.prototype.isPathAbsolute = function (filename) {\r\n            return (/^(?:[a-z-]+:|\\/|\\\\|#)/i).test(filename);\r\n        };\r\n        // TODO: pull out / replace?\r\n        AbstractFileManager.prototype.join = function (basePath, laterPath) {\r\n            if (!basePath) {\r\n                return laterPath;\r\n            }\r\n            return basePath + laterPath;\r\n        };\r\n        AbstractFileManager.prototype.pathDiff = function (url, baseUrl) {\r\n            // diff between two paths to create a relative path\r\n            var urlParts = this.extractUrlParts(url);\r\n            var baseUrlParts = this.extractUrlParts(baseUrl);\r\n            var i;\r\n            var max;\r\n            var urlDirectories;\r\n            var baseUrlDirectories;\r\n            var diff = '';\r\n            if (urlParts.hostPart !== baseUrlParts.hostPart) {\r\n                return '';\r\n            }\r\n            max = Math.max(baseUrlParts.directories.length, urlParts.directories.length);\r\n            for (i = 0; i < max; i++) {\r\n                if (baseUrlParts.directories[i] !== urlParts.directories[i]) {\r\n                    break;\r\n                }\r\n            }\r\n            baseUrlDirectories = baseUrlParts.directories.slice(i);\r\n            urlDirectories = urlParts.directories.slice(i);\r\n            for (i = 0; i < baseUrlDirectories.length - 1; i++) {\r\n                diff += '../';\r\n            }\r\n            for (i = 0; i < urlDirectories.length - 1; i++) {\r\n                diff += urlDirectories[i] + \"/\";\r\n            }\r\n            return diff;\r\n        };\r\n        // helper function, not part of API\r\n        AbstractFileManager.prototype.extractUrlParts = function (url, baseUrl) {\r\n            // urlParts[1] = protocol://hostname/ OR /\r\n            // urlParts[2] = / if path relative to host base\r\n            // urlParts[3] = directories\r\n            // urlParts[4] = filename\r\n            // urlParts[5] = parameters\r\n            var urlPartsRegex = /^((?:[a-z-]+:)?\\/{2}(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$/i;\r\n            var urlParts = url.match(urlPartsRegex);\r\n            var returner = {};\r\n            var rawDirectories = [];\r\n            var directories = [];\r\n            var i;\r\n            var baseUrlParts;\r\n            if (!urlParts) {\r\n                throw new Error(\"Could not parse sheet href - '\" + url + \"'\");\r\n            }\r\n            // Stylesheets in IE don't always return the full path\r\n            if (baseUrl && (!urlParts[1] || urlParts[2])) {\r\n                baseUrlParts = baseUrl.match(urlPartsRegex);\r\n                if (!baseUrlParts) {\r\n                    throw new Error(\"Could not parse page url - '\" + baseUrl + \"'\");\r\n                }\r\n                urlParts[1] = urlParts[1] || baseUrlParts[1] || '';\r\n                if (!urlParts[2]) {\r\n                    urlParts[3] = baseUrlParts[3] + urlParts[3];\r\n                }\r\n            }\r\n            if (urlParts[3]) {\r\n                rawDirectories = urlParts[3].replace(/\\\\/g, '/').split('/');\r\n                // collapse '..' and skip '.'\r\n                for (i = 0; i < rawDirectories.length; i++) {\r\n                    if (rawDirectories[i] === '..') {\r\n                        directories.pop();\r\n                    }\r\n                    else if (rawDirectories[i] !== '.') {\r\n                        directories.push(rawDirectories[i]);\r\n                    }\r\n                }\r\n            }\r\n            returner.hostPart = urlParts[1];\r\n            returner.directories = directories;\r\n            returner.rawPath = (urlParts[1] || '') + rawDirectories.join('/');\r\n            returner.path = (urlParts[1] || '') + directories.join('/');\r\n            returner.filename = urlParts[4];\r\n            returner.fileUrl = returner.path + (urlParts[4] || '');\r\n            returner.url = returner.fileUrl + (urlParts[5] || '');\r\n            return returner;\r\n        };\r\n        return AbstractFileManager;\r\n    }());\n\n    var AbstractPluginLoader = /** @class */ (function () {\r\n        function AbstractPluginLoader() {\r\n            // Implemented by Node.js plugin loader\r\n            this.require = function () {\r\n                return null;\r\n            };\r\n        }\r\n        AbstractPluginLoader.prototype.evalPlugin = function (contents, context, imports, pluginOptions, fileInfo) {\r\n            var loader, registry, pluginObj, localModule, pluginManager, filename, result;\r\n            pluginManager = context.pluginManager;\r\n            if (fileInfo) {\r\n                if (typeof fileInfo === 'string') {\r\n                    filename = fileInfo;\r\n                }\r\n                else {\r\n                    filename = fileInfo.filename;\r\n                }\r\n            }\r\n            var shortname = (new this.less.FileManager()).extractUrlParts(filename).filename;\r\n            if (filename) {\r\n                pluginObj = pluginManager.get(filename);\r\n                if (pluginObj) {\r\n                    result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                    if (result) {\r\n                        return result;\r\n                    }\r\n                    try {\r\n                        if (pluginObj.use) {\r\n                            pluginObj.use.call(this.context, pluginObj);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        e.message = e.message || 'Error during @plugin call';\r\n                        return new LessError(e, imports, filename);\r\n                    }\r\n                    return pluginObj;\r\n                }\r\n            }\r\n            localModule = {\r\n                exports: {},\r\n                pluginManager: pluginManager,\r\n                fileInfo: fileInfo\r\n            };\r\n            registry = functionRegistry.create();\r\n            var registerPlugin = function (obj) {\r\n                pluginObj = obj;\r\n            };\r\n            try {\r\n                loader = new Function('module', 'require', 'registerPlugin', 'functions', 'tree', 'less', 'fileInfo', contents);\r\n                loader(localModule, this.require(filename), registerPlugin, registry, this.less.tree, this.less, fileInfo);\r\n            }\r\n            catch (e) {\r\n                return new LessError(e, imports, filename);\r\n            }\r\n            if (!pluginObj) {\r\n                pluginObj = localModule.exports;\r\n            }\r\n            pluginObj = this.validatePlugin(pluginObj, filename, shortname);\r\n            if (pluginObj instanceof LessError) {\r\n                return pluginObj;\r\n            }\r\n            if (pluginObj) {\r\n                pluginObj.imports = imports;\r\n                pluginObj.filename = filename;\r\n                // For < 3.x (or unspecified minVersion) - setOptions() before install()\r\n                if (!pluginObj.minVersion || this.compareVersion('3.0.0', pluginObj.minVersion) < 0) {\r\n                    result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                    if (result) {\r\n                        return result;\r\n                    }\r\n                }\r\n                // Run on first load\r\n                pluginManager.addPlugin(pluginObj, fileInfo.filename, registry);\r\n                pluginObj.functions = registry.getLocalFunctions();\r\n                // Need to call setOptions again because the pluginObj might have functions\r\n                result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                if (result) {\r\n                    return result;\r\n                }\r\n                // Run every @plugin call\r\n                try {\r\n                    if (pluginObj.use) {\r\n                        pluginObj.use.call(this.context, pluginObj);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    e.message = e.message || 'Error during @plugin call';\r\n                    return new LessError(e, imports, filename);\r\n                }\r\n            }\r\n            else {\r\n                return new LessError({ message: 'Not a valid plugin' }, imports, filename);\r\n            }\r\n            return pluginObj;\r\n        };\r\n        AbstractPluginLoader.prototype.trySetOptions = function (plugin, filename, name, options) {\r\n            if (options && !plugin.setOptions) {\r\n                return new LessError({\r\n                    message: \"Options have been provided but the plugin \" + name + \" does not support any options.\"\r\n                });\r\n            }\r\n            try {\r\n                plugin.setOptions && plugin.setOptions(options);\r\n            }\r\n            catch (e) {\r\n                return new LessError(e);\r\n            }\r\n        };\r\n        AbstractPluginLoader.prototype.validatePlugin = function (plugin, filename, name) {\r\n            if (plugin) {\r\n                // support plugins being a function\r\n                // so that the plugin can be more usable programmatically\r\n                if (typeof plugin === 'function') {\r\n                    plugin = new plugin();\r\n                }\r\n                if (plugin.minVersion) {\r\n                    if (this.compareVersion(plugin.minVersion, this.less.version) < 0) {\r\n                        return new LessError({\r\n                            message: \"Plugin \" + name + \" requires version \" + this.versionToString(plugin.minVersion)\r\n                        });\r\n                    }\r\n                }\r\n                return plugin;\r\n            }\r\n            return null;\r\n        };\r\n        AbstractPluginLoader.prototype.compareVersion = function (aVersion, bVersion) {\r\n            if (typeof aVersion === 'string') {\r\n                aVersion = aVersion.match(/^(\\d+)\\.?(\\d+)?\\.?(\\d+)?/);\r\n                aVersion.shift();\r\n            }\r\n            for (var i = 0; i < aVersion.length; i++) {\r\n                if (aVersion[i] !== bVersion[i]) {\r\n                    return parseInt(aVersion[i]) > parseInt(bVersion[i]) ? -1 : 1;\r\n                }\r\n            }\r\n            return 0;\r\n        };\r\n        AbstractPluginLoader.prototype.versionToString = function (version) {\r\n            var versionString = '';\r\n            for (var i = 0; i < version.length; i++) {\r\n                versionString += (versionString ? '.' : '') + version[i];\r\n            }\r\n            return versionString;\r\n        };\r\n        AbstractPluginLoader.prototype.printUsage = function (plugins) {\r\n            for (var i = 0; i < plugins.length; i++) {\r\n                var plugin = plugins[i];\r\n                if (plugin.printUsage) {\r\n                    plugin.printUsage();\r\n                }\r\n            }\r\n        };\r\n        return AbstractPluginLoader;\r\n    }());\n\n    var _visitArgs = { visitDeeper: true };\r\n    var _hasIndexed = false;\r\n    function _noop(node) {\r\n        return node;\r\n    }\r\n    function indexNodeTypes(parent, ticker) {\r\n        // add .typeIndex to tree node types for lookup table\r\n        var key, child;\r\n        for (key in parent) {\r\n            /* eslint guard-for-in: 0 */\r\n            child = parent[key];\r\n            switch (typeof child) {\r\n                case 'function':\r\n                    // ignore bound functions directly on tree which do not have a prototype\r\n                    // or aren't nodes\r\n                    if (child.prototype && child.prototype.type) {\r\n                        child.prototype.typeIndex = ticker++;\r\n                    }\r\n                    break;\r\n                case 'object':\r\n                    ticker = indexNodeTypes(child, ticker);\r\n                    break;\r\n            }\r\n        }\r\n        return ticker;\r\n    }\r\n    var Visitor = /** @class */ (function () {\r\n        function Visitor(implementation) {\r\n            this._implementation = implementation;\r\n            this._visitInCache = {};\r\n            this._visitOutCache = {};\r\n            if (!_hasIndexed) {\r\n                indexNodeTypes(tree, 1);\r\n                _hasIndexed = true;\r\n            }\r\n        }\r\n        Visitor.prototype.visit = function (node) {\r\n            if (!node) {\r\n                return node;\r\n            }\r\n            var nodeTypeIndex = node.typeIndex;\r\n            if (!nodeTypeIndex) {\r\n                // MixinCall args aren't a node type?\r\n                if (node.value && node.value.typeIndex) {\r\n                    this.visit(node.value);\r\n                }\r\n                return node;\r\n            }\r\n            var impl = this._implementation;\r\n            var func = this._visitInCache[nodeTypeIndex];\r\n            var funcOut = this._visitOutCache[nodeTypeIndex];\r\n            var visitArgs = _visitArgs;\r\n            var fnName;\r\n            visitArgs.visitDeeper = true;\r\n            if (!func) {\r\n                fnName = \"visit\" + node.type;\r\n                func = impl[fnName] || _noop;\r\n                funcOut = impl[fnName + \"Out\"] || _noop;\r\n                this._visitInCache[nodeTypeIndex] = func;\r\n                this._visitOutCache[nodeTypeIndex] = funcOut;\r\n            }\r\n            if (func !== _noop) {\r\n                var newNode = func.call(impl, node, visitArgs);\r\n                if (node && impl.isReplacing) {\r\n                    node = newNode;\r\n                }\r\n            }\r\n            if (visitArgs.visitDeeper && node) {\r\n                if (node.length) {\r\n                    for (var i = 0, cnt = node.length; i < cnt; i++) {\r\n                        if (node[i].accept) {\r\n                            node[i].accept(this);\r\n                        }\r\n                    }\r\n                }\r\n                else if (node.accept) {\r\n                    node.accept(this);\r\n                }\r\n            }\r\n            if (funcOut != _noop) {\r\n                funcOut.call(impl, node);\r\n            }\r\n            return node;\r\n        };\r\n        Visitor.prototype.visitArray = function (nodes, nonReplacing) {\r\n            if (!nodes) {\r\n                return nodes;\r\n            }\r\n            var cnt = nodes.length;\r\n            var i;\r\n            // Non-replacing\r\n            if (nonReplacing || !this._implementation.isReplacing) {\r\n                for (i = 0; i < cnt; i++) {\r\n                    this.visit(nodes[i]);\r\n                }\r\n                return nodes;\r\n            }\r\n            // Replacing\r\n            var out = [];\r\n            for (i = 0; i < cnt; i++) {\r\n                var evald = this.visit(nodes[i]);\r\n                if (evald === undefined) {\r\n                    continue;\r\n                }\r\n                if (!evald.splice) {\r\n                    out.push(evald);\r\n                }\r\n                else if (evald.length) {\r\n                    this.flatten(evald, out);\r\n                }\r\n            }\r\n            return out;\r\n        };\r\n        Visitor.prototype.flatten = function (arr, out) {\r\n            if (!out) {\r\n                out = [];\r\n            }\r\n            var cnt, i, item, nestedCnt, j, nestedItem;\r\n            for (i = 0, cnt = arr.length; i < cnt; i++) {\r\n                item = arr[i];\r\n                if (item === undefined) {\r\n                    continue;\r\n                }\r\n                if (!item.splice) {\r\n                    out.push(item);\r\n                    continue;\r\n                }\r\n                for (j = 0, nestedCnt = item.length; j < nestedCnt; j++) {\r\n                    nestedItem = item[j];\r\n                    if (nestedItem === undefined) {\r\n                        continue;\r\n                    }\r\n                    if (!nestedItem.splice) {\r\n                        out.push(nestedItem);\r\n                    }\r\n                    else if (nestedItem.length) {\r\n                        this.flatten(nestedItem, out);\r\n                    }\r\n                }\r\n            }\r\n            return out;\r\n        };\r\n        return Visitor;\r\n    }());\n\n    var ImportSequencer = /** @class */ (function () {\r\n        function ImportSequencer(onSequencerEmpty) {\r\n            this.imports = [];\r\n            this.variableImports = [];\r\n            this._onSequencerEmpty = onSequencerEmpty;\r\n            this._currentDepth = 0;\r\n        }\r\n        ImportSequencer.prototype.addImport = function (callback) {\r\n            var importSequencer = this, importItem = {\r\n                callback: callback,\r\n                args: null,\r\n                isReady: false\r\n            };\r\n            this.imports.push(importItem);\r\n            return function () {\r\n                importItem.args = Array.prototype.slice.call(arguments, 0);\r\n                importItem.isReady = true;\r\n                importSequencer.tryRun();\r\n            };\r\n        };\r\n        ImportSequencer.prototype.addVariableImport = function (callback) {\r\n            this.variableImports.push(callback);\r\n        };\r\n        ImportSequencer.prototype.tryRun = function () {\r\n            this._currentDepth++;\r\n            try {\r\n                while (true) {\r\n                    while (this.imports.length > 0) {\r\n                        var importItem = this.imports[0];\r\n                        if (!importItem.isReady) {\r\n                            return;\r\n                        }\r\n                        this.imports = this.imports.slice(1);\r\n                        importItem.callback.apply(null, importItem.args);\r\n                    }\r\n                    if (this.variableImports.length === 0) {\r\n                        break;\r\n                    }\r\n                    var variableImport = this.variableImports[0];\r\n                    this.variableImports = this.variableImports.slice(1);\r\n                    variableImport();\r\n                }\r\n            }\r\n            finally {\r\n                this._currentDepth--;\r\n            }\r\n            if (this._currentDepth === 0 && this._onSequencerEmpty) {\r\n                this._onSequencerEmpty();\r\n            }\r\n        };\r\n        return ImportSequencer;\r\n    }());\n\n    var ImportVisitor = function (importer, finish) {\r\n        this._visitor = new Visitor(this);\r\n        this._importer = importer;\r\n        this._finish = finish;\r\n        this.context = new contexts.Eval();\r\n        this.importCount = 0;\r\n        this.onceFileDetectionMap = {};\r\n        this.recursionDetector = {};\r\n        this._sequencer = new ImportSequencer(this._onSequencerEmpty.bind(this));\r\n    };\r\n    ImportVisitor.prototype = {\r\n        isReplacing: false,\r\n        run: function (root) {\r\n            try {\r\n                // process the contents\r\n                this._visitor.visit(root);\r\n            }\r\n            catch (e) {\r\n                this.error = e;\r\n            }\r\n            this.isFinished = true;\r\n            this._sequencer.tryRun();\r\n        },\r\n        _onSequencerEmpty: function () {\r\n            if (!this.isFinished) {\r\n                return;\r\n            }\r\n            this._finish(this.error);\r\n        },\r\n        visitImport: function (importNode, visitArgs) {\r\n            var inlineCSS = importNode.options.inline;\r\n            if (!importNode.css || inlineCSS) {\r\n                var context = new contexts.Eval(this.context, copyArray(this.context.frames));\r\n                var importParent = context.frames[0];\r\n                this.importCount++;\r\n                if (importNode.isVariableImport()) {\r\n                    this._sequencer.addVariableImport(this.processImportNode.bind(this, importNode, context, importParent));\r\n                }\r\n                else {\r\n                    this.processImportNode(importNode, context, importParent);\r\n                }\r\n            }\r\n            visitArgs.visitDeeper = false;\r\n        },\r\n        processImportNode: function (importNode, context, importParent) {\r\n            var evaldImportNode;\r\n            var inlineCSS = importNode.options.inline;\r\n            try {\r\n                evaldImportNode = importNode.evalForImport(context);\r\n            }\r\n            catch (e) {\r\n                if (!e.filename) {\r\n                    e.index = importNode.getIndex();\r\n                    e.filename = importNode.fileInfo().filename;\r\n                }\r\n                // attempt to eval properly and treat as css\r\n                importNode.css = true;\r\n                // if that fails, this error will be thrown\r\n                importNode.error = e;\r\n            }\r\n            if (evaldImportNode && (!evaldImportNode.css || inlineCSS)) {\r\n                if (evaldImportNode.options.multiple) {\r\n                    context.importMultiple = true;\r\n                }\r\n                // try appending if we haven't determined if it is css or not\r\n                var tryAppendLessExtension = evaldImportNode.css === undefined;\r\n                for (var i = 0; i < importParent.rules.length; i++) {\r\n                    if (importParent.rules[i] === importNode) {\r\n                        importParent.rules[i] = evaldImportNode;\r\n                        break;\r\n                    }\r\n                }\r\n                var onImported = this.onImported.bind(this, evaldImportNode, context), sequencedOnImported = this._sequencer.addImport(onImported);\r\n                this._importer.push(evaldImportNode.getPath(), tryAppendLessExtension, evaldImportNode.fileInfo(), evaldImportNode.options, sequencedOnImported);\r\n            }\r\n            else {\r\n                this.importCount--;\r\n                if (this.isFinished) {\r\n                    this._sequencer.tryRun();\r\n                }\r\n            }\r\n        },\r\n        onImported: function (importNode, context, e, root, importedAtRoot, fullPath) {\r\n            if (e) {\r\n                if (!e.filename) {\r\n                    e.index = importNode.getIndex();\r\n                    e.filename = importNode.fileInfo().filename;\r\n                }\r\n                this.error = e;\r\n            }\r\n            var importVisitor = this, inlineCSS = importNode.options.inline, isPlugin = importNode.options.isPlugin, isOptional = importNode.options.optional, duplicateImport = importedAtRoot || fullPath in importVisitor.recursionDetector;\r\n            if (!context.importMultiple) {\r\n                if (duplicateImport) {\r\n                    importNode.skip = true;\r\n                }\r\n                else {\r\n                    importNode.skip = function () {\r\n                        if (fullPath in importVisitor.onceFileDetectionMap) {\r\n                            return true;\r\n                        }\r\n                        importVisitor.onceFileDetectionMap[fullPath] = true;\r\n                        return false;\r\n                    };\r\n                }\r\n            }\r\n            if (!fullPath && isOptional) {\r\n                importNode.skip = true;\r\n            }\r\n            if (root) {\r\n                importNode.root = root;\r\n                importNode.importedFilename = fullPath;\r\n                if (!inlineCSS && !isPlugin && (context.importMultiple || !duplicateImport)) {\r\n                    importVisitor.recursionDetector[fullPath] = true;\r\n                    var oldContext = this.context;\r\n                    this.context = context;\r\n                    try {\r\n                        this._visitor.visit(root);\r\n                    }\r\n                    catch (e) {\r\n                        this.error = e;\r\n                    }\r\n                    this.context = oldContext;\r\n                }\r\n            }\r\n            importVisitor.importCount--;\r\n            if (importVisitor.isFinished) {\r\n                importVisitor._sequencer.tryRun();\r\n            }\r\n        },\r\n        visitDeclaration: function (declNode, visitArgs) {\r\n            if (declNode.value.type === 'DetachedRuleset') {\r\n                this.context.frames.unshift(declNode);\r\n            }\r\n            else {\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n        },\r\n        visitDeclarationOut: function (declNode) {\r\n            if (declNode.value.type === 'DetachedRuleset') {\r\n                this.context.frames.shift();\r\n            }\r\n        },\r\n        visitAtRule: function (atRuleNode, visitArgs) {\r\n            this.context.frames.unshift(atRuleNode);\r\n        },\r\n        visitAtRuleOut: function (atRuleNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\r\n            this.context.frames.unshift(mixinDefinitionNode);\r\n        },\r\n        visitMixinDefinitionOut: function (mixinDefinitionNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitRuleset: function (rulesetNode, visitArgs) {\r\n            this.context.frames.unshift(rulesetNode);\r\n        },\r\n        visitRulesetOut: function (rulesetNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitMedia: function (mediaNode, visitArgs) {\r\n            this.context.frames.unshift(mediaNode.rules[0]);\r\n        },\r\n        visitMediaOut: function (mediaNode) {\r\n            this.context.frames.shift();\r\n        }\r\n    };\n\n    var SetTreeVisibilityVisitor = /** @class */ (function () {\r\n        function SetTreeVisibilityVisitor(visible) {\r\n            this.visible = visible;\r\n        }\r\n        SetTreeVisibilityVisitor.prototype.run = function (root) {\r\n            this.visit(root);\r\n        };\r\n        SetTreeVisibilityVisitor.prototype.visitArray = function (nodes) {\r\n            if (!nodes) {\r\n                return nodes;\r\n            }\r\n            var cnt = nodes.length;\r\n            var i;\r\n            for (i = 0; i < cnt; i++) {\r\n                this.visit(nodes[i]);\r\n            }\r\n            return nodes;\r\n        };\r\n        SetTreeVisibilityVisitor.prototype.visit = function (node) {\r\n            if (!node) {\r\n                return node;\r\n            }\r\n            if (node.constructor === Array) {\r\n                return this.visitArray(node);\r\n            }\r\n            if (!node.blocksVisibility || node.blocksVisibility()) {\r\n                return node;\r\n            }\r\n            if (this.visible) {\r\n                node.ensureVisibility();\r\n            }\r\n            else {\r\n                node.ensureInvisibility();\r\n            }\r\n            node.accept(this);\r\n            return node;\r\n        };\r\n        return SetTreeVisibilityVisitor;\r\n    }());\n\n    /* jshint loopfunc:true */\r\n    var ExtendFinderVisitor = /** @class */ (function () {\r\n        function ExtendFinderVisitor() {\r\n            this._visitor = new Visitor(this);\r\n            this.contexts = [];\r\n            this.allExtendsStack = [[]];\r\n        }\r\n        ExtendFinderVisitor.prototype.run = function (root) {\r\n            root = this._visitor.visit(root);\r\n            root.allExtends = this.allExtendsStack[0];\r\n            return root;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            if (rulesetNode.root) {\r\n                return;\r\n            }\r\n            var i;\r\n            var j;\r\n            var extend;\r\n            var allSelectorsExtendList = [];\r\n            var extendList;\r\n            // get &:extend(.a); rules which apply to all selectors in this ruleset\r\n            var rules = rulesetNode.rules, ruleCnt = rules ? rules.length : 0;\r\n            for (i = 0; i < ruleCnt; i++) {\r\n                if (rulesetNode.rules[i] instanceof tree.Extend) {\r\n                    allSelectorsExtendList.push(rules[i]);\r\n                    rulesetNode.extendOnEveryPath = true;\r\n                }\r\n            }\r\n            // now find every selector and apply the extends that apply to all extends\r\n            // and the ones which apply to an individual extend\r\n            var paths = rulesetNode.paths;\r\n            for (i = 0; i < paths.length; i++) {\r\n                var selectorPath = paths[i], selector = selectorPath[selectorPath.length - 1], selExtendList = selector.extendList;\r\n                extendList = selExtendList ? copyArray(selExtendList).concat(allSelectorsExtendList)\r\n                    : allSelectorsExtendList;\r\n                if (extendList) {\r\n                    extendList = extendList.map(function (allSelectorsExtend) {\r\n                        return allSelectorsExtend.clone();\r\n                    });\r\n                }\r\n                for (j = 0; j < extendList.length; j++) {\r\n                    this.foundExtends = true;\r\n                    extend = extendList[j];\r\n                    extend.findSelfSelectors(selectorPath);\r\n                    extend.ruleset = rulesetNode;\r\n                    if (j === 0) {\r\n                        extend.firstExtendOnThisSelectorPath = true;\r\n                    }\r\n                    this.allExtendsStack[this.allExtendsStack.length - 1].push(extend);\r\n                }\r\n            }\r\n            this.contexts.push(rulesetNode.selectors);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitRulesetOut = function (rulesetNode) {\r\n            if (!rulesetNode.root) {\r\n                this.contexts.length = this.contexts.length - 1;\r\n            }\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            mediaNode.allExtends = [];\r\n            this.allExtendsStack.push(mediaNode.allExtends);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMediaOut = function (mediaNode) {\r\n            this.allExtendsStack.length = this.allExtendsStack.length - 1;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            atRuleNode.allExtends = [];\r\n            this.allExtendsStack.push(atRuleNode.allExtends);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\r\n            this.allExtendsStack.length = this.allExtendsStack.length - 1;\r\n        };\r\n        return ExtendFinderVisitor;\r\n    }());\r\n    var ProcessExtendsVisitor = /** @class */ (function () {\r\n        function ProcessExtendsVisitor() {\r\n            this._visitor = new Visitor(this);\r\n        }\r\n        ProcessExtendsVisitor.prototype.run = function (root) {\r\n            var extendFinder = new ExtendFinderVisitor();\r\n            this.extendIndices = {};\r\n            extendFinder.run(root);\r\n            if (!extendFinder.foundExtends) {\r\n                return root;\r\n            }\r\n            root.allExtends = root.allExtends.concat(this.doExtendChaining(root.allExtends, root.allExtends));\r\n            this.allExtendsStack = [root.allExtends];\r\n            var newRoot = this._visitor.visit(root);\r\n            this.checkExtendsForNonMatched(root.allExtends);\r\n            return newRoot;\r\n        };\r\n        ProcessExtendsVisitor.prototype.checkExtendsForNonMatched = function (extendList) {\r\n            var indices = this.extendIndices;\r\n            extendList.filter(function (extend) {\r\n                return !extend.hasFoundMatches && extend.parent_ids.length == 1;\r\n            }).forEach(function (extend) {\r\n                var selector = '_unknown_';\r\n                try {\r\n                    selector = extend.selector.toCSS({});\r\n                }\r\n                catch (_) { }\r\n                if (!indices[extend.index + \" \" + selector]) {\r\n                    indices[extend.index + \" \" + selector] = true;\r\n                    logger$1.warn(\"extend '\" + selector + \"' has no matches\");\r\n                }\r\n            });\r\n        };\r\n        ProcessExtendsVisitor.prototype.doExtendChaining = function (extendsList, extendsListTarget, iterationCount) {\r\n            //\r\n            // chaining is different from normal extension.. if we extend an extend then we are not just copying, altering\r\n            // and pasting the selector we would do normally, but we are also adding an extend with the same target selector\r\n            // this means this new extend can then go and alter other extends\r\n            //\r\n            // this method deals with all the chaining work - without it, extend is flat and doesn't work on other extend selectors\r\n            // this is also the most expensive.. and a match on one selector can cause an extension of a selector we had already\r\n            // processed if we look at each selector at a time, as is done in visitRuleset\r\n            var extendIndex;\r\n            var targetExtendIndex;\r\n            var matches;\r\n            var extendsToAdd = [];\r\n            var newSelector;\r\n            var extendVisitor = this;\r\n            var selectorPath;\r\n            var extend;\r\n            var targetExtend;\r\n            var newExtend;\r\n            iterationCount = iterationCount || 0;\r\n            // loop through comparing every extend with every target extend.\r\n            // a target extend is the one on the ruleset we are looking at copy/edit/pasting in place\r\n            // e.g.  .a:extend(.b) {}  and .b:extend(.c) {} then the first extend extends the second one\r\n            // and the second is the target.\r\n            // the separation into two lists allows us to process a subset of chains with a bigger set, as is the\r\n            // case when processing media queries\r\n            for (extendIndex = 0; extendIndex < extendsList.length; extendIndex++) {\r\n                for (targetExtendIndex = 0; targetExtendIndex < extendsListTarget.length; targetExtendIndex++) {\r\n                    extend = extendsList[extendIndex];\r\n                    targetExtend = extendsListTarget[targetExtendIndex];\r\n                    // look for circular references\r\n                    if (extend.parent_ids.indexOf(targetExtend.object_id) >= 0) {\r\n                        continue;\r\n                    }\r\n                    // find a match in the target extends self selector (the bit before :extend)\r\n                    selectorPath = [targetExtend.selfSelectors[0]];\r\n                    matches = extendVisitor.findMatch(extend, selectorPath);\r\n                    if (matches.length) {\r\n                        extend.hasFoundMatches = true;\r\n                        // we found a match, so for each self selector..\r\n                        extend.selfSelectors.forEach(function (selfSelector) {\r\n                            var info = targetExtend.visibilityInfo();\r\n                            // process the extend as usual\r\n                            newSelector = extendVisitor.extendSelector(matches, selectorPath, selfSelector, extend.isVisible());\r\n                            // but now we create a new extend from it\r\n                            newExtend = new (tree.Extend)(targetExtend.selector, targetExtend.option, 0, targetExtend.fileInfo(), info);\r\n                            newExtend.selfSelectors = newSelector;\r\n                            // add the extend onto the list of extends for that selector\r\n                            newSelector[newSelector.length - 1].extendList = [newExtend];\r\n                            // record that we need to add it.\r\n                            extendsToAdd.push(newExtend);\r\n                            newExtend.ruleset = targetExtend.ruleset;\r\n                            // remember its parents for circular references\r\n                            newExtend.parent_ids = newExtend.parent_ids.concat(targetExtend.parent_ids, extend.parent_ids);\r\n                            // only process the selector once.. if we have :extend(.a,.b) then multiple\r\n                            // extends will look at the same selector path, so when extending\r\n                            // we know that any others will be duplicates in terms of what is added to the css\r\n                            if (targetExtend.firstExtendOnThisSelectorPath) {\r\n                                newExtend.firstExtendOnThisSelectorPath = true;\r\n                                targetExtend.ruleset.paths.push(newSelector);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            if (extendsToAdd.length) {\r\n                // try to detect circular references to stop a stack overflow.\r\n                // may no longer be needed.\r\n                this.extendChainCount++;\r\n                if (iterationCount > 100) {\r\n                    var selectorOne = '{unable to calculate}';\r\n                    var selectorTwo = '{unable to calculate}';\r\n                    try {\r\n                        selectorOne = extendsToAdd[0].selfSelectors[0].toCSS();\r\n                        selectorTwo = extendsToAdd[0].selector.toCSS();\r\n                    }\r\n                    catch (e) { }\r\n                    throw { message: \"extend circular reference detected. One of the circular extends is currently:\" + selectorOne + \":extend(\" + selectorTwo + \")\" };\r\n                }\r\n                // now process the new extends on the existing rules so that we can handle a extending b extending c extending\r\n                // d extending e...\r\n                return extendsToAdd.concat(extendVisitor.doExtendChaining(extendsToAdd, extendsListTarget, iterationCount + 1));\r\n            }\r\n            else {\r\n                return extendsToAdd;\r\n            }\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitDeclaration = function (ruleNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitSelector = function (selectorNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            if (rulesetNode.root) {\r\n                return;\r\n            }\r\n            var matches;\r\n            var pathIndex;\r\n            var extendIndex;\r\n            var allExtends = this.allExtendsStack[this.allExtendsStack.length - 1];\r\n            var selectorsToAdd = [];\r\n            var extendVisitor = this;\r\n            var selectorPath;\r\n            // look at each selector path in the ruleset, find any extend matches and then copy, find and replace\r\n            for (extendIndex = 0; extendIndex < allExtends.length; extendIndex++) {\r\n                for (pathIndex = 0; pathIndex < rulesetNode.paths.length; pathIndex++) {\r\n                    selectorPath = rulesetNode.paths[pathIndex];\r\n                    // extending extends happens initially, before the main pass\r\n                    if (rulesetNode.extendOnEveryPath) {\r\n                        continue;\r\n                    }\r\n                    var extendList = selectorPath[selectorPath.length - 1].extendList;\r\n                    if (extendList && extendList.length) {\r\n                        continue;\r\n                    }\r\n                    matches = this.findMatch(allExtends[extendIndex], selectorPath);\r\n                    if (matches.length) {\r\n                        allExtends[extendIndex].hasFoundMatches = true;\r\n                        allExtends[extendIndex].selfSelectors.forEach(function (selfSelector) {\r\n                            var extendedSelectors;\r\n                            extendedSelectors = extendVisitor.extendSelector(matches, selectorPath, selfSelector, allExtends[extendIndex].isVisible());\r\n                            selectorsToAdd.push(extendedSelectors);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            rulesetNode.paths = rulesetNode.paths.concat(selectorsToAdd);\r\n        };\r\n        ProcessExtendsVisitor.prototype.findMatch = function (extend, haystackSelectorPath) {\r\n            //\r\n            // look through the haystack selector path to try and find the needle - extend.selector\r\n            // returns an array of selector matches that can then be replaced\r\n            //\r\n            var haystackSelectorIndex;\r\n            var hackstackSelector;\r\n            var hackstackElementIndex;\r\n            var haystackElement;\r\n            var targetCombinator;\r\n            var i;\r\n            var extendVisitor = this;\r\n            var needleElements = extend.selector.elements;\r\n            var potentialMatches = [];\r\n            var potentialMatch;\r\n            var matches = [];\r\n            // loop through the haystack elements\r\n            for (haystackSelectorIndex = 0; haystackSelectorIndex < haystackSelectorPath.length; haystackSelectorIndex++) {\r\n                hackstackSelector = haystackSelectorPath[haystackSelectorIndex];\r\n                for (hackstackElementIndex = 0; hackstackElementIndex < hackstackSelector.elements.length; hackstackElementIndex++) {\r\n                    haystackElement = hackstackSelector.elements[hackstackElementIndex];\r\n                    // if we allow elements before our match we can add a potential match every time. otherwise only at the first element.\r\n                    if (extend.allowBefore || (haystackSelectorIndex === 0 && hackstackElementIndex === 0)) {\r\n                        potentialMatches.push({ pathIndex: haystackSelectorIndex, index: hackstackElementIndex, matched: 0,\r\n                            initialCombinator: haystackElement.combinator });\r\n                    }\r\n                    for (i = 0; i < potentialMatches.length; i++) {\r\n                        potentialMatch = potentialMatches[i];\r\n                        // selectors add \" \" onto the first element. When we use & it joins the selectors together, but if we don't\r\n                        // then each selector in haystackSelectorPath has a space before it added in the toCSS phase. so we need to\r\n                        // work out what the resulting combinator will be\r\n                        targetCombinator = haystackElement.combinator.value;\r\n                        if (targetCombinator === '' && hackstackElementIndex === 0) {\r\n                            targetCombinator = ' ';\r\n                        }\r\n                        // if we don't match, null our match to indicate failure\r\n                        if (!extendVisitor.isElementValuesEqual(needleElements[potentialMatch.matched].value, haystackElement.value) ||\r\n                            (potentialMatch.matched > 0 && needleElements[potentialMatch.matched].combinator.value !== targetCombinator)) {\r\n                            potentialMatch = null;\r\n                        }\r\n                        else {\r\n                            potentialMatch.matched++;\r\n                        }\r\n                        // if we are still valid and have finished, test whether we have elements after and whether these are allowed\r\n                        if (potentialMatch) {\r\n                            potentialMatch.finished = potentialMatch.matched === needleElements.length;\r\n                            if (potentialMatch.finished &&\r\n                                (!extend.allowAfter &&\r\n                                    (hackstackElementIndex + 1 < hackstackSelector.elements.length || haystackSelectorIndex + 1 < haystackSelectorPath.length))) {\r\n                                potentialMatch = null;\r\n                            }\r\n                        }\r\n                        // if null we remove, if not, we are still valid, so either push as a valid match or continue\r\n                        if (potentialMatch) {\r\n                            if (potentialMatch.finished) {\r\n                                potentialMatch.length = needleElements.length;\r\n                                potentialMatch.endPathIndex = haystackSelectorIndex;\r\n                                potentialMatch.endPathElementIndex = hackstackElementIndex + 1; // index after end of match\r\n                                potentialMatches.length = 0; // we don't allow matches to overlap, so start matching again\r\n                                matches.push(potentialMatch);\r\n                            }\r\n                        }\r\n                        else {\r\n                            potentialMatches.splice(i, 1);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return matches;\r\n        };\r\n        ProcessExtendsVisitor.prototype.isElementValuesEqual = function (elementValue1, elementValue2) {\r\n            if (typeof elementValue1 === 'string' || typeof elementValue2 === 'string') {\r\n                return elementValue1 === elementValue2;\r\n            }\r\n            if (elementValue1 instanceof tree.Attribute) {\r\n                if (elementValue1.op !== elementValue2.op || elementValue1.key !== elementValue2.key) {\r\n                    return false;\r\n                }\r\n                if (!elementValue1.value || !elementValue2.value) {\r\n                    if (elementValue1.value || elementValue2.value) {\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                }\r\n                elementValue1 = elementValue1.value.value || elementValue1.value;\r\n                elementValue2 = elementValue2.value.value || elementValue2.value;\r\n                return elementValue1 === elementValue2;\r\n            }\r\n            elementValue1 = elementValue1.value;\r\n            elementValue2 = elementValue2.value;\r\n            if (elementValue1 instanceof tree.Selector) {\r\n                if (!(elementValue2 instanceof tree.Selector) || elementValue1.elements.length !== elementValue2.elements.length) {\r\n                    return false;\r\n                }\r\n                for (var i = 0; i < elementValue1.elements.length; i++) {\r\n                    if (elementValue1.elements[i].combinator.value !== elementValue2.elements[i].combinator.value) {\r\n                        if (i !== 0 || (elementValue1.elements[i].combinator.value || ' ') !== (elementValue2.elements[i].combinator.value || ' ')) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    if (!this.isElementValuesEqual(elementValue1.elements[i].value, elementValue2.elements[i].value)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.extendSelector = function (matches, selectorPath, replacementSelector, isVisible) {\r\n            // for a set of matches, replace each match with the replacement selector\r\n            var currentSelectorPathIndex = 0, currentSelectorPathElementIndex = 0, path = [], matchIndex, selector, firstElement, match, newElements;\r\n            for (matchIndex = 0; matchIndex < matches.length; matchIndex++) {\r\n                match = matches[matchIndex];\r\n                selector = selectorPath[match.pathIndex];\r\n                firstElement = new tree.Element(match.initialCombinator, replacementSelector.elements[0].value, replacementSelector.elements[0].isVariable, replacementSelector.elements[0].getIndex(), replacementSelector.elements[0].fileInfo());\r\n                if (match.pathIndex > currentSelectorPathIndex && currentSelectorPathElementIndex > 0) {\r\n                    path[path.length - 1].elements = path[path.length - 1]\r\n                        .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\r\n                    currentSelectorPathElementIndex = 0;\r\n                    currentSelectorPathIndex++;\r\n                }\r\n                newElements = selector.elements\r\n                    .slice(currentSelectorPathElementIndex, match.index)\r\n                    .concat([firstElement])\r\n                    .concat(replacementSelector.elements.slice(1));\r\n                if (currentSelectorPathIndex === match.pathIndex && matchIndex > 0) {\r\n                    path[path.length - 1].elements =\r\n                        path[path.length - 1].elements.concat(newElements);\r\n                }\r\n                else {\r\n                    path = path.concat(selectorPath.slice(currentSelectorPathIndex, match.pathIndex));\r\n                    path.push(new tree.Selector(newElements));\r\n                }\r\n                currentSelectorPathIndex = match.endPathIndex;\r\n                currentSelectorPathElementIndex = match.endPathElementIndex;\r\n                if (currentSelectorPathElementIndex >= selectorPath[currentSelectorPathIndex].elements.length) {\r\n                    currentSelectorPathElementIndex = 0;\r\n                    currentSelectorPathIndex++;\r\n                }\r\n            }\r\n            if (currentSelectorPathIndex < selectorPath.length && currentSelectorPathElementIndex > 0) {\r\n                path[path.length - 1].elements = path[path.length - 1]\r\n                    .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\r\n                currentSelectorPathIndex++;\r\n            }\r\n            path = path.concat(selectorPath.slice(currentSelectorPathIndex, selectorPath.length));\r\n            path = path.map(function (currentValue) {\r\n                // we can re-use elements here, because the visibility property matters only for selectors\r\n                var derived = currentValue.createDerived(currentValue.elements);\r\n                if (isVisible) {\r\n                    derived.ensureVisibility();\r\n                }\r\n                else {\r\n                    derived.ensureInvisibility();\r\n                }\r\n                return derived;\r\n            });\r\n            return path;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            var newAllExtends = mediaNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\r\n            newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, mediaNode.allExtends));\r\n            this.allExtendsStack.push(newAllExtends);\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMediaOut = function (mediaNode) {\r\n            var lastIndex = this.allExtendsStack.length - 1;\r\n            this.allExtendsStack.length = lastIndex;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            var newAllExtends = atRuleNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\r\n            newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, atRuleNode.allExtends));\r\n            this.allExtendsStack.push(newAllExtends);\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\r\n            var lastIndex = this.allExtendsStack.length - 1;\r\n            this.allExtendsStack.length = lastIndex;\r\n        };\r\n        return ProcessExtendsVisitor;\r\n    }());\n\n    var JoinSelectorVisitor = /** @class */ (function () {\r\n        function JoinSelectorVisitor() {\r\n            this.contexts = [[]];\r\n            this._visitor = new Visitor(this);\r\n        }\r\n        JoinSelectorVisitor.prototype.run = function (root) {\r\n            return this._visitor.visit(root);\r\n        };\r\n        JoinSelectorVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            var paths = [];\r\n            var selectors;\r\n            this.contexts.push(paths);\r\n            if (!rulesetNode.root) {\r\n                selectors = rulesetNode.selectors;\r\n                if (selectors) {\r\n                    selectors = selectors.filter(function (selector) { return selector.getIsOutput(); });\r\n                    rulesetNode.selectors = selectors.length ? selectors : (selectors = null);\r\n                    if (selectors) {\r\n                        rulesetNode.joinSelectors(paths, context, selectors);\r\n                    }\r\n                }\r\n                if (!selectors) {\r\n                    rulesetNode.rules = null;\r\n                }\r\n                rulesetNode.paths = paths;\r\n            }\r\n        };\r\n        JoinSelectorVisitor.prototype.visitRulesetOut = function (rulesetNode) {\r\n            this.contexts.length = this.contexts.length - 1;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            mediaNode.rules[0].root = (context.length === 0 || context[0].multiMedia);\r\n        };\r\n        JoinSelectorVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            if (atRuleNode.rules && atRuleNode.rules.length) {\r\n                atRuleNode.rules[0].root = (atRuleNode.isRooted || context.length === 0 || null);\r\n            }\r\n        };\r\n        return JoinSelectorVisitor;\r\n    }());\n\n    var CSSVisitorUtils = /** @class */ (function () {\r\n        function CSSVisitorUtils(context) {\r\n            this._visitor = new Visitor(this);\r\n            this._context = context;\r\n        }\r\n        CSSVisitorUtils.prototype.containsSilentNonBlockedChild = function (bodyRules) {\r\n            var rule;\r\n            if (!bodyRules) {\r\n                return false;\r\n            }\r\n            for (var r = 0; r < bodyRules.length; r++) {\r\n                rule = bodyRules[r];\r\n                if (rule.isSilent && rule.isSilent(this._context) && !rule.blocksVisibility()) {\r\n                    // the atrule contains something that was referenced (likely by extend)\r\n                    // therefore it needs to be shown in output too\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        CSSVisitorUtils.prototype.keepOnlyVisibleChilds = function (owner) {\r\n            if (owner && owner.rules) {\r\n                owner.rules = owner.rules.filter(function (thing) { return thing.isVisible(); });\r\n            }\r\n        };\r\n        CSSVisitorUtils.prototype.isEmpty = function (owner) {\r\n            return (owner && owner.rules)\r\n                ? (owner.rules.length === 0) : true;\r\n        };\r\n        CSSVisitorUtils.prototype.hasVisibleSelector = function (rulesetNode) {\r\n            return (rulesetNode && rulesetNode.paths)\r\n                ? (rulesetNode.paths.length > 0) : false;\r\n        };\r\n        CSSVisitorUtils.prototype.resolveVisibility = function (node, originalRules) {\r\n            if (!node.blocksVisibility()) {\r\n                if (this.isEmpty(node) && !this.containsSilentNonBlockedChild(originalRules)) {\r\n                    return;\r\n                }\r\n                return node;\r\n            }\r\n            var compiledRulesBody = node.rules[0];\r\n            this.keepOnlyVisibleChilds(compiledRulesBody);\r\n            if (this.isEmpty(compiledRulesBody)) {\r\n                return;\r\n            }\r\n            node.ensureVisibility();\r\n            node.removeVisibilityBlock();\r\n            return node;\r\n        };\r\n        CSSVisitorUtils.prototype.isVisibleRuleset = function (rulesetNode) {\r\n            if (rulesetNode.firstRoot) {\r\n                return true;\r\n            }\r\n            if (this.isEmpty(rulesetNode)) {\r\n                return false;\r\n            }\r\n            if (!rulesetNode.root && !this.hasVisibleSelector(rulesetNode)) {\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        return CSSVisitorUtils;\r\n    }());\r\n    var ToCSSVisitor = function (context) {\r\n        this._visitor = new Visitor(this);\r\n        this._context = context;\r\n        this.utils = new CSSVisitorUtils(context);\r\n    };\r\n    ToCSSVisitor.prototype = {\r\n        isReplacing: true,\r\n        run: function (root) {\r\n            return this._visitor.visit(root);\r\n        },\r\n        visitDeclaration: function (declNode, visitArgs) {\r\n            if (declNode.blocksVisibility() || declNode.variable) {\r\n                return;\r\n            }\r\n            return declNode;\r\n        },\r\n        visitMixinDefinition: function (mixinNode, visitArgs) {\r\n            // mixin definitions do not get eval'd - this means they keep state\r\n            // so we have to clear that state here so it isn't used if toCSS is called twice\r\n            mixinNode.frames = [];\r\n        },\r\n        visitExtend: function (extendNode, visitArgs) {\r\n        },\r\n        visitComment: function (commentNode, visitArgs) {\r\n            if (commentNode.blocksVisibility() || commentNode.isSilent(this._context)) {\r\n                return;\r\n            }\r\n            return commentNode;\r\n        },\r\n        visitMedia: function (mediaNode, visitArgs) {\r\n            var originalRules = mediaNode.rules[0].rules;\r\n            mediaNode.accept(this._visitor);\r\n            visitArgs.visitDeeper = false;\r\n            return this.utils.resolveVisibility(mediaNode, originalRules);\r\n        },\r\n        visitImport: function (importNode, visitArgs) {\r\n            if (importNode.blocksVisibility()) {\r\n                return;\r\n            }\r\n            return importNode;\r\n        },\r\n        visitAtRule: function (atRuleNode, visitArgs) {\r\n            if (atRuleNode.rules && atRuleNode.rules.length) {\r\n                return this.visitAtRuleWithBody(atRuleNode, visitArgs);\r\n            }\r\n            else {\r\n                return this.visitAtRuleWithoutBody(atRuleNode, visitArgs);\r\n            }\r\n        },\r\n        visitAnonymous: function (anonymousNode, visitArgs) {\r\n            if (!anonymousNode.blocksVisibility()) {\r\n                anonymousNode.accept(this._visitor);\r\n                return anonymousNode;\r\n            }\r\n        },\r\n        visitAtRuleWithBody: function (atRuleNode, visitArgs) {\r\n            // if there is only one nested ruleset and that one has no path, then it is\r\n            // just fake ruleset\r\n            function hasFakeRuleset(atRuleNode) {\r\n                var bodyRules = atRuleNode.rules;\r\n                return bodyRules.length === 1 && (!bodyRules[0].paths || bodyRules[0].paths.length === 0);\r\n            }\r\n            function getBodyRules(atRuleNode) {\r\n                var nodeRules = atRuleNode.rules;\r\n                if (hasFakeRuleset(atRuleNode)) {\r\n                    return nodeRules[0].rules;\r\n                }\r\n                return nodeRules;\r\n            }\r\n            // it is still true that it is only one ruleset in array\r\n            // this is last such moment\r\n            // process childs\r\n            var originalRules = getBodyRules(atRuleNode);\r\n            atRuleNode.accept(this._visitor);\r\n            visitArgs.visitDeeper = false;\r\n            if (!this.utils.isEmpty(atRuleNode)) {\r\n                this._mergeRules(atRuleNode.rules[0].rules);\r\n            }\r\n            return this.utils.resolveVisibility(atRuleNode, originalRules);\r\n        },\r\n        visitAtRuleWithoutBody: function (atRuleNode, visitArgs) {\r\n            if (atRuleNode.blocksVisibility()) {\r\n                return;\r\n            }\r\n            if (atRuleNode.name === '@charset') {\r\n                // Only output the debug info together with subsequent @charset definitions\r\n                // a comment (or @media statement) before the actual @charset atrule would\r\n                // be considered illegal css as it has to be on the first line\r\n                if (this.charset) {\r\n                    if (atRuleNode.debugInfo) {\r\n                        var comment = new tree.Comment(\"/* \" + atRuleNode.toCSS(this._context).replace(/\\n/g, '') + \" */\\n\");\r\n                        comment.debugInfo = atRuleNode.debugInfo;\r\n                        return this._visitor.visit(comment);\r\n                    }\r\n                    return;\r\n                }\r\n                this.charset = true;\r\n            }\r\n            return atRuleNode;\r\n        },\r\n        checkValidNodes: function (rules, isRoot) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            for (var i = 0; i < rules.length; i++) {\r\n                var ruleNode = rules[i];\r\n                if (isRoot && ruleNode instanceof tree.Declaration && !ruleNode.variable) {\r\n                    throw { message: 'Properties must be inside selector blocks. They cannot be in the root',\r\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n                if (ruleNode instanceof tree.Call) {\r\n                    throw { message: \"Function '\" + ruleNode.name + \"' did not return a root node\",\r\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n                if (ruleNode.type && !ruleNode.allowRoot) {\r\n                    throw { message: ruleNode.type + \" node returned by a function is not valid here\",\r\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n            }\r\n        },\r\n        visitRuleset: function (rulesetNode, visitArgs) {\r\n            // at this point rulesets are nested into each other\r\n            var rule;\r\n            var rulesets = [];\r\n            this.checkValidNodes(rulesetNode.rules, rulesetNode.firstRoot);\r\n            if (!rulesetNode.root) {\r\n                // remove invisible paths\r\n                this._compileRulesetPaths(rulesetNode);\r\n                // remove rulesets from this ruleset body and compile them separately\r\n                var nodeRules = rulesetNode.rules;\r\n                var nodeRuleCnt = nodeRules ? nodeRules.length : 0;\r\n                for (var i = 0; i < nodeRuleCnt;) {\r\n                    rule = nodeRules[i];\r\n                    if (rule && rule.rules) {\r\n                        // visit because we are moving them out from being a child\r\n                        rulesets.push(this._visitor.visit(rule));\r\n                        nodeRules.splice(i, 1);\r\n                        nodeRuleCnt--;\r\n                        continue;\r\n                    }\r\n                    i++;\r\n                }\r\n                // accept the visitor to remove rules and refactor itself\r\n                // then we can decide nogw whether we want it or not\r\n                // compile body\r\n                if (nodeRuleCnt > 0) {\r\n                    rulesetNode.accept(this._visitor);\r\n                }\r\n                else {\r\n                    rulesetNode.rules = null;\r\n                }\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n            else { // if (! rulesetNode.root) {\r\n                rulesetNode.accept(this._visitor);\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n            if (rulesetNode.rules) {\r\n                this._mergeRules(rulesetNode.rules);\r\n                this._removeDuplicateRules(rulesetNode.rules);\r\n            }\r\n            // now decide whether we keep the ruleset\r\n            if (this.utils.isVisibleRuleset(rulesetNode)) {\r\n                rulesetNode.ensureVisibility();\r\n                rulesets.splice(0, 0, rulesetNode);\r\n            }\r\n            if (rulesets.length === 1) {\r\n                return rulesets[0];\r\n            }\r\n            return rulesets;\r\n        },\r\n        _compileRulesetPaths: function (rulesetNode) {\r\n            if (rulesetNode.paths) {\r\n                rulesetNode.paths = rulesetNode.paths\r\n                    .filter(function (p) {\r\n                    var i;\r\n                    if (p[0].elements[0].combinator.value === ' ') {\r\n                        p[0].elements[0].combinator = new (tree.Combinator)('');\r\n                    }\r\n                    for (i = 0; i < p.length; i++) {\r\n                        if (p[i].isVisible() && p[i].getIsOutput()) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                });\r\n            }\r\n        },\r\n        _removeDuplicateRules: function (rules) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            // remove duplicates\r\n            var ruleCache = {};\r\n            var ruleList;\r\n            var rule;\r\n            var i;\r\n            for (i = rules.length - 1; i >= 0; i--) {\r\n                rule = rules[i];\r\n                if (rule instanceof tree.Declaration) {\r\n                    if (!ruleCache[rule.name]) {\r\n                        ruleCache[rule.name] = rule;\r\n                    }\r\n                    else {\r\n                        ruleList = ruleCache[rule.name];\r\n                        if (ruleList instanceof tree.Declaration) {\r\n                            ruleList = ruleCache[rule.name] = [ruleCache[rule.name].toCSS(this._context)];\r\n                        }\r\n                        var ruleCSS = rule.toCSS(this._context);\r\n                        if (ruleList.indexOf(ruleCSS) !== -1) {\r\n                            rules.splice(i, 1);\r\n                        }\r\n                        else {\r\n                            ruleList.push(ruleCSS);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        _mergeRules: function (rules) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            var groups = {};\r\n            var groupsArr = [];\r\n            for (var i = 0; i < rules.length; i++) {\r\n                var rule = rules[i];\r\n                if (rule.merge) {\r\n                    var key = rule.name;\r\n                    groups[key] ? rules.splice(i--, 1) :\r\n                        groupsArr.push(groups[key] = []);\r\n                    groups[key].push(rule);\r\n                }\r\n            }\r\n            groupsArr.forEach(function (group) {\r\n                if (group.length > 0) {\r\n                    var result_1 = group[0];\r\n                    var space_1 = [];\r\n                    var comma_1 = [new tree.Expression(space_1)];\r\n                    group.forEach(function (rule) {\r\n                        if ((rule.merge === '+') && (space_1.length > 0)) {\r\n                            comma_1.push(new tree.Expression(space_1 = []));\r\n                        }\r\n                        space_1.push(rule.value);\r\n                        result_1.important = result_1.important || rule.important;\r\n                    });\r\n                    result_1.value = new tree.Value(comma_1);\r\n                }\r\n            });\r\n        }\r\n    };\n\n    var visitors = {\r\n        Visitor: Visitor,\r\n        ImportVisitor: ImportVisitor,\r\n        MarkVisibleSelectorsVisitor: SetTreeVisibilityVisitor,\r\n        ExtendVisitor: ProcessExtendsVisitor,\r\n        JoinSelectorVisitor: JoinSelectorVisitor,\r\n        ToCSSVisitor: ToCSSVisitor\r\n    };\n\n    // Split the input into chunks.\r\n    function chunker (input, fail) {\r\n        var len = input.length;\r\n        var level = 0;\r\n        var parenLevel = 0;\r\n        var lastOpening;\r\n        var lastOpeningParen;\r\n        var lastMultiComment;\r\n        var lastMultiCommentEndBrace;\r\n        var chunks = [];\r\n        var emitFrom = 0;\r\n        var chunkerCurrentIndex;\r\n        var currentChunkStartIndex;\r\n        var cc;\r\n        var cc2;\r\n        var matched;\r\n        function emitChunk(force) {\r\n            var len = chunkerCurrentIndex - emitFrom;\r\n            if (((len < 512) && !force) || !len) {\r\n                return;\r\n            }\r\n            chunks.push(input.slice(emitFrom, chunkerCurrentIndex + 1));\r\n            emitFrom = chunkerCurrentIndex + 1;\r\n        }\r\n        for (chunkerCurrentIndex = 0; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n            cc = input.charCodeAt(chunkerCurrentIndex);\r\n            if (((cc >= 97) && (cc <= 122)) || (cc < 34)) {\r\n                // a-z or whitespace\r\n                continue;\r\n            }\r\n            switch (cc) {\r\n                case 40: // (\r\n                    parenLevel++;\r\n                    lastOpeningParen = chunkerCurrentIndex;\r\n                    continue;\r\n                case 41: // )\r\n                    if (--parenLevel < 0) {\r\n                        return fail('missing opening `(`', chunkerCurrentIndex);\r\n                    }\r\n                    continue;\r\n                case 59: // ;\r\n                    if (!parenLevel) {\r\n                        emitChunk();\r\n                    }\r\n                    continue;\r\n                case 123: // {\r\n                    level++;\r\n                    lastOpening = chunkerCurrentIndex;\r\n                    continue;\r\n                case 125: // }\r\n                    if (--level < 0) {\r\n                        return fail('missing opening `{`', chunkerCurrentIndex);\r\n                    }\r\n                    if (!level && !parenLevel) {\r\n                        emitChunk();\r\n                    }\r\n                    continue;\r\n                case 92: // \\\r\n                    if (chunkerCurrentIndex < len - 1) {\r\n                        chunkerCurrentIndex++;\r\n                        continue;\r\n                    }\r\n                    return fail('unescaped `\\\\`', chunkerCurrentIndex);\r\n                case 34:\r\n                case 39:\r\n                case 96: // \", ' and `\r\n                    matched = 0;\r\n                    currentChunkStartIndex = chunkerCurrentIndex;\r\n                    for (chunkerCurrentIndex = chunkerCurrentIndex + 1; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n                        cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                        if (cc2 > 96) {\r\n                            continue;\r\n                        }\r\n                        if (cc2 == cc) {\r\n                            matched = 1;\r\n                            break;\r\n                        }\r\n                        if (cc2 == 92) { // \\\r\n                            if (chunkerCurrentIndex == len - 1) {\r\n                                return fail('unescaped `\\\\`', chunkerCurrentIndex);\r\n                            }\r\n                            chunkerCurrentIndex++;\r\n                        }\r\n                    }\r\n                    if (matched) {\r\n                        continue;\r\n                    }\r\n                    return fail(\"unmatched `\" + String.fromCharCode(cc) + \"`\", currentChunkStartIndex);\r\n                case 47: // /, check for comment\r\n                    if (parenLevel || (chunkerCurrentIndex == len - 1)) {\r\n                        continue;\r\n                    }\r\n                    cc2 = input.charCodeAt(chunkerCurrentIndex + 1);\r\n                    if (cc2 == 47) {\r\n                        // //, find lnfeed\r\n                        for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n                            cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                            if ((cc2 <= 13) && ((cc2 == 10) || (cc2 == 13))) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (cc2 == 42) {\r\n                        // /*, find */\r\n                        lastMultiComment = currentChunkStartIndex = chunkerCurrentIndex;\r\n                        for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len - 1; chunkerCurrentIndex++) {\r\n                            cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                            if (cc2 == 125) {\r\n                                lastMultiCommentEndBrace = chunkerCurrentIndex;\r\n                            }\r\n                            if (cc2 != 42) {\r\n                                continue;\r\n                            }\r\n                            if (input.charCodeAt(chunkerCurrentIndex + 1) == 47) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (chunkerCurrentIndex == len - 1) {\r\n                            return fail('missing closing `*/`', currentChunkStartIndex);\r\n                        }\r\n                        chunkerCurrentIndex++;\r\n                    }\r\n                    continue;\r\n                case 42: // *, check for unmatched */\r\n                    if ((chunkerCurrentIndex < len - 1) && (input.charCodeAt(chunkerCurrentIndex + 1) == 47)) {\r\n                        return fail('unmatched `/*`', chunkerCurrentIndex);\r\n                    }\r\n                    continue;\r\n            }\r\n        }\r\n        if (level !== 0) {\r\n            if ((lastMultiComment > lastOpening) && (lastMultiCommentEndBrace > lastMultiComment)) {\r\n                return fail('missing closing `}` or `*/`', lastOpening);\r\n            }\r\n            else {\r\n                return fail('missing closing `}`', lastOpening);\r\n            }\r\n        }\r\n        else if (parenLevel !== 0) {\r\n            return fail('missing closing `)`', lastOpeningParen);\r\n        }\r\n        emitChunk(true);\r\n        return chunks;\r\n    }\n\n    var getParserInput = (function () {\r\n        var // Less input string\r\n        input;\r\n        var // current chunk\r\n        j;\r\n        var // holds state for backtracking\r\n        saveStack = [];\r\n        var // furthest index the parser has gone to\r\n        furthest;\r\n        var // if this is furthest we got to, this is the probably cause\r\n        furthestPossibleErrorMessage;\r\n        var // chunkified input\r\n        chunks;\r\n        var // current chunk\r\n        current;\r\n        var // index of current chunk, in `input`\r\n        currentPos;\r\n        var parserInput = {};\r\n        var CHARCODE_SPACE = 32;\r\n        var CHARCODE_TAB = 9;\r\n        var CHARCODE_LF = 10;\r\n        var CHARCODE_CR = 13;\r\n        var CHARCODE_PLUS = 43;\r\n        var CHARCODE_COMMA = 44;\r\n        var CHARCODE_FORWARD_SLASH = 47;\r\n        var CHARCODE_9 = 57;\r\n        function skipWhitespace(length) {\r\n            var oldi = parserInput.i;\r\n            var oldj = j;\r\n            var curr = parserInput.i - currentPos;\r\n            var endIndex = parserInput.i + current.length - curr;\r\n            var mem = (parserInput.i += length);\r\n            var inp = input;\r\n            var c;\r\n            var nextChar;\r\n            var comment;\r\n            for (; parserInput.i < endIndex; parserInput.i++) {\r\n                c = inp.charCodeAt(parserInput.i);\r\n                if (parserInput.autoCommentAbsorb && c === CHARCODE_FORWARD_SLASH) {\r\n                    nextChar = inp.charAt(parserInput.i + 1);\r\n                    if (nextChar === '/') {\r\n                        comment = { index: parserInput.i, isLineComment: true };\r\n                        var nextNewLine = inp.indexOf('\\n', parserInput.i + 2);\r\n                        if (nextNewLine < 0) {\r\n                            nextNewLine = endIndex;\r\n                        }\r\n                        parserInput.i = nextNewLine;\r\n                        comment.text = inp.substr(comment.index, parserInput.i - comment.index);\r\n                        parserInput.commentStore.push(comment);\r\n                        continue;\r\n                    }\r\n                    else if (nextChar === '*') {\r\n                        var nextStarSlash = inp.indexOf('*/', parserInput.i + 2);\r\n                        if (nextStarSlash >= 0) {\r\n                            comment = {\r\n                                index: parserInput.i,\r\n                                text: inp.substr(parserInput.i, nextStarSlash + 2 - parserInput.i),\r\n                                isLineComment: false\r\n                            };\r\n                            parserInput.i += comment.text.length - 1;\r\n                            parserInput.commentStore.push(comment);\r\n                            continue;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                if ((c !== CHARCODE_SPACE) && (c !== CHARCODE_LF) && (c !== CHARCODE_TAB) && (c !== CHARCODE_CR)) {\r\n                    break;\r\n                }\r\n            }\r\n            current = current.slice(length + parserInput.i - mem + curr);\r\n            currentPos = parserInput.i;\r\n            if (!current.length) {\r\n                if (j < chunks.length - 1) {\r\n                    current = chunks[++j];\r\n                    skipWhitespace(0); // skip space at the beginning of a chunk\r\n                    return true; // things changed\r\n                }\r\n                parserInput.finished = true;\r\n            }\r\n            return oldi !== parserInput.i || oldj !== j;\r\n        }\r\n        parserInput.save = function () {\r\n            currentPos = parserInput.i;\r\n            saveStack.push({ current: current, i: parserInput.i, j: j });\r\n        };\r\n        parserInput.restore = function (possibleErrorMessage) {\r\n            if (parserInput.i > furthest || (parserInput.i === furthest && possibleErrorMessage && !furthestPossibleErrorMessage)) {\r\n                furthest = parserInput.i;\r\n                furthestPossibleErrorMessage = possibleErrorMessage;\r\n            }\r\n            var state = saveStack.pop();\r\n            current = state.current;\r\n            currentPos = parserInput.i = state.i;\r\n            j = state.j;\r\n        };\r\n        parserInput.forget = function () {\r\n            saveStack.pop();\r\n        };\r\n        parserInput.isWhitespace = function (offset) {\r\n            var pos = parserInput.i + (offset || 0);\r\n            var code = input.charCodeAt(pos);\r\n            return (code === CHARCODE_SPACE || code === CHARCODE_CR || code === CHARCODE_TAB || code === CHARCODE_LF);\r\n        };\r\n        // Specialization of $(tok)\r\n        parserInput.$re = function (tok) {\r\n            if (parserInput.i > currentPos) {\r\n                current = current.slice(parserInput.i - currentPos);\r\n                currentPos = parserInput.i;\r\n            }\r\n            var m = tok.exec(current);\r\n            if (!m) {\r\n                return null;\r\n            }\r\n            skipWhitespace(m[0].length);\r\n            if (typeof m === 'string') {\r\n                return m;\r\n            }\r\n            return m.length === 1 ? m[0] : m;\r\n        };\r\n        parserInput.$char = function (tok) {\r\n            if (input.charAt(parserInput.i) !== tok) {\r\n                return null;\r\n            }\r\n            skipWhitespace(1);\r\n            return tok;\r\n        };\r\n        parserInput.$str = function (tok) {\r\n            var tokLength = tok.length;\r\n            // https://jsperf.com/string-startswith/21\r\n            for (var i = 0; i < tokLength; i++) {\r\n                if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\r\n                    return null;\r\n                }\r\n            }\r\n            skipWhitespace(tokLength);\r\n            return tok;\r\n        };\r\n        parserInput.$quoted = function (loc) {\r\n            var pos = loc || parserInput.i;\r\n            var startChar = input.charAt(pos);\r\n            if (startChar !== '\\'' && startChar !== '\"') {\r\n                return;\r\n            }\r\n            var length = input.length;\r\n            var currentPosition = pos;\r\n            for (var i = 1; i + currentPosition < length; i++) {\r\n                var nextChar = input.charAt(i + currentPosition);\r\n                switch (nextChar) {\r\n                    case '\\\\':\r\n                        i++;\r\n                        continue;\r\n                    case '\\r':\r\n                    case '\\n':\r\n                        break;\r\n                    case startChar:\r\n                        var str = input.substr(currentPosition, i + 1);\r\n                        if (!loc && loc !== 0) {\r\n                            skipWhitespace(i + 1);\r\n                            return str;\r\n                        }\r\n                        return [startChar, str];\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * Permissive parsing. Ignores everything except matching {} [] () and quotes\r\n         * until matching token (outside of blocks)\r\n         */\r\n        parserInput.$parseUntil = function (tok) {\r\n            var quote = '';\r\n            var returnVal = null;\r\n            var inComment = false;\r\n            var blockDepth = 0;\r\n            var blockStack = [];\r\n            var parseGroups = [];\r\n            var length = input.length;\r\n            var startPos = parserInput.i;\r\n            var lastPos = parserInput.i;\r\n            var i = parserInput.i;\r\n            var loop = true;\r\n            var testChar;\r\n            if (typeof tok === 'string') {\r\n                testChar = function (char) { return char === tok; };\r\n            }\r\n            else {\r\n                testChar = function (char) { return tok.test(char); };\r\n            }\r\n            do {\r\n                var nextChar = input.charAt(i);\r\n                if (blockDepth === 0 && testChar(nextChar)) {\r\n                    returnVal = input.substr(lastPos, i - lastPos);\r\n                    if (returnVal) {\r\n                        parseGroups.push(returnVal);\r\n                    }\r\n                    else {\r\n                        parseGroups.push(' ');\r\n                    }\r\n                    returnVal = parseGroups;\r\n                    skipWhitespace(i - startPos);\r\n                    loop = false;\r\n                }\r\n                else {\r\n                    if (inComment) {\r\n                        if (nextChar === '*' &&\r\n                            input.charAt(i + 1) === '/') {\r\n                            i++;\r\n                            blockDepth--;\r\n                            inComment = false;\r\n                        }\r\n                        i++;\r\n                        continue;\r\n                    }\r\n                    switch (nextChar) {\r\n                        case '\\\\':\r\n                            i++;\r\n                            nextChar = input.charAt(i);\r\n                            parseGroups.push(input.substr(lastPos, i - lastPos + 1));\r\n                            lastPos = i + 1;\r\n                            break;\r\n                        case '/':\r\n                            if (input.charAt(i + 1) === '*') {\r\n                                i++;\r\n                                inComment = true;\r\n                                blockDepth++;\r\n                            }\r\n                            break;\r\n                        case '\\'':\r\n                        case '\"':\r\n                            quote = parserInput.$quoted(i);\r\n                            if (quote) {\r\n                                parseGroups.push(input.substr(lastPos, i - lastPos), quote);\r\n                                i += quote[1].length - 1;\r\n                                lastPos = i + 1;\r\n                            }\r\n                            else {\r\n                                skipWhitespace(i - startPos);\r\n                                returnVal = nextChar;\r\n                                loop = false;\r\n                            }\r\n                            break;\r\n                        case '{':\r\n                            blockStack.push('}');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '(':\r\n                            blockStack.push(')');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '[':\r\n                            blockStack.push(']');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '}':\r\n                        case ')':\r\n                        case ']':\r\n                            var expected = blockStack.pop();\r\n                            if (nextChar === expected) {\r\n                                blockDepth--;\r\n                            }\r\n                            else {\r\n                                // move the parser to the error and return expected\r\n                                skipWhitespace(i - startPos);\r\n                                returnVal = expected;\r\n                                loop = false;\r\n                            }\r\n                    }\r\n                    i++;\r\n                    if (i > length) {\r\n                        loop = false;\r\n                    }\r\n                }\r\n            } while (loop);\r\n            return returnVal ? returnVal : null;\r\n        };\r\n        parserInput.autoCommentAbsorb = true;\r\n        parserInput.commentStore = [];\r\n        parserInput.finished = false;\r\n        // Same as $(), but don't change the state of the parser,\r\n        // just return the match.\r\n        parserInput.peek = function (tok) {\r\n            if (typeof tok === 'string') {\r\n                // https://jsperf.com/string-startswith/21\r\n                for (var i = 0; i < tok.length; i++) {\r\n                    if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n            else {\r\n                return tok.test(current);\r\n            }\r\n        };\r\n        // Specialization of peek()\r\n        // TODO remove or change some currentChar calls to peekChar\r\n        parserInput.peekChar = function (tok) { return input.charAt(parserInput.i) === tok; };\r\n        parserInput.currentChar = function () { return input.charAt(parserInput.i); };\r\n        parserInput.prevChar = function () { return input.charAt(parserInput.i - 1); };\r\n        parserInput.getInput = function () { return input; };\r\n        parserInput.peekNotNumeric = function () {\r\n            var c = input.charCodeAt(parserInput.i);\r\n            // Is the first char of the dimension 0-9, '.', '+' or '-'\r\n            return (c > CHARCODE_9 || c < CHARCODE_PLUS) || c === CHARCODE_FORWARD_SLASH || c === CHARCODE_COMMA;\r\n        };\r\n        parserInput.start = function (str, chunkInput, failFunction) {\r\n            input = str;\r\n            parserInput.i = j = currentPos = furthest = 0;\r\n            // chunking apparently makes things quicker (but my tests indicate\r\n            // it might actually make things slower in node at least)\r\n            // and it is a non-perfect parse - it can't recognise\r\n            // unquoted urls, meaning it can't distinguish comments\r\n            // meaning comments with quotes or {}() in them get 'counted'\r\n            // and then lead to parse errors.\r\n            // In addition if the chunking chunks in the wrong place we might\r\n            // not be able to parse a parser statement in one go\r\n            // this is officially deprecated but can be switched on via an option\r\n            // in the case it causes too much performance issues.\r\n            if (chunkInput) {\r\n                chunks = chunker(str, failFunction);\r\n            }\r\n            else {\r\n                chunks = [str];\r\n            }\r\n            current = chunks[0];\r\n            skipWhitespace(0);\r\n        };\r\n        parserInput.end = function () {\r\n            var message;\r\n            var isFinished = parserInput.i >= input.length;\r\n            if (parserInput.i < furthest) {\r\n                message = furthestPossibleErrorMessage;\r\n                parserInput.i = furthest;\r\n            }\r\n            return {\r\n                isFinished: isFinished,\r\n                furthest: parserInput.i,\r\n                furthestPossibleErrorMessage: message,\r\n                furthestReachedEnd: parserInput.i >= input.length - 1,\r\n                furthestChar: input[parserInput.i]\r\n            };\r\n        };\r\n        return parserInput;\r\n    });\n\n    //\r\n    // less.js - parser\r\n    //\r\n    //    A relatively straight-forward predictive parser.\r\n    //    There is no tokenization/lexing stage, the input is parsed\r\n    //    in one sweep.\r\n    //\r\n    //    To make the parser fast enough to run in the browser, several\r\n    //    optimization had to be made:\r\n    //\r\n    //    - Matching and slicing on a huge input is often cause of slowdowns.\r\n    //      The solution is to chunkify the input into smaller strings.\r\n    //      The chunks are stored in the `chunks` var,\r\n    //      `j` holds the current chunk index, and `currentPos` holds\r\n    //      the index of the current chunk in relation to `input`.\r\n    //      This gives us an almost 4x speed-up.\r\n    //\r\n    //    - In many cases, we don't need to match individual tokens;\r\n    //      for example, if a value doesn't hold any variables, operations\r\n    //      or dynamic references, the parser can effectively 'skip' it,\r\n    //      treating it as a literal.\r\n    //      An example would be '1px solid #000' - which evaluates to itself,\r\n    //      we don't need to know what the individual components are.\r\n    //      The drawback, of course is that you don't get the benefits of\r\n    //      syntax-checking on the CSS. This gives us a 50% speed-up in the parser,\r\n    //      and a smaller speed-up in the code-gen.\r\n    //\r\n    //\r\n    //    Token matching is done with the `$` function, which either takes\r\n    //    a terminal string or regexp, or a non-terminal function to call.\r\n    //    It also takes care of moving all the indices forwards.\r\n    //\r\n    var Parser = function Parser(context, imports, fileInfo) {\r\n        var parsers;\r\n        var parserInput = getParserInput();\r\n        function error(msg, type) {\r\n            throw new LessError({\r\n                index: parserInput.i,\r\n                filename: fileInfo.filename,\r\n                type: type || 'Syntax',\r\n                message: msg\r\n            }, imports);\r\n        }\r\n        function expect(arg, msg) {\r\n            // some older browsers return typeof 'function' for RegExp\r\n            var result = (arg instanceof Function) ? arg.call(parsers) : parserInput.$re(arg);\r\n            if (result) {\r\n                return result;\r\n            }\r\n            error(msg || (typeof arg === 'string'\r\n                ? \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\"\r\n                : 'unexpected token'));\r\n        }\r\n        // Specialization of expect()\r\n        function expectChar(arg, msg) {\r\n            if (parserInput.$char(arg)) {\r\n                return arg;\r\n            }\r\n            error(msg || \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\");\r\n        }\r\n        function getDebugInfo(index) {\r\n            var filename = fileInfo.filename;\r\n            return {\r\n                lineNumber: getLocation(index, parserInput.getInput()).line + 1,\r\n                fileName: filename\r\n            };\r\n        }\r\n        /**\r\n         *  Used after initial parsing to create nodes on the fly\r\n         *\r\n         *  @param {String} str          - string to parse\r\n         *  @param {Array}  parseList    - array of parsers to run input through e.g. [\"value\", \"important\"]\r\n         *  @param {Number} currentIndex - start number to begin indexing\r\n         *  @param {Object} fileInfo     - fileInfo to attach to created nodes\r\n         */\r\n        function parseNode(str, parseList, currentIndex, fileInfo, callback) {\r\n            var result;\r\n            var returnNodes = [];\r\n            var parser = parserInput;\r\n            try {\r\n                parser.start(str, false, function fail(msg, index) {\r\n                    callback({\r\n                        message: msg,\r\n                        index: index + currentIndex\r\n                    });\r\n                });\r\n                for (var x = 0, p = void 0, i = void 0; (p = parseList[x]); x++) {\r\n                    i = parser.i;\r\n                    result = parsers[p]();\r\n                    if (result) {\r\n                        try {\r\n                            result._index = i + currentIndex;\r\n                            result._fileInfo = fileInfo;\r\n                        }\r\n                        catch (e) { }\r\n                        returnNodes.push(result);\r\n                    }\r\n                    else {\r\n                        returnNodes.push(null);\r\n                    }\r\n                }\r\n                var endInfo = parser.end();\r\n                if (endInfo.isFinished) {\r\n                    callback(null, returnNodes);\r\n                }\r\n                else {\r\n                    callback(true, null);\r\n                }\r\n            }\r\n            catch (e) {\r\n                throw new LessError({\r\n                    index: e.index + currentIndex,\r\n                    message: e.message\r\n                }, imports, fileInfo.filename);\r\n            }\r\n        }\r\n        //\r\n        // The Parser\r\n        //\r\n        return {\r\n            parserInput: parserInput,\r\n            imports: imports,\r\n            fileInfo: fileInfo,\r\n            parseNode: parseNode,\r\n            //\r\n            // Parse an input string into an abstract syntax tree,\r\n            // @param str A string containing 'less' markup\r\n            // @param callback call `callback` when done.\r\n            // @param [additionalData] An optional map which can contains vars - a map (key, value) of variables to apply\r\n            //\r\n            parse: function (str, callback, additionalData) {\r\n                var root;\r\n                var err = null;\r\n                var globalVars;\r\n                var modifyVars;\r\n                var ignored;\r\n                var preText = '';\r\n                // Optionally disable @plugin parsing\r\n                if (additionalData && additionalData.disablePluginRule) {\r\n                    parsers.plugin = function () {\r\n                        var dir = parserInput.$re(/^@plugin?\\s+/);\r\n                        if (dir) {\r\n                            error('@plugin statements are not allowed when disablePluginRule is set to true');\r\n                        }\r\n                    };\r\n                }\r\n                globalVars = (additionalData && additionalData.globalVars) ? Parser.serializeVars(additionalData.globalVars) + \"\\n\" : '';\r\n                modifyVars = (additionalData && additionalData.modifyVars) ? \"\\n\" + Parser.serializeVars(additionalData.modifyVars) : '';\r\n                if (context.pluginManager) {\r\n                    var preProcessors = context.pluginManager.getPreProcessors();\r\n                    for (var i = 0; i < preProcessors.length; i++) {\r\n                        str = preProcessors[i].process(str, { context: context, imports: imports, fileInfo: fileInfo });\r\n                    }\r\n                }\r\n                if (globalVars || (additionalData && additionalData.banner)) {\r\n                    preText = ((additionalData && additionalData.banner) ? additionalData.banner : '') + globalVars;\r\n                    ignored = imports.contentsIgnoredChars;\r\n                    ignored[fileInfo.filename] = ignored[fileInfo.filename] || 0;\r\n                    ignored[fileInfo.filename] += preText.length;\r\n                }\r\n                str = str.replace(/\\r\\n?/g, '\\n');\r\n                // Remove potential UTF Byte Order Mark\r\n                str = preText + str.replace(/^\\uFEFF/, '') + modifyVars;\r\n                imports.contents[fileInfo.filename] = str;\r\n                // Start with the primary rule.\r\n                // The whole syntax tree is held under a Ruleset node,\r\n                // with the `root` property set to true, so no `{}` are\r\n                // output. The callback is called when the input is parsed.\r\n                try {\r\n                    parserInput.start(str, context.chunkInput, function fail(msg, index) {\r\n                        throw new LessError({\r\n                            index: index,\r\n                            type: 'Parse',\r\n                            message: msg,\r\n                            filename: fileInfo.filename\r\n                        }, imports);\r\n                    });\r\n                    tree.Node.prototype.parse = this;\r\n                    root = new tree.Ruleset(null, this.parsers.primary());\r\n                    tree.Node.prototype.rootNode = root;\r\n                    root.root = true;\r\n                    root.firstRoot = true;\r\n                    root.functionRegistry = functionRegistry.inherit();\r\n                }\r\n                catch (e) {\r\n                    return callback(new LessError(e, imports, fileInfo.filename));\r\n                }\r\n                // If `i` is smaller than the `input.length - 1`,\r\n                // it means the parser wasn't able to parse the whole\r\n                // string, so we've got a parsing error.\r\n                //\r\n                // We try to extract a \\n delimited string,\r\n                // showing the line where the parse error occurred.\r\n                // We split it up into two parts (the part which parsed,\r\n                // and the part which didn't), so we can color them differently.\r\n                var endInfo = parserInput.end();\r\n                if (!endInfo.isFinished) {\r\n                    var message = endInfo.furthestPossibleErrorMessage;\r\n                    if (!message) {\r\n                        message = 'Unrecognised input';\r\n                        if (endInfo.furthestChar === '}') {\r\n                            message += '. Possibly missing opening \\'{\\'';\r\n                        }\r\n                        else if (endInfo.furthestChar === ')') {\r\n                            message += '. Possibly missing opening \\'(\\'';\r\n                        }\r\n                        else if (endInfo.furthestReachedEnd) {\r\n                            message += '. Possibly missing something';\r\n                        }\r\n                    }\r\n                    err = new LessError({\r\n                        type: 'Parse',\r\n                        message: message,\r\n                        index: endInfo.furthest,\r\n                        filename: fileInfo.filename\r\n                    }, imports);\r\n                }\r\n                var finish = function (e) {\r\n                    e = err || e || imports.error;\r\n                    if (e) {\r\n                        if (!(e instanceof LessError)) {\r\n                            e = new LessError(e, imports, fileInfo.filename);\r\n                        }\r\n                        return callback(e);\r\n                    }\r\n                    else {\r\n                        return callback(null, root);\r\n                    }\r\n                };\r\n                if (context.processImports !== false) {\r\n                    new visitors.ImportVisitor(imports, finish)\r\n                        .run(root);\r\n                }\r\n                else {\r\n                    return finish();\r\n                }\r\n            },\r\n            //\r\n            // Here in, the parsing rules/functions\r\n            //\r\n            // The basic structure of the syntax tree generated is as follows:\r\n            //\r\n            //   Ruleset ->  Declaration -> Value -> Expression -> Entity\r\n            //\r\n            // Here's some Less code:\r\n            //\r\n            //    .class {\r\n            //      color: #fff;\r\n            //      border: 1px solid #000;\r\n            //      width: @w + 4px;\r\n            //      > .child {...}\r\n            //    }\r\n            //\r\n            // And here's what the parse tree might look like:\r\n            //\r\n            //     Ruleset (Selector '.class', [\r\n            //         Declaration (\"color\",  Value ([Expression [Color #fff]]))\r\n            //         Declaration (\"border\", Value ([Expression [Dimension 1px][Keyword \"solid\"][Color #000]]))\r\n            //         Declaration (\"width\",  Value ([Expression [Operation \" + \" [Variable \"@w\"][Dimension 4px]]]))\r\n            //         Ruleset (Selector [Element '>', '.child'], [...])\r\n            //     ])\r\n            //\r\n            //  In general, most rules will try to parse a token with the `$re()` function, and if the return\r\n            //  value is truly, will return a new node, of the relevant type. Sometimes, we need to check\r\n            //  first, before parsing, that's when we use `peek()`.\r\n            //\r\n            parsers: parsers = {\r\n                //\r\n                // The `primary` rule is the *entry* and *exit* point of the parser.\r\n                // The rules here can appear at any level of the parse tree.\r\n                //\r\n                // The recursive nature of the grammar is an interplay between the `block`\r\n                // rule, which represents `{ ... }`, the `ruleset` rule, and this `primary` rule,\r\n                // as represented by this simplified grammar:\r\n                //\r\n                //     primary  →  (ruleset | declaration)+\r\n                //     ruleset  →  selector+ block\r\n                //     block    →  '{' primary '}'\r\n                //\r\n                // Only at one point is the primary rule not called from the\r\n                // block rule: at the root level.\r\n                //\r\n                primary: function () {\r\n                    var mixin = this.mixin;\r\n                    var root = [];\r\n                    var node;\r\n                    while (true) {\r\n                        while (true) {\r\n                            node = this.comment();\r\n                            if (!node) {\r\n                                break;\r\n                            }\r\n                            root.push(node);\r\n                        }\r\n                        // always process comments before deciding if finished\r\n                        if (parserInput.finished) {\r\n                            break;\r\n                        }\r\n                        if (parserInput.peek('}')) {\r\n                            break;\r\n                        }\r\n                        node = this.extendRule();\r\n                        if (node) {\r\n                            root = root.concat(node);\r\n                            continue;\r\n                        }\r\n                        node = mixin.definition() || this.declaration() || mixin.call(false, false) ||\r\n                            this.ruleset() || this.variableCall() || this.entities.call() || this.atrule();\r\n                        if (node) {\r\n                            root.push(node);\r\n                        }\r\n                        else {\r\n                            var foundSemiColon = false;\r\n                            while (parserInput.$char(';')) {\r\n                                foundSemiColon = true;\r\n                            }\r\n                            if (!foundSemiColon) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    return root;\r\n                },\r\n                // comments are collected by the main parsing mechanism and then assigned to nodes\r\n                // where the current structure allows it\r\n                comment: function () {\r\n                    if (parserInput.commentStore.length) {\r\n                        var comment = parserInput.commentStore.shift();\r\n                        return new (tree.Comment)(comment.text, comment.isLineComment, comment.index, fileInfo);\r\n                    }\r\n                },\r\n                //\r\n                // Entities are tokens which can be found inside an Expression\r\n                //\r\n                entities: {\r\n                    mixinLookup: function () {\r\n                        return parsers.mixin.call(true, true);\r\n                    },\r\n                    //\r\n                    // A string, which supports escaping \" and '\r\n                    //\r\n                    //     \"milky way\" 'he\\'s the one!'\r\n                    //\r\n                    quoted: function (forceEscaped) {\r\n                        var str;\r\n                        var index = parserInput.i;\r\n                        var isEscaped = false;\r\n                        parserInput.save();\r\n                        if (parserInput.$char('~')) {\r\n                            isEscaped = true;\r\n                        }\r\n                        else if (forceEscaped) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        str = parserInput.$quoted();\r\n                        if (!str) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return new (tree.Quoted)(str.charAt(0), str.substr(1, str.length - 2), isEscaped, index, fileInfo);\r\n                    },\r\n                    //\r\n                    // A catch-all word, such as:\r\n                    //\r\n                    //     black border-collapse\r\n                    //\r\n                    keyword: function () {\r\n                        var k = parserInput.$char('%') || parserInput.$re(/^\\[?(?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+\\]?/);\r\n                        if (k) {\r\n                            return tree.Color.fromKeyword(k) || new (tree.Keyword)(k);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A function call\r\n                    //\r\n                    //     rgb(255, 0, 255)\r\n                    //\r\n                    // The arguments are parsed with the `entities.arguments` parser.\r\n                    //\r\n                    call: function () {\r\n                        var name;\r\n                        var args;\r\n                        var func;\r\n                        var index = parserInput.i;\r\n                        // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\r\n                        if (parserInput.peek(/^url\\(/i)) {\r\n                            return;\r\n                        }\r\n                        parserInput.save();\r\n                        name = parserInput.$re(/^([\\w-]+|%|~|progid:[\\w\\.]+)\\(/);\r\n                        if (!name) {\r\n                            parserInput.forget();\r\n                            return;\r\n                        }\r\n                        name = name[1];\r\n                        func = this.customFuncCall(name);\r\n                        if (func) {\r\n                            args = func.parse();\r\n                            if (args && func.stop) {\r\n                                parserInput.forget();\r\n                                return args;\r\n                            }\r\n                        }\r\n                        args = this.arguments(args);\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore('Could not parse call arguments or missing \\')\\'');\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return new (tree.Call)(name, args, index, fileInfo);\r\n                    },\r\n                    //\r\n                    // Parsing rules for functions with non-standard args, e.g.:\r\n                    //\r\n                    //     boolean(not(2 > 1))\r\n                    //\r\n                    //     This is a quick prototype, to be modified/improved when\r\n                    //     more custom-parsed funcs come (e.g. `selector(...)`)\r\n                    //\r\n                    customFuncCall: function (name) {\r\n                        /* Ideally the table is to be moved out of here for faster perf.,\r\n                           but it's quite tricky since it relies on all these `parsers`\r\n                           and `expect` available only here */\r\n                        return {\r\n                            alpha: f(parsers.ieAlpha, true),\r\n                            boolean: f(condition),\r\n                            'if': f(condition)\r\n                        }[name.toLowerCase()];\r\n                        function f(parse, stop) {\r\n                            return {\r\n                                parse: parse,\r\n                                stop: stop // when true - stop after parse() and return its result, \r\n                                // otherwise continue for plain args\r\n                            };\r\n                        }\r\n                        function condition() {\r\n                            return [expect(parsers.condition, 'expected condition')];\r\n                        }\r\n                    },\r\n                    arguments: function (prevArgs) {\r\n                        var argsComma = prevArgs || [];\r\n                        var argsSemiColon = [];\r\n                        var isSemiColonSeparated;\r\n                        var value;\r\n                        parserInput.save();\r\n                        while (true) {\r\n                            if (prevArgs) {\r\n                                prevArgs = false;\r\n                            }\r\n                            else {\r\n                                value = parsers.detachedRuleset() || this.assignment() || parsers.expression();\r\n                                if (!value) {\r\n                                    break;\r\n                                }\r\n                                if (value.value && value.value.length == 1) {\r\n                                    value = value.value[0];\r\n                                }\r\n                                argsComma.push(value);\r\n                            }\r\n                            if (parserInput.$char(',')) {\r\n                                continue;\r\n                            }\r\n                            if (parserInput.$char(';') || isSemiColonSeparated) {\r\n                                isSemiColonSeparated = true;\r\n                                value = (argsComma.length < 1) ? argsComma[0]\r\n                                    : new tree.Value(argsComma);\r\n                                argsSemiColon.push(value);\r\n                                argsComma = [];\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        return isSemiColonSeparated ? argsSemiColon : argsComma;\r\n                    },\r\n                    literal: function () {\r\n                        return this.dimension() ||\r\n                            this.color() ||\r\n                            this.quoted() ||\r\n                            this.unicodeDescriptor();\r\n                    },\r\n                    // Assignments are argument entities for calls.\r\n                    // They are present in ie filter properties as shown below.\r\n                    //\r\n                    //     filter: progid:DXImageTransform.Microsoft.Alpha( *opacity=50* )\r\n                    //\r\n                    assignment: function () {\r\n                        var key;\r\n                        var value;\r\n                        parserInput.save();\r\n                        key = parserInput.$re(/^\\w+(?=\\s?=)/i);\r\n                        if (!key) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (!parserInput.$char('=')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        value = parsers.entity();\r\n                        if (value) {\r\n                            parserInput.forget();\r\n                            return new (tree.Assignment)(key, value);\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    },\r\n                    //\r\n                    // Parse url() tokens\r\n                    //\r\n                    // We use a specific rule for urls, because they don't really behave like\r\n                    // standard function calls. The difference is that the argument doesn't have\r\n                    // to be enclosed within a string, so it can't be parsed as an Expression.\r\n                    //\r\n                    url: function () {\r\n                        var value;\r\n                        var index = parserInput.i;\r\n                        parserInput.autoCommentAbsorb = false;\r\n                        if (!parserInput.$str('url(')) {\r\n                            parserInput.autoCommentAbsorb = true;\r\n                            return;\r\n                        }\r\n                        value = this.quoted() || this.variable() || this.property() ||\r\n                            parserInput.$re(/^(?:(?:\\\\[\\(\\)'\"])|[^\\(\\)'\"])+/) || '';\r\n                        parserInput.autoCommentAbsorb = true;\r\n                        expectChar(')');\r\n                        return new (tree.URL)((value.value != null ||\r\n                            value instanceof tree.Variable ||\r\n                            value instanceof tree.Property) ?\r\n                            value : new (tree.Anonymous)(value, index), index, fileInfo);\r\n                    },\r\n                    //\r\n                    // A Variable entity, such as `@fink`, in\r\n                    //\r\n                    //     width: @fink + 2px\r\n                    //\r\n                    // We use a different parser for variable definitions,\r\n                    // see `parsers.variable`.\r\n                    //\r\n                    variable: function () {\r\n                        var ch;\r\n                        var name;\r\n                        var index = parserInput.i;\r\n                        parserInput.save();\r\n                        if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^@@?[\\w-]+/))) {\r\n                            ch = parserInput.currentChar();\r\n                            if (ch === '(' || ch === '[' && !parserInput.prevChar().match(/^\\s/)) {\r\n                                // this may be a VariableCall lookup\r\n                                var result = parsers.variableCall(name);\r\n                                if (result) {\r\n                                    parserInput.forget();\r\n                                    return result;\r\n                                }\r\n                            }\r\n                            parserInput.forget();\r\n                            return new (tree.Variable)(name, index, fileInfo);\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    // A variable entity using the protective {} e.g. @{var}\r\n                    variableCurly: function () {\r\n                        var curly;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '@' && (curly = parserInput.$re(/^@\\{([\\w-]+)\\}/))) {\r\n                            return new (tree.Variable)(\"@\" + curly[1], index, fileInfo);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Property accessor, such as `$color`, in\r\n                    //\r\n                    //     background-color: $color\r\n                    //\r\n                    property: function () {\r\n                        var name;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '$' && (name = parserInput.$re(/^\\$[\\w-]+/))) {\r\n                            return new (tree.Property)(name, index, fileInfo);\r\n                        }\r\n                    },\r\n                    // A property entity useing the protective {} e.g. ${prop}\r\n                    propertyCurly: function () {\r\n                        var curly;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '$' && (curly = parserInput.$re(/^\\$\\{([\\w-]+)\\}/))) {\r\n                            return new (tree.Property)(\"$\" + curly[1], index, fileInfo);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Hexadecimal color\r\n                    //\r\n                    //     #4F3C2F\r\n                    //\r\n                    // `rgb` and `hsl` colors are parsed through the `entities.call` parser.\r\n                    //\r\n                    color: function () {\r\n                        var rgb;\r\n                        parserInput.save();\r\n                        if (parserInput.currentChar() === '#' && (rgb = parserInput.$re(/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})([\\w.#\\[])?/))) {\r\n                            if (!rgb[2]) {\r\n                                parserInput.forget();\r\n                                return new (tree.Color)(rgb[1], undefined, rgb[0]);\r\n                            }\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    colorKeyword: function () {\r\n                        parserInput.save();\r\n                        var autoCommentAbsorb = parserInput.autoCommentAbsorb;\r\n                        parserInput.autoCommentAbsorb = false;\r\n                        var k = parserInput.$re(/^[_A-Za-z-][_A-Za-z0-9-]+/);\r\n                        parserInput.autoCommentAbsorb = autoCommentAbsorb;\r\n                        if (!k) {\r\n                            parserInput.forget();\r\n                            return;\r\n                        }\r\n                        parserInput.restore();\r\n                        var color = tree.Color.fromKeyword(k);\r\n                        if (color) {\r\n                            parserInput.$str(k);\r\n                            return color;\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Dimension, that is, a number and a unit\r\n                    //\r\n                    //     0.5em 95%\r\n                    //\r\n                    dimension: function () {\r\n                        if (parserInput.peekNotNumeric()) {\r\n                            return;\r\n                        }\r\n                        var value = parserInput.$re(/^([+-]?\\d*\\.?\\d+)(%|[a-z_]+)?/i);\r\n                        if (value) {\r\n                            return new (tree.Dimension)(value[1], value[2]);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A unicode descriptor, as is used in unicode-range\r\n                    //\r\n                    // U+0??  or U+00A1-00A9\r\n                    //\r\n                    unicodeDescriptor: function () {\r\n                        var ud;\r\n                        ud = parserInput.$re(/^U\\+[0-9a-fA-F?]+(\\-[0-9a-fA-F?]+)?/);\r\n                        if (ud) {\r\n                            return new (tree.UnicodeDescriptor)(ud[0]);\r\n                        }\r\n                    },\r\n                    //\r\n                    // JavaScript code to be evaluated\r\n                    //\r\n                    //     `window.location.href`\r\n                    //\r\n                    javascript: function () {\r\n                        var js;\r\n                        var index = parserInput.i;\r\n                        parserInput.save();\r\n                        var escape = parserInput.$char('~');\r\n                        var jsQuote = parserInput.$char('`');\r\n                        if (!jsQuote) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        js = parserInput.$re(/^[^`]*`/);\r\n                        if (js) {\r\n                            parserInput.forget();\r\n                            return new (tree.JavaScript)(js.substr(0, js.length - 1), Boolean(escape), index, fileInfo);\r\n                        }\r\n                        parserInput.restore('invalid javascript definition');\r\n                    }\r\n                },\r\n                //\r\n                // The variable part of a variable definition. Used in the `rule` parser\r\n                //\r\n                //     @fink:\r\n                //\r\n                variable: function () {\r\n                    var name;\r\n                    if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^(@[\\w-]+)\\s*:/))) {\r\n                        return name[1];\r\n                    }\r\n                },\r\n                //\r\n                // Call a variable value to retrieve a detached ruleset\r\n                // or a value from a detached ruleset's rules.\r\n                //\r\n                //     @fink();\r\n                //     @fink;\r\n                //     color: @fink[@color];\r\n                //\r\n                variableCall: function (parsedName) {\r\n                    var lookups;\r\n                    var i = parserInput.i;\r\n                    var inValue = !!parsedName;\r\n                    var name = parsedName;\r\n                    parserInput.save();\r\n                    if (name || (parserInput.currentChar() === '@'\r\n                        && (name = parserInput.$re(/^(@[\\w-]+)(\\(\\s*\\))?/)))) {\r\n                        lookups = this.mixin.ruleLookups();\r\n                        if (!lookups && ((inValue && parserInput.$str('()') !== '()') || (name[2] !== '()'))) {\r\n                            parserInput.restore('Missing \\'[...]\\' lookup in variable call');\r\n                            return;\r\n                        }\r\n                        if (!inValue) {\r\n                            name = name[1];\r\n                        }\r\n                        var call = new tree.VariableCall(name, i, fileInfo);\r\n                        if (!inValue && parsers.end()) {\r\n                            parserInput.forget();\r\n                            return call;\r\n                        }\r\n                        else {\r\n                            parserInput.forget();\r\n                            return new tree.NamespaceValue(call, lookups, i, fileInfo);\r\n                        }\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // extend syntax - used to extend selectors\r\n                //\r\n                extend: function (isRule) {\r\n                    var elements;\r\n                    var e;\r\n                    var index = parserInput.i;\r\n                    var option;\r\n                    var extendList;\r\n                    var extend;\r\n                    if (!parserInput.$str(isRule ? '&:extend(' : ':extend(')) {\r\n                        return;\r\n                    }\r\n                    do {\r\n                        option = null;\r\n                        elements = null;\r\n                        while (!(option = parserInput.$re(/^(all)(?=\\s*(\\)|,))/))) {\r\n                            e = this.element();\r\n                            if (!e) {\r\n                                break;\r\n                            }\r\n                            if (elements) {\r\n                                elements.push(e);\r\n                            }\r\n                            else {\r\n                                elements = [e];\r\n                            }\r\n                        }\r\n                        option = option && option[1];\r\n                        if (!elements) {\r\n                            error('Missing target selector for :extend().');\r\n                        }\r\n                        extend = new (tree.Extend)(new (tree.Selector)(elements), option, index, fileInfo);\r\n                        if (extendList) {\r\n                            extendList.push(extend);\r\n                        }\r\n                        else {\r\n                            extendList = [extend];\r\n                        }\r\n                    } while (parserInput.$char(','));\r\n                    expect(/^\\)/);\r\n                    if (isRule) {\r\n                        expect(/^;/);\r\n                    }\r\n                    return extendList;\r\n                },\r\n                //\r\n                // extendRule - used in a rule to extend all the parent selectors\r\n                //\r\n                extendRule: function () {\r\n                    return this.extend(true);\r\n                },\r\n                //\r\n                // Mixins\r\n                //\r\n                mixin: {\r\n                    //\r\n                    // A Mixin call, with an optional argument list\r\n                    //\r\n                    //     #mixins > .square(#fff);\r\n                    //     #mixins.square(#fff);\r\n                    //     .rounded(4px, black);\r\n                    //     .button;\r\n                    //\r\n                    // We can lookup / return a value using the lookup syntax:\r\n                    //\r\n                    //     color: #mixin.square(#fff)[@color];\r\n                    //\r\n                    // The `while` loop is there because mixins can be\r\n                    // namespaced, but we only support the child and descendant\r\n                    // selector for now.\r\n                    //\r\n                    call: function (inValue, getLookup) {\r\n                        var s = parserInput.currentChar();\r\n                        var important = false;\r\n                        var lookups;\r\n                        var index = parserInput.i;\r\n                        var elements;\r\n                        var args;\r\n                        var hasParens;\r\n                        if (s !== '.' && s !== '#') {\r\n                            return;\r\n                        }\r\n                        parserInput.save(); // stop us absorbing part of an invalid selector\r\n                        elements = this.elements();\r\n                        if (elements) {\r\n                            if (parserInput.$char('(')) {\r\n                                args = this.args(true).args;\r\n                                expectChar(')');\r\n                                hasParens = true;\r\n                            }\r\n                            if (getLookup !== false) {\r\n                                lookups = this.ruleLookups();\r\n                            }\r\n                            if (getLookup === true && !lookups) {\r\n                                parserInput.restore();\r\n                                return;\r\n                            }\r\n                            if (inValue && !lookups && !hasParens) {\r\n                                // This isn't a valid in-value mixin call\r\n                                parserInput.restore();\r\n                                return;\r\n                            }\r\n                            if (!inValue && parsers.important()) {\r\n                                important = true;\r\n                            }\r\n                            if (inValue || parsers.end()) {\r\n                                parserInput.forget();\r\n                                var mixin = new (tree.mixin.Call)(elements, args, index, fileInfo, !lookups && important);\r\n                                if (lookups) {\r\n                                    return new tree.NamespaceValue(mixin, lookups);\r\n                                }\r\n                                else {\r\n                                    return mixin;\r\n                                }\r\n                            }\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    /**\r\n                     * Matching elements for mixins\r\n                     * (Start with . or # and can have > )\r\n                     */\r\n                    elements: function () {\r\n                        var elements;\r\n                        var e;\r\n                        var c;\r\n                        var elem;\r\n                        var elemIndex;\r\n                        var re = /^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/;\r\n                        while (true) {\r\n                            elemIndex = parserInput.i;\r\n                            e = parserInput.$re(re);\r\n                            if (!e) {\r\n                                break;\r\n                            }\r\n                            elem = new (tree.Element)(c, e, false, elemIndex, fileInfo);\r\n                            if (elements) {\r\n                                elements.push(elem);\r\n                            }\r\n                            else {\r\n                                elements = [elem];\r\n                            }\r\n                            c = parserInput.$char('>');\r\n                        }\r\n                        return elements;\r\n                    },\r\n                    args: function (isCall) {\r\n                        var entities = parsers.entities;\r\n                        var returner = { args: null, variadic: false };\r\n                        var expressions = [];\r\n                        var argsSemiColon = [];\r\n                        var argsComma = [];\r\n                        var isSemiColonSeparated;\r\n                        var expressionContainsNamed;\r\n                        var name;\r\n                        var nameLoop;\r\n                        var value;\r\n                        var arg;\r\n                        var expand;\r\n                        var hasSep = true;\r\n                        parserInput.save();\r\n                        while (true) {\r\n                            if (isCall) {\r\n                                arg = parsers.detachedRuleset() || parsers.expression();\r\n                            }\r\n                            else {\r\n                                parserInput.commentStore.length = 0;\r\n                                if (parserInput.$str('...')) {\r\n                                    returner.variadic = true;\r\n                                    if (parserInput.$char(';') && !isSemiColonSeparated) {\r\n                                        isSemiColonSeparated = true;\r\n                                    }\r\n                                    (isSemiColonSeparated ? argsSemiColon : argsComma)\r\n                                        .push({ variadic: true });\r\n                                    break;\r\n                                }\r\n                                arg = entities.variable() || entities.property() || entities.literal() || entities.keyword() || this.call(true);\r\n                            }\r\n                            if (!arg || !hasSep) {\r\n                                break;\r\n                            }\r\n                            nameLoop = null;\r\n                            if (arg.throwAwayComments) {\r\n                                arg.throwAwayComments();\r\n                            }\r\n                            value = arg;\r\n                            var val = null;\r\n                            if (isCall) {\r\n                                // Variable\r\n                                if (arg.value && arg.value.length == 1) {\r\n                                    val = arg.value[0];\r\n                                }\r\n                            }\r\n                            else {\r\n                                val = arg;\r\n                            }\r\n                            if (val && (val instanceof tree.Variable || val instanceof tree.Property)) {\r\n                                if (parserInput.$char(':')) {\r\n                                    if (expressions.length > 0) {\r\n                                        if (isSemiColonSeparated) {\r\n                                            error('Cannot mix ; and , as delimiter types');\r\n                                        }\r\n                                        expressionContainsNamed = true;\r\n                                    }\r\n                                    value = parsers.detachedRuleset() || parsers.expression();\r\n                                    if (!value) {\r\n                                        if (isCall) {\r\n                                            error('could not understand value for named argument');\r\n                                        }\r\n                                        else {\r\n                                            parserInput.restore();\r\n                                            returner.args = [];\r\n                                            return returner;\r\n                                        }\r\n                                    }\r\n                                    nameLoop = (name = val.name);\r\n                                }\r\n                                else if (parserInput.$str('...')) {\r\n                                    if (!isCall) {\r\n                                        returner.variadic = true;\r\n                                        if (parserInput.$char(';') && !isSemiColonSeparated) {\r\n                                            isSemiColonSeparated = true;\r\n                                        }\r\n                                        (isSemiColonSeparated ? argsSemiColon : argsComma)\r\n                                            .push({ name: arg.name, variadic: true });\r\n                                        break;\r\n                                    }\r\n                                    else {\r\n                                        expand = true;\r\n                                    }\r\n                                }\r\n                                else if (!isCall) {\r\n                                    name = nameLoop = val.name;\r\n                                    value = null;\r\n                                }\r\n                            }\r\n                            if (value) {\r\n                                expressions.push(value);\r\n                            }\r\n                            argsComma.push({ name: nameLoop, value: value, expand: expand });\r\n                            if (parserInput.$char(',')) {\r\n                                hasSep = true;\r\n                                continue;\r\n                            }\r\n                            hasSep = parserInput.$char(';') === ';';\r\n                            if (hasSep || isSemiColonSeparated) {\r\n                                if (expressionContainsNamed) {\r\n                                    error('Cannot mix ; and , as delimiter types');\r\n                                }\r\n                                isSemiColonSeparated = true;\r\n                                if (expressions.length > 1) {\r\n                                    value = new (tree.Value)(expressions);\r\n                                }\r\n                                argsSemiColon.push({ name: name, value: value, expand: expand });\r\n                                name = null;\r\n                                expressions = [];\r\n                                expressionContainsNamed = false;\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        returner.args = isSemiColonSeparated ? argsSemiColon : argsComma;\r\n                        return returner;\r\n                    },\r\n                    //\r\n                    // A Mixin definition, with a list of parameters\r\n                    //\r\n                    //     .rounded (@radius: 2px, @color) {\r\n                    //        ...\r\n                    //     }\r\n                    //\r\n                    // Until we have a finer grained state-machine, we have to\r\n                    // do a look-ahead, to make sure we don't have a mixin call.\r\n                    // See the `rule` function for more information.\r\n                    //\r\n                    // We start by matching `.rounded (`, and then proceed on to\r\n                    // the argument list, which has optional default values.\r\n                    // We store the parameters in `params`, with a `value` key,\r\n                    // if there is a value, such as in the case of `@radius`.\r\n                    //\r\n                    // Once we've got our params list, and a closing `)`, we parse\r\n                    // the `{...}` block.\r\n                    //\r\n                    definition: function () {\r\n                        var name;\r\n                        var params = [];\r\n                        var match;\r\n                        var ruleset;\r\n                        var cond;\r\n                        var variadic = false;\r\n                        if ((parserInput.currentChar() !== '.' && parserInput.currentChar() !== '#') ||\r\n                            parserInput.peek(/^[^{]*\\}/)) {\r\n                            return;\r\n                        }\r\n                        parserInput.save();\r\n                        match = parserInput.$re(/^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(/);\r\n                        if (match) {\r\n                            name = match[1];\r\n                            var argInfo = this.args(false);\r\n                            params = argInfo.args;\r\n                            variadic = argInfo.variadic;\r\n                            // .mixincall(\"@{a}\");\r\n                            // looks a bit like a mixin definition..\r\n                            // also\r\n                            // .mixincall(@a: {rule: set;});\r\n                            // so we have to be nice and restore\r\n                            if (!parserInput.$char(')')) {\r\n                                parserInput.restore('Missing closing \\')\\'');\r\n                                return;\r\n                            }\r\n                            parserInput.commentStore.length = 0;\r\n                            if (parserInput.$str('when')) { // Guard\r\n                                cond = expect(parsers.conditions, 'expected condition');\r\n                            }\r\n                            ruleset = parsers.block();\r\n                            if (ruleset) {\r\n                                parserInput.forget();\r\n                                return new (tree.mixin.Definition)(name, params, ruleset, cond, variadic);\r\n                            }\r\n                            else {\r\n                                parserInput.restore();\r\n                            }\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    },\r\n                    ruleLookups: function () {\r\n                        var rule;\r\n                        var lookups = [];\r\n                        if (parserInput.currentChar() !== '[') {\r\n                            return;\r\n                        }\r\n                        while (true) {\r\n                            parserInput.save();\r\n                            rule = this.lookupValue();\r\n                            if (!rule && rule !== '') {\r\n                                parserInput.restore();\r\n                                break;\r\n                            }\r\n                            lookups.push(rule);\r\n                            parserInput.forget();\r\n                        }\r\n                        if (lookups.length > 0) {\r\n                            return lookups;\r\n                        }\r\n                    },\r\n                    lookupValue: function () {\r\n                        parserInput.save();\r\n                        if (!parserInput.$char('[')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        var name = parserInput.$re(/^(?:[@$]{0,2})[_a-zA-Z0-9-]*/);\r\n                        if (!parserInput.$char(']')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (name || name === '') {\r\n                            parserInput.forget();\r\n                            return name;\r\n                        }\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                //\r\n                // Entities are the smallest recognized token,\r\n                // and can be found inside a rule's value.\r\n                //\r\n                entity: function () {\r\n                    var entities = this.entities;\r\n                    return this.comment() || entities.literal() || entities.variable() || entities.url() ||\r\n                        entities.property() || entities.call() || entities.keyword() || this.mixin.call(true) ||\r\n                        entities.javascript();\r\n                },\r\n                //\r\n                // A Declaration terminator. Note that we use `peek()` to check for '}',\r\n                // because the `block` rule will be expecting it, but we still need to make sure\r\n                // it's there, if ';' was omitted.\r\n                //\r\n                end: function () {\r\n                    return parserInput.$char(';') || parserInput.peek('}');\r\n                },\r\n                //\r\n                // IE's alpha function\r\n                //\r\n                //     alpha(opacity=88)\r\n                //\r\n                ieAlpha: function () {\r\n                    var value;\r\n                    // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\r\n                    if (!parserInput.$re(/^opacity=/i)) {\r\n                        return;\r\n                    }\r\n                    value = parserInput.$re(/^\\d+/);\r\n                    if (!value) {\r\n                        value = expect(parsers.entities.variable, 'Could not parse alpha');\r\n                        value = \"@{\" + value.name.slice(1) + \"}\";\r\n                    }\r\n                    expectChar(')');\r\n                    return new tree.Quoted('', \"alpha(opacity=\" + value + \")\");\r\n                },\r\n                //\r\n                // A Selector Element\r\n                //\r\n                //     div\r\n                //     + h1\r\n                //     #socks\r\n                //     input[type=\"text\"]\r\n                //\r\n                // Elements are the building blocks for Selectors,\r\n                // they are made out of a `Combinator` (see combinator rule),\r\n                // and an element name, such as a tag a class, or `*`.\r\n                //\r\n                element: function () {\r\n                    var e;\r\n                    var c;\r\n                    var v;\r\n                    var index = parserInput.i;\r\n                    c = this.combinator();\r\n                    e = parserInput.$re(/^(?:\\d+\\.\\d+|\\d+)%/) ||\r\n                        parserInput.$re(/^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/) ||\r\n                        parserInput.$char('*') || parserInput.$char('&') || this.attribute() ||\r\n                        parserInput.$re(/^\\([^&()@]+\\)/) || parserInput.$re(/^[\\.#:](?=@)/) ||\r\n                        this.entities.variableCurly();\r\n                    if (!e) {\r\n                        parserInput.save();\r\n                        if (parserInput.$char('(')) {\r\n                            if ((v = this.selector(false)) && parserInput.$char(')')) {\r\n                                e = new (tree.Paren)(v);\r\n                                parserInput.forget();\r\n                            }\r\n                            else {\r\n                                parserInput.restore('Missing closing \\')\\'');\r\n                            }\r\n                        }\r\n                        else {\r\n                            parserInput.forget();\r\n                        }\r\n                    }\r\n                    if (e) {\r\n                        return new (tree.Element)(c, e, e instanceof tree.Variable, index, fileInfo);\r\n                    }\r\n                },\r\n                //\r\n                // Combinators combine elements together, in a Selector.\r\n                //\r\n                // Because our parser isn't white-space sensitive, special care\r\n                // has to be taken, when parsing the descendant combinator, ` `,\r\n                // as it's an empty space. We have to check the previous character\r\n                // in the input, to see if it's a ` ` character. More info on how\r\n                // we deal with this in *combinator.js*.\r\n                //\r\n                combinator: function () {\r\n                    var c = parserInput.currentChar();\r\n                    if (c === '/') {\r\n                        parserInput.save();\r\n                        var slashedCombinator = parserInput.$re(/^\\/[a-z]+\\//i);\r\n                        if (slashedCombinator) {\r\n                            parserInput.forget();\r\n                            return new (tree.Combinator)(slashedCombinator);\r\n                        }\r\n                        parserInput.restore();\r\n                    }\r\n                    if (c === '>' || c === '+' || c === '~' || c === '|' || c === '^') {\r\n                        parserInput.i++;\r\n                        if (c === '^' && parserInput.currentChar() === '^') {\r\n                            c = '^^';\r\n                            parserInput.i++;\r\n                        }\r\n                        while (parserInput.isWhitespace()) {\r\n                            parserInput.i++;\r\n                        }\r\n                        return new (tree.Combinator)(c);\r\n                    }\r\n                    else if (parserInput.isWhitespace(-1)) {\r\n                        return new (tree.Combinator)(' ');\r\n                    }\r\n                    else {\r\n                        return new (tree.Combinator)(null);\r\n                    }\r\n                },\r\n                //\r\n                // A CSS Selector\r\n                // with less extensions e.g. the ability to extend and guard\r\n                //\r\n                //     .class > div + h1\r\n                //     li a:hover\r\n                //\r\n                // Selectors are made out of one or more Elements, see above.\r\n                //\r\n                selector: function (isLess) {\r\n                    var index = parserInput.i;\r\n                    var elements;\r\n                    var extendList;\r\n                    var c;\r\n                    var e;\r\n                    var allExtends;\r\n                    var when;\r\n                    var condition;\r\n                    isLess = isLess !== false;\r\n                    while ((isLess && (extendList = this.extend())) || (isLess && (when = parserInput.$str('when'))) || (e = this.element())) {\r\n                        if (when) {\r\n                            condition = expect(this.conditions, 'expected condition');\r\n                        }\r\n                        else if (condition) {\r\n                            error('CSS guard can only be used at the end of selector');\r\n                        }\r\n                        else if (extendList) {\r\n                            if (allExtends) {\r\n                                allExtends = allExtends.concat(extendList);\r\n                            }\r\n                            else {\r\n                                allExtends = extendList;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (allExtends) {\r\n                                error('Extend can only be used at the end of selector');\r\n                            }\r\n                            c = parserInput.currentChar();\r\n                            if (elements) {\r\n                                elements.push(e);\r\n                            }\r\n                            else {\r\n                                elements = [e];\r\n                            }\r\n                            e = null;\r\n                        }\r\n                        if (c === '{' || c === '}' || c === ';' || c === ',' || c === ')') {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (elements) {\r\n                        return new (tree.Selector)(elements, allExtends, condition, index, fileInfo);\r\n                    }\r\n                    if (allExtends) {\r\n                        error('Extend must be used to extend a selector, it cannot be used on its own');\r\n                    }\r\n                },\r\n                selectors: function () {\r\n                    var s;\r\n                    var selectors;\r\n                    while (true) {\r\n                        s = this.selector();\r\n                        if (!s) {\r\n                            break;\r\n                        }\r\n                        if (selectors) {\r\n                            selectors.push(s);\r\n                        }\r\n                        else {\r\n                            selectors = [s];\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                        if (s.condition && selectors.length > 1) {\r\n                            error(\"Guards are only currently allowed on a single selector.\");\r\n                        }\r\n                        if (!parserInput.$char(',')) {\r\n                            break;\r\n                        }\r\n                        if (s.condition) {\r\n                            error(\"Guards are only currently allowed on a single selector.\");\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                    }\r\n                    return selectors;\r\n                },\r\n                attribute: function () {\r\n                    if (!parserInput.$char('[')) {\r\n                        return;\r\n                    }\r\n                    var entities = this.entities;\r\n                    var key;\r\n                    var val;\r\n                    var op;\r\n                    //\r\n                    // case-insensitive flag\r\n                    // e.g. [attr operator value i]\r\n                    //\r\n                    var cif;\r\n                    if (!(key = entities.variableCurly())) {\r\n                        key = expect(/^(?:[_A-Za-z0-9-\\*]*\\|)?(?:[_A-Za-z0-9-]|\\\\.)+/);\r\n                    }\r\n                    op = parserInput.$re(/^[|~*$^]?=/);\r\n                    if (op) {\r\n                        val = entities.quoted() || parserInput.$re(/^[0-9]+%/) || parserInput.$re(/^[\\w-]+/) || entities.variableCurly();\r\n                        if (val) {\r\n                            cif = parserInput.$re(/^[iIsS]/);\r\n                        }\r\n                    }\r\n                    expectChar(']');\r\n                    return new (tree.Attribute)(key, op, val, cif);\r\n                },\r\n                //\r\n                // The `block` rule is used by `ruleset` and `mixin.definition`.\r\n                // It's a wrapper around the `primary` rule, with added `{}`.\r\n                //\r\n                block: function () {\r\n                    var content;\r\n                    if (parserInput.$char('{') && (content = this.primary()) && parserInput.$char('}')) {\r\n                        return content;\r\n                    }\r\n                },\r\n                blockRuleset: function () {\r\n                    var block = this.block();\r\n                    if (block) {\r\n                        block = new tree.Ruleset(null, block);\r\n                    }\r\n                    return block;\r\n                },\r\n                detachedRuleset: function () {\r\n                    var argInfo;\r\n                    var params;\r\n                    var variadic;\r\n                    parserInput.save();\r\n                    if (parserInput.$re(/^[.#]\\(/)) {\r\n                        /**\r\n                         * DR args currently only implemented for each() function, and not\r\n                         * yet settable as `@dr: #(@arg) {}`\r\n                         * This should be done when DRs are merged with mixins.\r\n                         * See: https://github.com/less/less-meta/issues/16\r\n                         */\r\n                        argInfo = this.mixin.args(false);\r\n                        params = argInfo.args;\r\n                        variadic = argInfo.variadic;\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                    }\r\n                    var blockRuleset = this.blockRuleset();\r\n                    if (blockRuleset) {\r\n                        parserInput.forget();\r\n                        if (params) {\r\n                            return new tree.mixin.Definition(null, params, blockRuleset, null, variadic);\r\n                        }\r\n                        return new tree.DetachedRuleset(blockRuleset);\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // div, .class, body > p {...}\r\n                //\r\n                ruleset: function () {\r\n                    var selectors;\r\n                    var rules;\r\n                    var debugInfo;\r\n                    parserInput.save();\r\n                    if (context.dumpLineNumbers) {\r\n                        debugInfo = getDebugInfo(parserInput.i);\r\n                    }\r\n                    selectors = this.selectors();\r\n                    if (selectors && (rules = this.block())) {\r\n                        parserInput.forget();\r\n                        var ruleset = new (tree.Ruleset)(selectors, rules, context.strictImports);\r\n                        if (context.dumpLineNumbers) {\r\n                            ruleset.debugInfo = debugInfo;\r\n                        }\r\n                        return ruleset;\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                declaration: function () {\r\n                    var name;\r\n                    var value;\r\n                    var index = parserInput.i;\r\n                    var hasDR;\r\n                    var c = parserInput.currentChar();\r\n                    var important;\r\n                    var merge;\r\n                    var isVariable;\r\n                    if (c === '.' || c === '#' || c === '&' || c === ':') {\r\n                        return;\r\n                    }\r\n                    parserInput.save();\r\n                    name = this.variable() || this.ruleProperty();\r\n                    if (name) {\r\n                        isVariable = typeof name === 'string';\r\n                        if (isVariable) {\r\n                            value = this.detachedRuleset();\r\n                            if (value) {\r\n                                hasDR = true;\r\n                            }\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                        if (!value) {\r\n                            // a name returned by this.ruleProperty() is always an array of the form:\r\n                            // [string-1, ..., string-n, \"\"] or [string-1, ..., string-n, \"+\"]\r\n                            // where each item is a tree.Keyword or tree.Variable\r\n                            merge = !isVariable && name.length > 1 && name.pop().value;\r\n                            // Custom property values get permissive parsing\r\n                            if (name[0].value && name[0].value.slice(0, 2) === '--') {\r\n                                value = this.permissiveValue();\r\n                            }\r\n                            // Try to store values as anonymous\r\n                            // If we need the value later we'll re-parse it in ruleset.parseValue\r\n                            else {\r\n                                value = this.anonymousValue();\r\n                            }\r\n                            if (value) {\r\n                                parserInput.forget();\r\n                                // anonymous values absorb the end ';' which is required for them to work\r\n                                return new (tree.Declaration)(name, value, false, merge, index, fileInfo);\r\n                            }\r\n                            if (!value) {\r\n                                value = this.value();\r\n                            }\r\n                            if (value) {\r\n                                important = this.important();\r\n                            }\r\n                            else if (isVariable) {\r\n                                // As a last resort, try permissiveValue\r\n                                value = this.permissiveValue();\r\n                            }\r\n                        }\r\n                        if (value && (this.end() || hasDR)) {\r\n                            parserInput.forget();\r\n                            return new (tree.Declaration)(name, value, important, merge, index, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                anonymousValue: function () {\r\n                    var index = parserInput.i;\r\n                    var match = parserInput.$re(/^([^.#@\\$+\\/'\"*`(;{}-]*);/);\r\n                    if (match) {\r\n                        return new (tree.Anonymous)(match[1], index);\r\n                    }\r\n                },\r\n                /**\r\n                 * Used for custom properties, at-rules, and variables (as fallback)\r\n                 * Parses almost anything inside of {} [] () \"\" blocks\r\n                 * until it reaches outer-most tokens.\r\n                 *\r\n                 * First, it will try to parse comments and entities to reach\r\n                 * the end. This is mostly like the Expression parser except no\r\n                 * math is allowed.\r\n                 */\r\n                permissiveValue: function (untilTokens) {\r\n                    var i;\r\n                    var e;\r\n                    var done;\r\n                    var value;\r\n                    var tok = untilTokens || ';';\r\n                    var index = parserInput.i;\r\n                    var result = [];\r\n                    function testCurrentChar() {\r\n                        var char = parserInput.currentChar();\r\n                        if (typeof tok === 'string') {\r\n                            return char === tok;\r\n                        }\r\n                        else {\r\n                            return tok.test(char);\r\n                        }\r\n                    }\r\n                    if (testCurrentChar()) {\r\n                        return;\r\n                    }\r\n                    value = [];\r\n                    do {\r\n                        e = this.comment();\r\n                        if (e) {\r\n                            value.push(e);\r\n                            continue;\r\n                        }\r\n                        e = this.entity();\r\n                        if (e) {\r\n                            value.push(e);\r\n                        }\r\n                    } while (e);\r\n                    done = testCurrentChar();\r\n                    if (value.length > 0) {\r\n                        value = new (tree.Expression)(value);\r\n                        if (done) {\r\n                            return value;\r\n                        }\r\n                        else {\r\n                            result.push(value);\r\n                        }\r\n                        // Preserve space before $parseUntil as it will not\r\n                        if (parserInput.prevChar() === ' ') {\r\n                            result.push(new tree.Anonymous(' ', index));\r\n                        }\r\n                    }\r\n                    parserInput.save();\r\n                    value = parserInput.$parseUntil(tok);\r\n                    if (value) {\r\n                        if (typeof value === 'string') {\r\n                            error(\"Expected '\" + value + \"'\", 'Parse');\r\n                        }\r\n                        if (value.length === 1 && value[0] === ' ') {\r\n                            parserInput.forget();\r\n                            return new tree.Anonymous('', index);\r\n                        }\r\n                        var item = void 0;\r\n                        for (i = 0; i < value.length; i++) {\r\n                            item = value[i];\r\n                            if (Array.isArray(item)) {\r\n                                // Treat actual quotes as normal quoted values\r\n                                result.push(new tree.Quoted(item[0], item[1], true, index, fileInfo));\r\n                            }\r\n                            else {\r\n                                if (i === value.length - 1) {\r\n                                    item = item.trim();\r\n                                }\r\n                                // Treat like quoted values, but replace vars like unquoted expressions\r\n                                var quote = new tree.Quoted('\\'', item, true, index, fileInfo);\r\n                                quote.variableRegex = /@([\\w-]+)/g;\r\n                                quote.propRegex = /\\$([\\w-]+)/g;\r\n                                result.push(quote);\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        return new tree.Expression(result, true);\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // An @import atrule\r\n                //\r\n                //     @import \"lib\";\r\n                //\r\n                // Depending on our environment, importing is done differently:\r\n                // In the browser, it's an XHR request, in Node, it would be a\r\n                // file-system operation. The function used for importing is\r\n                // stored in `import`, which we pass to the Import constructor.\r\n                //\r\n                'import': function () {\r\n                    var path;\r\n                    var features;\r\n                    var index = parserInput.i;\r\n                    var dir = parserInput.$re(/^@import\\s+/);\r\n                    if (dir) {\r\n                        var options = (dir ? this.importOptions() : null) || {};\r\n                        if ((path = this.entities.quoted() || this.entities.url())) {\r\n                            features = this.mediaFeatures();\r\n                            if (!parserInput.$char(';')) {\r\n                                parserInput.i = index;\r\n                                error('missing semi-colon or unrecognised media features on import');\r\n                            }\r\n                            features = features && new (tree.Value)(features);\r\n                            return new (tree.Import)(path, features, options, index, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.i = index;\r\n                            error('malformed import statement');\r\n                        }\r\n                    }\r\n                },\r\n                importOptions: function () {\r\n                    var o;\r\n                    var options = {};\r\n                    var optionName;\r\n                    var value;\r\n                    // list of options, surrounded by parens\r\n                    if (!parserInput.$char('(')) {\r\n                        return null;\r\n                    }\r\n                    do {\r\n                        o = this.importOption();\r\n                        if (o) {\r\n                            optionName = o;\r\n                            value = true;\r\n                            switch (optionName) {\r\n                                case 'css':\r\n                                    optionName = 'less';\r\n                                    value = false;\r\n                                    break;\r\n                                case 'once':\r\n                                    optionName = 'multiple';\r\n                                    value = false;\r\n                                    break;\r\n                            }\r\n                            options[optionName] = value;\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    } while (o);\r\n                    expectChar(')');\r\n                    return options;\r\n                },\r\n                importOption: function () {\r\n                    var opt = parserInput.$re(/^(less|css|multiple|once|inline|reference|optional)/);\r\n                    if (opt) {\r\n                        return opt[1];\r\n                    }\r\n                },\r\n                mediaFeature: function () {\r\n                    var entities = this.entities;\r\n                    var nodes = [];\r\n                    var e;\r\n                    var p;\r\n                    parserInput.save();\r\n                    do {\r\n                        e = entities.keyword() || entities.variable() || entities.mixinLookup();\r\n                        if (e) {\r\n                            nodes.push(e);\r\n                        }\r\n                        else if (parserInput.$char('(')) {\r\n                            p = this.property();\r\n                            e = this.value();\r\n                            if (parserInput.$char(')')) {\r\n                                if (p && e) {\r\n                                    nodes.push(new (tree.Paren)(new (tree.Declaration)(p, e, null, null, parserInput.i, fileInfo, true)));\r\n                                }\r\n                                else if (e) {\r\n                                    nodes.push(new (tree.Paren)(e));\r\n                                }\r\n                                else {\r\n                                    error('badly formed media feature definition');\r\n                                }\r\n                            }\r\n                            else {\r\n                                error('Missing closing \\')\\'', 'Parse');\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    parserInput.forget();\r\n                    if (nodes.length > 0) {\r\n                        return new (tree.Expression)(nodes);\r\n                    }\r\n                },\r\n                mediaFeatures: function () {\r\n                    var entities = this.entities;\r\n                    var features = [];\r\n                    var e;\r\n                    do {\r\n                        e = this.mediaFeature();\r\n                        if (e) {\r\n                            features.push(e);\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        else {\r\n                            e = entities.variable() || entities.mixinLookup();\r\n                            if (e) {\r\n                                features.push(e);\r\n                                if (!parserInput.$char(',')) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    return features.length > 0 ? features : null;\r\n                },\r\n                media: function () {\r\n                    var features;\r\n                    var rules;\r\n                    var media;\r\n                    var debugInfo;\r\n                    var index = parserInput.i;\r\n                    if (context.dumpLineNumbers) {\r\n                        debugInfo = getDebugInfo(index);\r\n                    }\r\n                    parserInput.save();\r\n                    if (parserInput.$str('@media')) {\r\n                        features = this.mediaFeatures();\r\n                        rules = this.block();\r\n                        if (!rules) {\r\n                            error('media definitions require block statements after any features');\r\n                        }\r\n                        parserInput.forget();\r\n                        media = new (tree.Media)(rules, features, index, fileInfo);\r\n                        if (context.dumpLineNumbers) {\r\n                            media.debugInfo = debugInfo;\r\n                        }\r\n                        return media;\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // A @plugin directive, used to import plugins dynamically.\r\n                //\r\n                //     @plugin (args) \"lib\";\r\n                //\r\n                plugin: function () {\r\n                    var path;\r\n                    var args;\r\n                    var options;\r\n                    var index = parserInput.i;\r\n                    var dir = parserInput.$re(/^@plugin\\s+/);\r\n                    if (dir) {\r\n                        args = this.pluginArgs();\r\n                        if (args) {\r\n                            options = {\r\n                                pluginArgs: args,\r\n                                isPlugin: true\r\n                            };\r\n                        }\r\n                        else {\r\n                            options = { isPlugin: true };\r\n                        }\r\n                        if ((path = this.entities.quoted() || this.entities.url())) {\r\n                            if (!parserInput.$char(';')) {\r\n                                parserInput.i = index;\r\n                                error('missing semi-colon on @plugin');\r\n                            }\r\n                            return new (tree.Import)(path, null, options, index, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.i = index;\r\n                            error('malformed @plugin statement');\r\n                        }\r\n                    }\r\n                },\r\n                pluginArgs: function () {\r\n                    // list of options, surrounded by parens\r\n                    parserInput.save();\r\n                    if (!parserInput.$char('(')) {\r\n                        parserInput.restore();\r\n                        return null;\r\n                    }\r\n                    var args = parserInput.$re(/^\\s*([^\\);]+)\\)\\s*/);\r\n                    if (args[1]) {\r\n                        parserInput.forget();\r\n                        return args[1].trim();\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                        return null;\r\n                    }\r\n                },\r\n                //\r\n                // A CSS AtRule\r\n                //\r\n                //     @charset \"utf-8\";\r\n                //\r\n                atrule: function () {\r\n                    var index = parserInput.i;\r\n                    var name;\r\n                    var value;\r\n                    var rules;\r\n                    var nonVendorSpecificName;\r\n                    var hasIdentifier;\r\n                    var hasExpression;\r\n                    var hasUnknown;\r\n                    var hasBlock = true;\r\n                    var isRooted = true;\r\n                    if (parserInput.currentChar() !== '@') {\r\n                        return;\r\n                    }\r\n                    value = this['import']() || this.plugin() || this.media();\r\n                    if (value) {\r\n                        return value;\r\n                    }\r\n                    parserInput.save();\r\n                    name = parserInput.$re(/^@[a-z-]+/);\r\n                    if (!name) {\r\n                        return;\r\n                    }\r\n                    nonVendorSpecificName = name;\r\n                    if (name.charAt(1) == '-' && name.indexOf('-', 2) > 0) {\r\n                        nonVendorSpecificName = \"@\" + name.slice(name.indexOf('-', 2) + 1);\r\n                    }\r\n                    switch (nonVendorSpecificName) {\r\n                        case '@charset':\r\n                            hasIdentifier = true;\r\n                            hasBlock = false;\r\n                            break;\r\n                        case '@namespace':\r\n                            hasExpression = true;\r\n                            hasBlock = false;\r\n                            break;\r\n                        case '@keyframes':\r\n                        case '@counter-style':\r\n                            hasIdentifier = true;\r\n                            break;\r\n                        case '@document':\r\n                        case '@supports':\r\n                            hasUnknown = true;\r\n                            isRooted = false;\r\n                            break;\r\n                        default:\r\n                            hasUnknown = true;\r\n                            break;\r\n                    }\r\n                    parserInput.commentStore.length = 0;\r\n                    if (hasIdentifier) {\r\n                        value = this.entity();\r\n                        if (!value) {\r\n                            error(\"expected \" + name + \" identifier\");\r\n                        }\r\n                    }\r\n                    else if (hasExpression) {\r\n                        value = this.expression();\r\n                        if (!value) {\r\n                            error(\"expected \" + name + \" expression\");\r\n                        }\r\n                    }\r\n                    else if (hasUnknown) {\r\n                        value = this.permissiveValue(/^[{;]/);\r\n                        hasBlock = (parserInput.currentChar() === '{');\r\n                        if (!value) {\r\n                            if (!hasBlock && parserInput.currentChar() !== ';') {\r\n                                error(name + \" rule is missing block or ending semi-colon\");\r\n                            }\r\n                        }\r\n                        else if (!value.value) {\r\n                            value = null;\r\n                        }\r\n                    }\r\n                    if (hasBlock) {\r\n                        rules = this.blockRuleset();\r\n                    }\r\n                    if (rules || (!hasBlock && value && parserInput.$char(';'))) {\r\n                        parserInput.forget();\r\n                        return new (tree.AtRule)(name, value, rules, index, fileInfo, context.dumpLineNumbers ? getDebugInfo(index) : null, isRooted);\r\n                    }\r\n                    parserInput.restore('at-rule options not recognised');\r\n                },\r\n                //\r\n                // A Value is a comma-delimited list of Expressions\r\n                //\r\n                //     font-family: Baskerville, Georgia, serif;\r\n                //\r\n                // In a Rule, a Value represents everything after the `:`,\r\n                // and before the `;`.\r\n                //\r\n                value: function () {\r\n                    var e;\r\n                    var expressions = [];\r\n                    var index = parserInput.i;\r\n                    do {\r\n                        e = this.expression();\r\n                        if (e) {\r\n                            expressions.push(e);\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    if (expressions.length > 0) {\r\n                        return new (tree.Value)(expressions, index);\r\n                    }\r\n                },\r\n                important: function () {\r\n                    if (parserInput.currentChar() === '!') {\r\n                        return parserInput.$re(/^! *important/);\r\n                    }\r\n                },\r\n                sub: function () {\r\n                    var a;\r\n                    var e;\r\n                    parserInput.save();\r\n                    if (parserInput.$char('(')) {\r\n                        a = this.addition();\r\n                        if (a && parserInput.$char(')')) {\r\n                            parserInput.forget();\r\n                            e = new (tree.Expression)([a]);\r\n                            e.parens = true;\r\n                            return e;\r\n                        }\r\n                        parserInput.restore('Expected \\')\\'');\r\n                        return;\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                multiplication: function () {\r\n                    var m;\r\n                    var a;\r\n                    var op;\r\n                    var operation;\r\n                    var isSpaced;\r\n                    m = this.operand();\r\n                    if (m) {\r\n                        isSpaced = parserInput.isWhitespace(-1);\r\n                        while (true) {\r\n                            if (parserInput.peek(/^\\/[*\\/]/)) {\r\n                                break;\r\n                            }\r\n                            parserInput.save();\r\n                            op = parserInput.$char('/') || parserInput.$char('*') || parserInput.$str('./');\r\n                            if (!op) {\r\n                                parserInput.forget();\r\n                                break;\r\n                            }\r\n                            a = this.operand();\r\n                            if (!a) {\r\n                                parserInput.restore();\r\n                                break;\r\n                            }\r\n                            parserInput.forget();\r\n                            m.parensInOp = true;\r\n                            a.parensInOp = true;\r\n                            operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\r\n                            isSpaced = parserInput.isWhitespace(-1);\r\n                        }\r\n                        return operation || m;\r\n                    }\r\n                },\r\n                addition: function () {\r\n                    var m;\r\n                    var a;\r\n                    var op;\r\n                    var operation;\r\n                    var isSpaced;\r\n                    m = this.multiplication();\r\n                    if (m) {\r\n                        isSpaced = parserInput.isWhitespace(-1);\r\n                        while (true) {\r\n                            op = parserInput.$re(/^[-+]\\s+/) || (!isSpaced && (parserInput.$char('+') || parserInput.$char('-')));\r\n                            if (!op) {\r\n                                break;\r\n                            }\r\n                            a = this.multiplication();\r\n                            if (!a) {\r\n                                break;\r\n                            }\r\n                            m.parensInOp = true;\r\n                            a.parensInOp = true;\r\n                            operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\r\n                            isSpaced = parserInput.isWhitespace(-1);\r\n                        }\r\n                        return operation || m;\r\n                    }\r\n                },\r\n                conditions: function () {\r\n                    var a;\r\n                    var b;\r\n                    var index = parserInput.i;\r\n                    var condition;\r\n                    a = this.condition(true);\r\n                    if (a) {\r\n                        while (true) {\r\n                            if (!parserInput.peek(/^,\\s*(not\\s*)?\\(/) || !parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                            b = this.condition(true);\r\n                            if (!b) {\r\n                                break;\r\n                            }\r\n                            condition = new (tree.Condition)('or', condition || a, b, index);\r\n                        }\r\n                        return condition || a;\r\n                    }\r\n                },\r\n                condition: function (needsParens) {\r\n                    var result;\r\n                    var logical;\r\n                    var next;\r\n                    function or() {\r\n                        return parserInput.$str('or');\r\n                    }\r\n                    result = this.conditionAnd(needsParens);\r\n                    if (!result) {\r\n                        return;\r\n                    }\r\n                    logical = or();\r\n                    if (logical) {\r\n                        next = this.condition(needsParens);\r\n                        if (next) {\r\n                            result = new (tree.Condition)(logical, result, next);\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    return result;\r\n                },\r\n                conditionAnd: function (needsParens) {\r\n                    var result;\r\n                    var logical;\r\n                    var next;\r\n                    var self = this;\r\n                    function insideCondition() {\r\n                        var cond = self.negatedCondition(needsParens) || self.parenthesisCondition(needsParens);\r\n                        if (!cond && !needsParens) {\r\n                            return self.atomicCondition(needsParens);\r\n                        }\r\n                        return cond;\r\n                    }\r\n                    function and() {\r\n                        return parserInput.$str('and');\r\n                    }\r\n                    result = insideCondition();\r\n                    if (!result) {\r\n                        return;\r\n                    }\r\n                    logical = and();\r\n                    if (logical) {\r\n                        next = this.conditionAnd(needsParens);\r\n                        if (next) {\r\n                            result = new (tree.Condition)(logical, result, next);\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    return result;\r\n                },\r\n                negatedCondition: function (needsParens) {\r\n                    if (parserInput.$str('not')) {\r\n                        var result = this.parenthesisCondition(needsParens);\r\n                        if (result) {\r\n                            result.negate = !result.negate;\r\n                        }\r\n                        return result;\r\n                    }\r\n                },\r\n                parenthesisCondition: function (needsParens) {\r\n                    function tryConditionFollowedByParenthesis(me) {\r\n                        var body;\r\n                        parserInput.save();\r\n                        body = me.condition(needsParens);\r\n                        if (!body) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return body;\r\n                    }\r\n                    var body;\r\n                    parserInput.save();\r\n                    if (!parserInput.$str('(')) {\r\n                        parserInput.restore();\r\n                        return;\r\n                    }\r\n                    body = tryConditionFollowedByParenthesis(this);\r\n                    if (body) {\r\n                        parserInput.forget();\r\n                        return body;\r\n                    }\r\n                    body = this.atomicCondition(needsParens);\r\n                    if (!body) {\r\n                        parserInput.restore();\r\n                        return;\r\n                    }\r\n                    if (!parserInput.$char(')')) {\r\n                        parserInput.restore(\"expected ')' got '\" + parserInput.currentChar() + \"'\");\r\n                        return;\r\n                    }\r\n                    parserInput.forget();\r\n                    return body;\r\n                },\r\n                atomicCondition: function (needsParens) {\r\n                    var entities = this.entities;\r\n                    var index = parserInput.i;\r\n                    var a;\r\n                    var b;\r\n                    var c;\r\n                    var op;\r\n                    function cond() {\r\n                        return this.addition() || entities.keyword() || entities.quoted() || entities.mixinLookup();\r\n                    }\r\n                    cond = cond.bind(this);\r\n                    a = cond();\r\n                    if (a) {\r\n                        if (parserInput.$char('>')) {\r\n                            if (parserInput.$char('=')) {\r\n                                op = '>=';\r\n                            }\r\n                            else {\r\n                                op = '>';\r\n                            }\r\n                        }\r\n                        else if (parserInput.$char('<')) {\r\n                            if (parserInput.$char('=')) {\r\n                                op = '<=';\r\n                            }\r\n                            else {\r\n                                op = '<';\r\n                            }\r\n                        }\r\n                        else if (parserInput.$char('=')) {\r\n                            if (parserInput.$char('>')) {\r\n                                op = '=>';\r\n                            }\r\n                            else if (parserInput.$char('<')) {\r\n                                op = '=<';\r\n                            }\r\n                            else {\r\n                                op = '=';\r\n                            }\r\n                        }\r\n                        if (op) {\r\n                            b = cond();\r\n                            if (b) {\r\n                                c = new (tree.Condition)(op, a, b, index, false);\r\n                            }\r\n                            else {\r\n                                error('expected expression');\r\n                            }\r\n                        }\r\n                        else {\r\n                            c = new (tree.Condition)('=', a, new (tree.Keyword)('true'), index, false);\r\n                        }\r\n                        return c;\r\n                    }\r\n                },\r\n                //\r\n                // An operand is anything that can be part of an operation,\r\n                // such as a Color, or a Variable\r\n                //\r\n                operand: function () {\r\n                    var entities = this.entities;\r\n                    var negate;\r\n                    if (parserInput.peek(/^-[@\\$\\(]/)) {\r\n                        negate = parserInput.$char('-');\r\n                    }\r\n                    var o = this.sub() || entities.dimension() ||\r\n                        entities.color() || entities.variable() ||\r\n                        entities.property() || entities.call() ||\r\n                        entities.quoted(true) || entities.colorKeyword() ||\r\n                        entities.mixinLookup();\r\n                    if (negate) {\r\n                        o.parensInOp = true;\r\n                        o = new (tree.Negative)(o);\r\n                    }\r\n                    return o;\r\n                },\r\n                //\r\n                // Expressions either represent mathematical operations,\r\n                // or white-space delimited Entities.\r\n                //\r\n                //     1px solid black\r\n                //     @var * 2\r\n                //\r\n                expression: function () {\r\n                    var entities = [];\r\n                    var e;\r\n                    var delim;\r\n                    var index = parserInput.i;\r\n                    do {\r\n                        e = this.comment();\r\n                        if (e) {\r\n                            entities.push(e);\r\n                            continue;\r\n                        }\r\n                        e = this.addition() || this.entity();\r\n                        if (e instanceof tree.Comment) {\r\n                            e = null;\r\n                        }\r\n                        if (e) {\r\n                            entities.push(e);\r\n                            // operations do not allow keyword \"/\" dimension (e.g. small/20px) so we support that here\r\n                            if (!parserInput.peek(/^\\/[\\/*]/)) {\r\n                                delim = parserInput.$char('/');\r\n                                if (delim) {\r\n                                    entities.push(new (tree.Anonymous)(delim, index));\r\n                                }\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    if (entities.length > 0) {\r\n                        return new (tree.Expression)(entities);\r\n                    }\r\n                },\r\n                property: function () {\r\n                    var name = parserInput.$re(/^(\\*?-?[_a-zA-Z0-9-]+)\\s*:/);\r\n                    if (name) {\r\n                        return name[1];\r\n                    }\r\n                },\r\n                ruleProperty: function () {\r\n                    var name = [];\r\n                    var index = [];\r\n                    var s;\r\n                    var k;\r\n                    parserInput.save();\r\n                    var simpleProperty = parserInput.$re(/^([_a-zA-Z0-9-]+)\\s*:/);\r\n                    if (simpleProperty) {\r\n                        name = [new (tree.Keyword)(simpleProperty[1])];\r\n                        parserInput.forget();\r\n                        return name;\r\n                    }\r\n                    function match(re) {\r\n                        var i = parserInput.i;\r\n                        var chunk = parserInput.$re(re);\r\n                        if (chunk) {\r\n                            index.push(i);\r\n                            return name.push(chunk[1]);\r\n                        }\r\n                    }\r\n                    match(/^(\\*?)/);\r\n                    while (true) {\r\n                        if (!match(/^((?:[\\w-]+)|(?:[@\\$]\\{[\\w-]+\\}))/)) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if ((name.length > 1) && match(/^((?:\\+_|\\+)?)\\s*:/)) {\r\n                        parserInput.forget();\r\n                        // at last, we have the complete match now. move forward,\r\n                        // convert name particles to tree objects and return:\r\n                        if (name[0] === '') {\r\n                            name.shift();\r\n                            index.shift();\r\n                        }\r\n                        for (k = 0; k < name.length; k++) {\r\n                            s = name[k];\r\n                            name[k] = (s.charAt(0) !== '@' && s.charAt(0) !== '$') ?\r\n                                new (tree.Keyword)(s) :\r\n                                (s.charAt(0) === '@' ?\r\n                                    new (tree.Variable)(\"@\" + s.slice(2, -1), index[k], fileInfo) :\r\n                                    new (tree.Property)(\"$\" + s.slice(2, -1), index[k], fileInfo));\r\n                        }\r\n                        return name;\r\n                    }\r\n                    parserInput.restore();\r\n                }\r\n            }\r\n        };\r\n    };\r\n    Parser.serializeVars = function (vars) {\r\n        var s = '';\r\n        for (var name_1 in vars) {\r\n            if (Object.hasOwnProperty.call(vars, name_1)) {\r\n                var value = vars[name_1];\r\n                s += ((name_1[0] === '@') ? '' : '@') + name_1 + \": \" + value + ((String(value).slice(-1) === ';') ? '' : ';');\r\n            }\r\n        }\r\n        return s;\r\n    };\n\n    function boolean(condition) {\r\n        return condition ? Keyword.True : Keyword.False;\r\n    }\r\n    /**\r\n     * Functions with evalArgs set to false are sent context\r\n     * as the first argument.\r\n     */\r\n    function If(context, condition, trueValue, falseValue) {\r\n        return condition.eval(context) ? trueValue.eval(context)\r\n            : (falseValue ? falseValue.eval(context) : new Anonymous);\r\n    }\r\n    If.evalArgs = false;\r\n    function isdefined(context, variable) {\r\n        try {\r\n            variable.eval(context);\r\n            return Keyword.True;\r\n        }\r\n        catch (e) {\r\n            return Keyword.False;\r\n        }\r\n    }\r\n    isdefined.evalArgs = false;\r\n    var boolean$1 = { isdefined: isdefined, boolean: boolean, 'if': If };\n\n    var colorFunctions;\r\n    function clamp(val) {\r\n        return Math.min(1, Math.max(0, val));\r\n    }\r\n    function hsla(origColor, hsl) {\r\n        var color = colorFunctions.hsla(hsl.h, hsl.s, hsl.l, hsl.a);\r\n        if (color) {\r\n            if (origColor.value &&\r\n                /^(rgb|hsl)/.test(origColor.value)) {\r\n                color.value = origColor.value;\r\n            }\r\n            else {\r\n                color.value = 'rgb';\r\n            }\r\n            return color;\r\n        }\r\n    }\r\n    function toHSL(color) {\r\n        if (color.toHSL) {\r\n            return color.toHSL();\r\n        }\r\n        else {\r\n            throw new Error('Argument cannot be evaluated to a color');\r\n        }\r\n    }\r\n    function toHSV(color) {\r\n        if (color.toHSV) {\r\n            return color.toHSV();\r\n        }\r\n        else {\r\n            throw new Error('Argument cannot be evaluated to a color');\r\n        }\r\n    }\r\n    function number$1(n) {\r\n        if (n instanceof Dimension) {\r\n            return parseFloat(n.unit.is('%') ? n.value / 100 : n.value);\r\n        }\r\n        else if (typeof n === 'number') {\r\n            return n;\r\n        }\r\n        else {\r\n            throw {\r\n                type: 'Argument',\r\n                message: 'color functions take numbers as parameters'\r\n            };\r\n        }\r\n    }\r\n    function scaled(n, size) {\r\n        if (n instanceof Dimension && n.unit.is('%')) {\r\n            return parseFloat(n.value * size / 100);\r\n        }\r\n        else {\r\n            return number$1(n);\r\n        }\r\n    }\r\n    colorFunctions = {\r\n        rgb: function (r, g, b) {\r\n            var a = 1;\r\n            /**\r\n             * Comma-less syntax\r\n             *   e.g. rgb(0 128 255 / 50%)\r\n             */\r\n            if (r instanceof Expression) {\r\n                var val = r.value;\r\n                r = val[0];\r\n                g = val[1];\r\n                b = val[2];\r\n                /**\r\n                 * @todo - should this be normalized in\r\n                 *   function caller? Or parsed differently?\r\n                 */\r\n                if (b instanceof Operation) {\r\n                    var op = b;\r\n                    b = op.operands[0];\r\n                    a = op.operands[1];\r\n                }\r\n            }\r\n            var color = colorFunctions.rgba(r, g, b, a);\r\n            if (color) {\r\n                color.value = 'rgb';\r\n                return color;\r\n            }\r\n        },\r\n        rgba: function (r, g, b, a) {\r\n            try {\r\n                if (r instanceof Color) {\r\n                    if (g) {\r\n                        a = number$1(g);\r\n                    }\r\n                    else {\r\n                        a = r.alpha;\r\n                    }\r\n                    return new Color(r.rgb, a, 'rgba');\r\n                }\r\n                var rgb = [r, g, b].map(function (c) { return scaled(c, 255); });\r\n                a = number$1(a);\r\n                return new Color(rgb, a, 'rgba');\r\n            }\r\n            catch (e) { }\r\n        },\r\n        hsl: function (h, s, l) {\r\n            var a = 1;\r\n            if (h instanceof Expression) {\r\n                var val = h.value;\r\n                h = val[0];\r\n                s = val[1];\r\n                l = val[2];\r\n                if (l instanceof Operation) {\r\n                    var op = l;\r\n                    l = op.operands[0];\r\n                    a = op.operands[1];\r\n                }\r\n            }\r\n            var color = colorFunctions.hsla(h, s, l, a);\r\n            if (color) {\r\n                color.value = 'hsl';\r\n                return color;\r\n            }\r\n        },\r\n        hsla: function (h, s, l, a) {\r\n            try {\r\n                if (h instanceof Color) {\r\n                    if (s) {\r\n                        a = number$1(s);\r\n                    }\r\n                    else {\r\n                        a = h.alpha;\r\n                    }\r\n                    return new Color(h.rgb, a, 'hsla');\r\n                }\r\n                var m1_1;\r\n                var m2_1;\r\n                function hue(h) {\r\n                    h = h < 0 ? h + 1 : (h > 1 ? h - 1 : h);\r\n                    if (h * 6 < 1) {\r\n                        return m1_1 + (m2_1 - m1_1) * h * 6;\r\n                    }\r\n                    else if (h * 2 < 1) {\r\n                        return m2_1;\r\n                    }\r\n                    else if (h * 3 < 2) {\r\n                        return m1_1 + (m2_1 - m1_1) * (2 / 3 - h) * 6;\r\n                    }\r\n                    else {\r\n                        return m1_1;\r\n                    }\r\n                }\r\n                h = (number$1(h) % 360) / 360;\r\n                s = clamp(number$1(s));\r\n                l = clamp(number$1(l));\r\n                a = clamp(number$1(a));\r\n                m2_1 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\r\n                m1_1 = l * 2 - m2_1;\r\n                var rgb = [\r\n                    hue(h + 1 / 3) * 255,\r\n                    hue(h) * 255,\r\n                    hue(h - 1 / 3) * 255\r\n                ];\r\n                a = number$1(a);\r\n                return new Color(rgb, a, 'hsla');\r\n            }\r\n            catch (e) { }\r\n        },\r\n        hsv: function (h, s, v) {\r\n            return colorFunctions.hsva(h, s, v, 1.0);\r\n        },\r\n        hsva: function (h, s, v, a) {\r\n            h = ((number$1(h) % 360) / 360) * 360;\r\n            s = number$1(s);\r\n            v = number$1(v);\r\n            a = number$1(a);\r\n            var i;\r\n            var f;\r\n            i = Math.floor((h / 60) % 6);\r\n            f = (h / 60) - i;\r\n            var vs = [v,\r\n                v * (1 - s),\r\n                v * (1 - f * s),\r\n                v * (1 - (1 - f) * s)];\r\n            var perm = [[0, 3, 1],\r\n                [2, 0, 1],\r\n                [1, 0, 3],\r\n                [1, 2, 0],\r\n                [3, 1, 0],\r\n                [0, 1, 2]];\r\n            return colorFunctions.rgba(vs[perm[i][0]] * 255, vs[perm[i][1]] * 255, vs[perm[i][2]] * 255, a);\r\n        },\r\n        hue: function (color) {\r\n            return new Dimension(toHSL(color).h);\r\n        },\r\n        saturation: function (color) {\r\n            return new Dimension(toHSL(color).s * 100, '%');\r\n        },\r\n        lightness: function (color) {\r\n            return new Dimension(toHSL(color).l * 100, '%');\r\n        },\r\n        hsvhue: function (color) {\r\n            return new Dimension(toHSV(color).h);\r\n        },\r\n        hsvsaturation: function (color) {\r\n            return new Dimension(toHSV(color).s * 100, '%');\r\n        },\r\n        hsvvalue: function (color) {\r\n            return new Dimension(toHSV(color).v * 100, '%');\r\n        },\r\n        red: function (color) {\r\n            return new Dimension(color.rgb[0]);\r\n        },\r\n        green: function (color) {\r\n            return new Dimension(color.rgb[1]);\r\n        },\r\n        blue: function (color) {\r\n            return new Dimension(color.rgb[2]);\r\n        },\r\n        alpha: function (color) {\r\n            return new Dimension(toHSL(color).a);\r\n        },\r\n        luma: function (color) {\r\n            return new Dimension(color.luma() * color.alpha * 100, '%');\r\n        },\r\n        luminance: function (color) {\r\n            var luminance = (0.2126 * color.rgb[0] / 255) +\r\n                (0.7152 * color.rgb[1] / 255) +\r\n                (0.0722 * color.rgb[2] / 255);\r\n            return new Dimension(luminance * color.alpha * 100, '%');\r\n        },\r\n        saturate: function (color, amount, method) {\r\n            // filter: saturate(3.2);\r\n            // should be kept as is, so check for color\r\n            if (!color.rgb) {\r\n                return null;\r\n            }\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.s += hsl.s * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.s += amount.value / 100;\r\n            }\r\n            hsl.s = clamp(hsl.s);\r\n            return hsla(color, hsl);\r\n        },\r\n        desaturate: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.s -= hsl.s * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.s -= amount.value / 100;\r\n            }\r\n            hsl.s = clamp(hsl.s);\r\n            return hsla(color, hsl);\r\n        },\r\n        lighten: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.l += hsl.l * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.l += amount.value / 100;\r\n            }\r\n            hsl.l = clamp(hsl.l);\r\n            return hsla(color, hsl);\r\n        },\r\n        darken: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.l -= hsl.l * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.l -= amount.value / 100;\r\n            }\r\n            hsl.l = clamp(hsl.l);\r\n            return hsla(color, hsl);\r\n        },\r\n        fadein: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.a += hsl.a * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.a += amount.value / 100;\r\n            }\r\n            hsl.a = clamp(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        fadeout: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.a -= hsl.a * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.a -= amount.value / 100;\r\n            }\r\n            hsl.a = clamp(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        fade: function (color, amount) {\r\n            var hsl = toHSL(color);\r\n            hsl.a = amount.value / 100;\r\n            hsl.a = clamp(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        spin: function (color, amount) {\r\n            var hsl = toHSL(color);\r\n            var hue = (hsl.h + amount.value) % 360;\r\n            hsl.h = hue < 0 ? 360 + hue : hue;\r\n            return hsla(color, hsl);\r\n        },\r\n        //\r\n        // Copyright (c) 2006-2009 Hampton Catlin, Natalie Weizenbaum, and Chris Eppstein\r\n        // http://sass-lang.com\r\n        //\r\n        mix: function (color1, color2, weight) {\r\n            if (!weight) {\r\n                weight = new Dimension(50);\r\n            }\r\n            var p = weight.value / 100.0;\r\n            var w = p * 2 - 1;\r\n            var a = toHSL(color1).a - toHSL(color2).a;\r\n            var w1 = (((w * a == -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n            var w2 = 1 - w1;\r\n            var rgb = [color1.rgb[0] * w1 + color2.rgb[0] * w2,\r\n                color1.rgb[1] * w1 + color2.rgb[1] * w2,\r\n                color1.rgb[2] * w1 + color2.rgb[2] * w2];\r\n            var alpha = color1.alpha * p + color2.alpha * (1 - p);\r\n            return new Color(rgb, alpha);\r\n        },\r\n        greyscale: function (color) {\r\n            return colorFunctions.desaturate(color, new Dimension(100));\r\n        },\r\n        contrast: function (color, dark, light, threshold) {\r\n            // filter: contrast(3.2);\r\n            // should be kept as is, so check for color\r\n            if (!color.rgb) {\r\n                return null;\r\n            }\r\n            if (typeof light === 'undefined') {\r\n                light = colorFunctions.rgba(255, 255, 255, 1.0);\r\n            }\r\n            if (typeof dark === 'undefined') {\r\n                dark = colorFunctions.rgba(0, 0, 0, 1.0);\r\n            }\r\n            // Figure out which is actually light and dark:\r\n            if (dark.luma() > light.luma()) {\r\n                var t = light;\r\n                light = dark;\r\n                dark = t;\r\n            }\r\n            if (typeof threshold === 'undefined') {\r\n                threshold = 0.43;\r\n            }\r\n            else {\r\n                threshold = number$1(threshold);\r\n            }\r\n            if (color.luma() < threshold) {\r\n                return light;\r\n            }\r\n            else {\r\n                return dark;\r\n            }\r\n        },\r\n        // Changes made in 2.7.0 - Reverted in 3.0.0\r\n        // contrast: function (color, color1, color2, threshold) {\r\n        //     // Return which of `color1` and `color2` has the greatest contrast with `color`\r\n        //     // according to the standard WCAG contrast ratio calculation.\r\n        //     // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n        //     // The threshold param is no longer used, in line with SASS.\r\n        //     // filter: contrast(3.2);\r\n        //     // should be kept as is, so check for color\r\n        //     if (!color.rgb) {\r\n        //         return null;\r\n        //     }\r\n        //     if (typeof color1 === 'undefined') {\r\n        //         color1 = colorFunctions.rgba(0, 0, 0, 1.0);\r\n        //     }\r\n        //     if (typeof color2 === 'undefined') {\r\n        //         color2 = colorFunctions.rgba(255, 255, 255, 1.0);\r\n        //     }\r\n        //     var contrast1, contrast2;\r\n        //     var luma = color.luma();\r\n        //     var luma1 = color1.luma();\r\n        //     var luma2 = color2.luma();\r\n        //     // Calculate contrast ratios for each color\r\n        //     if (luma > luma1) {\r\n        //         contrast1 = (luma + 0.05) / (luma1 + 0.05);\r\n        //     } else {\r\n        //         contrast1 = (luma1 + 0.05) / (luma + 0.05);\r\n        //     }\r\n        //     if (luma > luma2) {\r\n        //         contrast2 = (luma + 0.05) / (luma2 + 0.05);\r\n        //     } else {\r\n        //         contrast2 = (luma2 + 0.05) / (luma + 0.05);\r\n        //     }\r\n        //     if (contrast1 > contrast2) {\r\n        //         return color1;\r\n        //     } else {\r\n        //         return color2;\r\n        //     }\r\n        // },\r\n        argb: function (color) {\r\n            return new Anonymous(color.toARGB());\r\n        },\r\n        color: function (c) {\r\n            if ((c instanceof Quoted) &&\r\n                (/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})$/i.test(c.value))) {\r\n                var val = c.value.slice(1);\r\n                return new Color(val, undefined, \"#\" + val);\r\n            }\r\n            if ((c instanceof Color) || (c = Color.fromKeyword(c.value))) {\r\n                c.value = undefined;\r\n                return c;\r\n            }\r\n            throw {\r\n                type: 'Argument',\r\n                message: 'argument must be a color keyword or 3|4|6|8 digit hex e.g. #FFF'\r\n            };\r\n        },\r\n        tint: function (color, amount) {\r\n            return colorFunctions.mix(colorFunctions.rgb(255, 255, 255), color, amount);\r\n        },\r\n        shade: function (color, amount) {\r\n            return colorFunctions.mix(colorFunctions.rgb(0, 0, 0), color, amount);\r\n        }\r\n    };\r\n    var color = colorFunctions;\n\n    // Color Blending\r\n    // ref: http://www.w3.org/TR/compositing-1\r\n    function colorBlend(mode, color1, color2) {\r\n        var ab = color1.alpha; // result\r\n        var // backdrop\r\n        cb;\r\n        var as = color2.alpha;\r\n        var // source\r\n        cs;\r\n        var ar;\r\n        var cr;\r\n        var r = [];\r\n        ar = as + ab * (1 - as);\r\n        for (var i = 0; i < 3; i++) {\r\n            cb = color1.rgb[i] / 255;\r\n            cs = color2.rgb[i] / 255;\r\n            cr = mode(cb, cs);\r\n            if (ar) {\r\n                cr = (as * cs + ab * (cb -\r\n                    as * (cb + cs - cr))) / ar;\r\n            }\r\n            r[i] = cr * 255;\r\n        }\r\n        return new Color(r, ar);\r\n    }\r\n    var colorBlendModeFunctions = {\r\n        multiply: function (cb, cs) {\r\n            return cb * cs;\r\n        },\r\n        screen: function (cb, cs) {\r\n            return cb + cs - cb * cs;\r\n        },\r\n        overlay: function (cb, cs) {\r\n            cb *= 2;\r\n            return (cb <= 1) ?\r\n                colorBlendModeFunctions.multiply(cb, cs) :\r\n                colorBlendModeFunctions.screen(cb - 1, cs);\r\n        },\r\n        softlight: function (cb, cs) {\r\n            var d = 1;\r\n            var e = cb;\r\n            if (cs > 0.5) {\r\n                e = 1;\r\n                d = (cb > 0.25) ? Math.sqrt(cb)\r\n                    : ((16 * cb - 12) * cb + 4) * cb;\r\n            }\r\n            return cb - (1 - 2 * cs) * e * (d - cb);\r\n        },\r\n        hardlight: function (cb, cs) {\r\n            return colorBlendModeFunctions.overlay(cs, cb);\r\n        },\r\n        difference: function (cb, cs) {\r\n            return Math.abs(cb - cs);\r\n        },\r\n        exclusion: function (cb, cs) {\r\n            return cb + cs - 2 * cb * cs;\r\n        },\r\n        // non-w3c functions:\r\n        average: function (cb, cs) {\r\n            return (cb + cs) / 2;\r\n        },\r\n        negation: function (cb, cs) {\r\n            return 1 - Math.abs(cb + cs - 1);\r\n        }\r\n    };\r\n    for (var f$1 in colorBlendModeFunctions) {\r\n        if (colorBlendModeFunctions.hasOwnProperty(f$1)) {\r\n            colorBlend[f$1] = colorBlend.bind(null, colorBlendModeFunctions[f$1]);\r\n        }\r\n    }\n\n    var dataUri = (function (environment) {\r\n        var fallback = function (functionThis, node) { return new URL(node, functionThis.index, functionThis.currentFileInfo).eval(functionThis.context); };\r\n        return { 'data-uri': function (mimetypeNode, filePathNode) {\r\n                if (!filePathNode) {\r\n                    filePathNode = mimetypeNode;\r\n                    mimetypeNode = null;\r\n                }\r\n                var mimetype = mimetypeNode && mimetypeNode.value;\r\n                var filePath = filePathNode.value;\r\n                var currentFileInfo = this.currentFileInfo;\r\n                var currentDirectory = currentFileInfo.rewriteUrls ?\r\n                    currentFileInfo.currentDirectory : currentFileInfo.entryPath;\r\n                var fragmentStart = filePath.indexOf('#');\r\n                var fragment = '';\r\n                if (fragmentStart !== -1) {\r\n                    fragment = filePath.slice(fragmentStart);\r\n                    filePath = filePath.slice(0, fragmentStart);\r\n                }\r\n                var context = clone(this.context);\r\n                context.rawBuffer = true;\r\n                var fileManager = environment.getFileManager(filePath, currentDirectory, context, environment, true);\r\n                if (!fileManager) {\r\n                    return fallback(this, filePathNode);\r\n                }\r\n                var useBase64 = false;\r\n                // detect the mimetype if not given\r\n                if (!mimetypeNode) {\r\n                    mimetype = environment.mimeLookup(filePath);\r\n                    if (mimetype === 'image/svg+xml') {\r\n                        useBase64 = false;\r\n                    }\r\n                    else {\r\n                        // use base 64 unless it's an ASCII or UTF-8 format\r\n                        var charset = environment.charsetLookup(mimetype);\r\n                        useBase64 = ['US-ASCII', 'UTF-8'].indexOf(charset) < 0;\r\n                    }\r\n                    if (useBase64) {\r\n                        mimetype += ';base64';\r\n                    }\r\n                }\r\n                else {\r\n                    useBase64 = /;base64$/.test(mimetype);\r\n                }\r\n                var fileSync = fileManager.loadFileSync(filePath, currentDirectory, context, environment);\r\n                if (!fileSync.contents) {\r\n                    logger$1.warn(\"Skipped data-uri embedding of \" + filePath + \" because file not found\");\r\n                    return fallback(this, filePathNode || mimetypeNode);\r\n                }\r\n                var buf = fileSync.contents;\r\n                if (useBase64 && !environment.encodeBase64) {\r\n                    return fallback(this, filePathNode);\r\n                }\r\n                buf = useBase64 ? environment.encodeBase64(buf) : encodeURIComponent(buf);\r\n                var uri = \"data:\" + mimetype + \",\" + buf + fragment;\r\n                return new URL(new Quoted(\"\\\"\" + uri + \"\\\"\", uri, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\r\n            } };\r\n    });\n\n    var getItemsFromNode = function (node) {\r\n        // handle non-array values as an array of length 1\r\n        // return 'undefined' if index is invalid\r\n        var items = Array.isArray(node.value) ?\r\n            node.value : Array(node);\r\n        return items;\r\n    };\r\n    var list = {\r\n        _SELF: function (n) {\r\n            return n;\r\n        },\r\n        '~': function () {\r\n            var expr = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                expr[_i] = arguments[_i];\r\n            }\r\n            if (expr.length === 1) {\r\n                return expr[0];\r\n            }\r\n            return new Value(expr);\r\n        },\r\n        extract: function (values, index) {\r\n            // (1-based index)\r\n            index = index.value - 1;\r\n            return getItemsFromNode(values)[index];\r\n        },\r\n        length: function (values) {\r\n            return new Dimension(getItemsFromNode(values).length);\r\n        },\r\n        /**\r\n         * Creates a Less list of incremental values.\r\n         * Modeled after Lodash's range function, also exists natively in PHP\r\n         *\r\n         * @param {Dimension} [start=1]\r\n         * @param {Dimension} end  - e.g. 10 or 10px - unit is added to output\r\n         * @param {Dimension} [step=1]\r\n         */\r\n        range: function (start, end, step) {\r\n            var from;\r\n            var to;\r\n            var stepValue = 1;\r\n            var list = [];\r\n            if (end) {\r\n                to = end;\r\n                from = start.value;\r\n                if (step) {\r\n                    stepValue = step.value;\r\n                }\r\n            }\r\n            else {\r\n                from = 1;\r\n                to = start;\r\n            }\r\n            for (var i = from; i <= to.value; i += stepValue) {\r\n                list.push(new Dimension(i, to.unit));\r\n            }\r\n            return new Expression(list);\r\n        },\r\n        each: function (list, rs) {\r\n            var _this = this;\r\n            var rules = [];\r\n            var newRules;\r\n            var iterator;\r\n            var tryEval = function (val) {\r\n                if (val instanceof Node) {\r\n                    return val.eval(_this.context);\r\n                }\r\n                return val;\r\n            };\r\n            if (list.value && !(list instanceof Quoted)) {\r\n                if (Array.isArray(list.value)) {\r\n                    iterator = list.value.map(tryEval);\r\n                }\r\n                else {\r\n                    iterator = [tryEval(list.value)];\r\n                }\r\n            }\r\n            else if (list.ruleset) {\r\n                iterator = tryEval(list.ruleset).rules;\r\n            }\r\n            else if (list.rules) {\r\n                iterator = list.rules.map(tryEval);\r\n            }\r\n            else if (Array.isArray(list)) {\r\n                iterator = list.map(tryEval);\r\n            }\r\n            else {\r\n                iterator = [tryEval(list)];\r\n            }\r\n            var valueName = '@value';\r\n            var keyName = '@key';\r\n            var indexName = '@index';\r\n            if (rs.params) {\r\n                valueName = rs.params[0] && rs.params[0].name;\r\n                keyName = rs.params[1] && rs.params[1].name;\r\n                indexName = rs.params[2] && rs.params[2].name;\r\n                rs = rs.rules;\r\n            }\r\n            else {\r\n                rs = rs.ruleset;\r\n            }\r\n            for (var i = 0; i < iterator.length; i++) {\r\n                var key = void 0;\r\n                var value = void 0;\r\n                var item = iterator[i];\r\n                if (item instanceof Declaration) {\r\n                    key = typeof item.name === 'string' ? item.name : item.name[0].value;\r\n                    value = item.value;\r\n                }\r\n                else {\r\n                    key = new Dimension(i + 1);\r\n                    value = item;\r\n                }\r\n                if (item instanceof Comment) {\r\n                    continue;\r\n                }\r\n                newRules = rs.rules.slice(0);\r\n                if (valueName) {\r\n                    newRules.push(new Declaration(valueName, value, false, false, this.index, this.currentFileInfo));\r\n                }\r\n                if (indexName) {\r\n                    newRules.push(new Declaration(indexName, new Dimension(i + 1), false, false, this.index, this.currentFileInfo));\r\n                }\r\n                if (keyName) {\r\n                    newRules.push(new Declaration(keyName, key, false, false, this.index, this.currentFileInfo));\r\n                }\r\n                rules.push(new Ruleset([new (Selector)([new Element(\"\", '&')])], newRules, rs.strictImports, rs.visibilityInfo()));\r\n            }\r\n            return new Ruleset([new (Selector)([new Element(\"\", '&')])], rules, rs.strictImports, rs.visibilityInfo()).eval(this.context);\r\n        }\r\n    };\n\n    var MathHelper = function (fn, unit, n) {\r\n        if (!(n instanceof Dimension)) {\r\n            throw { type: 'Argument', message: 'argument must be a number' };\r\n        }\r\n        if (unit == null) {\r\n            unit = n.unit;\r\n        }\r\n        else {\r\n            n = n.unify();\r\n        }\r\n        return new Dimension(fn(parseFloat(n.value)), unit);\r\n    };\n\n    var mathFunctions = {\r\n        // name,  unit\r\n        ceil: null,\r\n        floor: null,\r\n        sqrt: null,\r\n        abs: null,\r\n        tan: '',\r\n        sin: '',\r\n        cos: '',\r\n        atan: 'rad',\r\n        asin: 'rad',\r\n        acos: 'rad'\r\n    };\r\n    for (var f in mathFunctions) {\r\n        if (mathFunctions.hasOwnProperty(f)) {\r\n            mathFunctions[f] = MathHelper.bind(null, Math[f], mathFunctions[f]);\r\n        }\r\n    }\r\n    mathFunctions.round = function (n, f) {\r\n        var fraction = typeof f === 'undefined' ? 0 : f.value;\r\n        return MathHelper(function (num) { return num.toFixed(fraction); }, null, n);\r\n    };\n\n    var minMax = function (isMin, args) {\r\n        args = Array.prototype.slice.call(args);\r\n        switch (args.length) {\r\n            case 0: throw { type: 'Argument', message: 'one or more arguments required' };\r\n        }\r\n        var i; // key is the unit.toString() for unified Dimension values,\r\n        var j;\r\n        var current;\r\n        var currentUnified;\r\n        var referenceUnified;\r\n        var unit;\r\n        var unitStatic;\r\n        var unitClone;\r\n        var // elems only contains original argument values.\r\n        order = [];\r\n        var values = {};\r\n        // value is the index into the order array.\r\n        for (i = 0; i < args.length; i++) {\r\n            current = args[i];\r\n            if (!(current instanceof Dimension)) {\r\n                if (Array.isArray(args[i].value)) {\r\n                    Array.prototype.push.apply(args, Array.prototype.slice.call(args[i].value));\r\n                }\r\n                continue;\r\n            }\r\n            currentUnified = current.unit.toString() === '' && unitClone !== undefined ? new Dimension(current.value, unitClone).unify() : current.unify();\r\n            unit = currentUnified.unit.toString() === '' && unitStatic !== undefined ? unitStatic : currentUnified.unit.toString();\r\n            unitStatic = unit !== '' && unitStatic === undefined || unit !== '' && order[0].unify().unit.toString() === '' ? unit : unitStatic;\r\n            unitClone = unit !== '' && unitClone === undefined ? current.unit.toString() : unitClone;\r\n            j = values[''] !== undefined && unit !== '' && unit === unitStatic ? values[''] : values[unit];\r\n            if (j === undefined) {\r\n                if (unitStatic !== undefined && unit !== unitStatic) {\r\n                    throw { type: 'Argument', message: 'incompatible types' };\r\n                }\r\n                values[unit] = order.length;\r\n                order.push(current);\r\n                continue;\r\n            }\r\n            referenceUnified = order[j].unit.toString() === '' && unitClone !== undefined ? new Dimension(order[j].value, unitClone).unify() : order[j].unify();\r\n            if (isMin && currentUnified.value < referenceUnified.value ||\r\n                !isMin && currentUnified.value > referenceUnified.value) {\r\n                order[j] = current;\r\n            }\r\n        }\r\n        if (order.length == 1) {\r\n            return order[0];\r\n        }\r\n        args = order.map(function (a) { return a.toCSS(this.context); }).join(this.context.compress ? ',' : ', ');\r\n        return new Anonymous((isMin ? 'min' : 'max') + \"(\" + args + \")\");\r\n    };\r\n    var number = {\r\n        min: function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            try {\r\n                return minMax(true, args);\r\n            }\r\n            catch (e) { }\r\n        },\r\n        max: function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            try {\r\n                return minMax(false, args);\r\n            }\r\n            catch (e) { }\r\n        },\r\n        convert: function (val, unit) {\r\n            return val.convertTo(unit.value);\r\n        },\r\n        pi: function () {\r\n            return new Dimension(Math.PI);\r\n        },\r\n        mod: function (a, b) {\r\n            return new Dimension(a.value % b.value, a.unit);\r\n        },\r\n        pow: function (x, y) {\r\n            if (typeof x === 'number' && typeof y === 'number') {\r\n                x = new Dimension(x);\r\n                y = new Dimension(y);\r\n            }\r\n            else if (!(x instanceof Dimension) || !(y instanceof Dimension)) {\r\n                throw { type: 'Argument', message: 'arguments must be numbers' };\r\n            }\r\n            return new Dimension(Math.pow(x.value, y.value), x.unit);\r\n        },\r\n        percentage: function (n) {\r\n            var result = MathHelper(function (num) { return num * 100; }, '%', n);\r\n            return result;\r\n        }\r\n    };\n\n    var string = {\r\n        e: function (str) {\r\n            return new Quoted('\"', str instanceof JavaScript ? str.evaluated : str.value, true);\r\n        },\r\n        escape: function (str) {\r\n            return new Anonymous(encodeURI(str.value).replace(/=/g, '%3D').replace(/:/g, '%3A').replace(/#/g, '%23').replace(/;/g, '%3B')\r\n                .replace(/\\(/g, '%28').replace(/\\)/g, '%29'));\r\n        },\r\n        replace: function (string, pattern, replacement, flags) {\r\n            var result = string.value;\r\n            replacement = (replacement.type === 'Quoted') ?\r\n                replacement.value : replacement.toCSS();\r\n            result = result.replace(new RegExp(pattern.value, flags ? flags.value : ''), replacement);\r\n            return new Quoted(string.quote || '', result, string.escaped);\r\n        },\r\n        '%': function (string /* arg, arg, ... */) {\r\n            var args = Array.prototype.slice.call(arguments, 1);\r\n            var result = string.value;\r\n            var _loop_1 = function (i) {\r\n                /* jshint loopfunc:true */\r\n                result = result.replace(/%[sda]/i, function (token) {\r\n                    var value = ((args[i].type === 'Quoted') &&\r\n                        token.match(/s/i)) ? args[i].value : args[i].toCSS();\r\n                    return token.match(/[A-Z]$/) ? encodeURIComponent(value) : value;\r\n                });\r\n            };\r\n            for (var i = 0; i < args.length; i++) {\r\n                _loop_1(i);\r\n            }\r\n            result = result.replace(/%%/g, '%');\r\n            return new Quoted(string.quote || '', result, string.escaped);\r\n        }\r\n    };\n\n    var svg = (function (environment) {\r\n        return { 'svg-gradient': function (direction) {\r\n                var stops;\r\n                var gradientDirectionSvg;\r\n                var gradientType = 'linear';\r\n                var rectangleDimension = 'x=\"0\" y=\"0\" width=\"1\" height=\"1\"';\r\n                var renderEnv = { compress: false };\r\n                var returner;\r\n                var directionValue = direction.toCSS(renderEnv);\r\n                var i;\r\n                var color;\r\n                var position;\r\n                var positionValue;\r\n                var alpha;\r\n                function throwArgumentDescriptor() {\r\n                    throw { type: 'Argument',\r\n                        message: 'svg-gradient expects direction, start_color [start_position], [color position,]...,' +\r\n                            ' end_color [end_position] or direction, color list' };\r\n                }\r\n                if (arguments.length == 2) {\r\n                    if (arguments[1].value.length < 2) {\r\n                        throwArgumentDescriptor();\r\n                    }\r\n                    stops = arguments[1].value;\r\n                }\r\n                else if (arguments.length < 3) {\r\n                    throwArgumentDescriptor();\r\n                }\r\n                else {\r\n                    stops = Array.prototype.slice.call(arguments, 1);\r\n                }\r\n                switch (directionValue) {\r\n                    case 'to bottom':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"';\r\n                        break;\r\n                    case 'to right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"';\r\n                        break;\r\n                    case 'to bottom right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"';\r\n                        break;\r\n                    case 'to top right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\"';\r\n                        break;\r\n                    case 'ellipse':\r\n                    case 'ellipse at center':\r\n                        gradientType = 'radial';\r\n                        gradientDirectionSvg = 'cx=\"50%\" cy=\"50%\" r=\"75%\"';\r\n                        rectangleDimension = 'x=\"-50\" y=\"-50\" width=\"101\" height=\"101\"';\r\n                        break;\r\n                    default:\r\n                        throw { type: 'Argument', message: 'svg-gradient direction must be \\'to bottom\\', \\'to right\\',' +\r\n                                ' \\'to bottom right\\', \\'to top right\\' or \\'ellipse at center\\'' };\r\n                }\r\n                returner = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 1 1\\\"><\" + gradientType + \"Gradient id=\\\"g\\\" \" + gradientDirectionSvg + \">\";\r\n                for (i = 0; i < stops.length; i += 1) {\r\n                    if (stops[i] instanceof Expression) {\r\n                        color = stops[i].value[0];\r\n                        position = stops[i].value[1];\r\n                    }\r\n                    else {\r\n                        color = stops[i];\r\n                        position = undefined;\r\n                    }\r\n                    if (!(color instanceof Color) || (!((i === 0 || i + 1 === stops.length) && position === undefined) && !(position instanceof Dimension))) {\r\n                        throwArgumentDescriptor();\r\n                    }\r\n                    positionValue = position ? position.toCSS(renderEnv) : i === 0 ? '0%' : '100%';\r\n                    alpha = color.alpha;\r\n                    returner += \"<stop offset=\\\"\" + positionValue + \"\\\" stop-color=\\\"\" + color.toRGB() + \"\\\"\" + (alpha < 1 ? \" stop-opacity=\\\"\" + alpha + \"\\\"\" : '') + \"/>\";\r\n                }\r\n                returner += \"</\" + gradientType + \"Gradient><rect \" + rectangleDimension + \" fill=\\\"url(#g)\\\" /></svg>\";\r\n                returner = encodeURIComponent(returner);\r\n                returner = \"data:image/svg+xml,\" + returner;\r\n                return new URL(new Quoted(\"'\" + returner + \"'\", returner, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\r\n            } };\r\n    });\n\n    var isa = function (n, Type) { return (n instanceof Type) ? Keyword.True : Keyword.False; };\r\n    var isunit = function (n, unit) {\r\n        if (unit === undefined) {\r\n            throw { type: 'Argument', message: 'missing the required second argument to isunit.' };\r\n        }\r\n        unit = typeof unit.value === 'string' ? unit.value : unit;\r\n        if (typeof unit !== 'string') {\r\n            throw { type: 'Argument', message: 'Second argument to isunit should be a unit or a string.' };\r\n        }\r\n        return (n instanceof Dimension) && n.unit.is(unit) ? Keyword.True : Keyword.False;\r\n    };\r\n    var types = {\r\n        isruleset: function (n) {\r\n            return isa(n, DetachedRuleset);\r\n        },\r\n        iscolor: function (n) {\r\n            return isa(n, Color);\r\n        },\r\n        isnumber: function (n) {\r\n            return isa(n, Dimension);\r\n        },\r\n        isstring: function (n) {\r\n            return isa(n, Quoted);\r\n        },\r\n        iskeyword: function (n) {\r\n            return isa(n, Keyword);\r\n        },\r\n        isurl: function (n) {\r\n            return isa(n, URL);\r\n        },\r\n        ispixel: function (n) {\r\n            return isunit(n, 'px');\r\n        },\r\n        ispercentage: function (n) {\r\n            return isunit(n, '%');\r\n        },\r\n        isem: function (n) {\r\n            return isunit(n, 'em');\r\n        },\r\n        isunit: isunit,\r\n        unit: function (val, unit) {\r\n            if (!(val instanceof Dimension)) {\r\n                throw { type: 'Argument',\r\n                    message: \"the first argument to unit must be a number\" + (val instanceof Operation ? '. Have you forgotten parenthesis?' : '') };\r\n            }\r\n            if (unit) {\r\n                if (unit instanceof Keyword) {\r\n                    unit = unit.value;\r\n                }\r\n                else {\r\n                    unit = unit.toCSS();\r\n                }\r\n            }\r\n            else {\r\n                unit = '';\r\n            }\r\n            return new Dimension(val.value, unit);\r\n        },\r\n        'get-unit': function (n) {\r\n            return new Anonymous(n.unit);\r\n        }\r\n    };\n\n    var functions = (function (environment) {\r\n        var functions = { functionRegistry: functionRegistry, functionCaller: functionCaller };\r\n        // register functions\r\n        functionRegistry.addMultiple(boolean$1);\r\n        functionRegistry.add('default', defaultFunc.eval.bind(defaultFunc));\r\n        functionRegistry.addMultiple(color);\r\n        functionRegistry.addMultiple(colorBlend);\r\n        functionRegistry.addMultiple(dataUri(environment));\r\n        functionRegistry.addMultiple(list);\r\n        functionRegistry.addMultiple(mathFunctions);\r\n        functionRegistry.addMultiple(number);\r\n        functionRegistry.addMultiple(string);\r\n        functionRegistry.addMultiple(svg());\r\n        functionRegistry.addMultiple(types);\r\n        return functions;\r\n    });\n\n    function transformTree (root, options) {\r\n        options = options || {};\r\n        var evaldRoot;\r\n        var variables = options.variables;\r\n        var evalEnv = new contexts.Eval(options);\r\n        //\r\n        // Allows setting variables with a hash, so:\r\n        //\r\n        //   `{ color: new tree.Color('#f01') }` will become:\r\n        //\r\n        //   new tree.Declaration('@color',\r\n        //     new tree.Value([\r\n        //       new tree.Expression([\r\n        //         new tree.Color('#f01')\r\n        //       ])\r\n        //     ])\r\n        //   )\r\n        //\r\n        if (typeof variables === 'object' && !Array.isArray(variables)) {\r\n            variables = Object.keys(variables).map(function (k) {\r\n                var value = variables[k];\r\n                if (!(value instanceof tree.Value)) {\r\n                    if (!(value instanceof tree.Expression)) {\r\n                        value = new tree.Expression([value]);\r\n                    }\r\n                    value = new tree.Value([value]);\r\n                }\r\n                return new tree.Declaration(\"@\" + k, value, false, null, 0);\r\n            });\r\n            evalEnv.frames = [new tree.Ruleset(null, variables)];\r\n        }\r\n        var visitors$1 = [\r\n            new visitors.JoinSelectorVisitor(),\r\n            new visitors.MarkVisibleSelectorsVisitor(true),\r\n            new visitors.ExtendVisitor(),\r\n            new visitors.ToCSSVisitor({ compress: Boolean(options.compress) })\r\n        ];\r\n        var preEvalVisitors = [];\r\n        var v;\r\n        var visitorIterator;\r\n        /**\r\n         * first() / get() allows visitors to be added while visiting\r\n         *\r\n         * @todo Add scoping for visitors just like functions for @plugin; right now they're global\r\n         */\r\n        if (options.pluginManager) {\r\n            visitorIterator = options.pluginManager.visitor();\r\n            for (var i = 0; i < 2; i++) {\r\n                visitorIterator.first();\r\n                while ((v = visitorIterator.get())) {\r\n                    if (v.isPreEvalVisitor) {\r\n                        if (i === 0 || preEvalVisitors.indexOf(v) === -1) {\r\n                            preEvalVisitors.push(v);\r\n                            v.run(root);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (i === 0 || visitors$1.indexOf(v) === -1) {\r\n                            if (v.isPreVisitor) {\r\n                                visitors$1.unshift(v);\r\n                            }\r\n                            else {\r\n                                visitors$1.push(v);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        evaldRoot = root.eval(evalEnv);\r\n        for (var i = 0; i < visitors$1.length; i++) {\r\n            visitors$1[i].run(evaldRoot);\r\n        }\r\n        // Run any remaining visitors added after eval pass\r\n        if (options.pluginManager) {\r\n            visitorIterator.first();\r\n            while ((v = visitorIterator.get())) {\r\n                if (visitors$1.indexOf(v) === -1 && preEvalVisitors.indexOf(v) === -1) {\r\n                    v.run(evaldRoot);\r\n                }\r\n            }\r\n        }\r\n        return evaldRoot;\r\n    }\n\n    /**\r\n     * Plugin Manager\r\n     */\r\n    var PluginManager = /** @class */ (function () {\r\n        function PluginManager(less) {\r\n            this.less = less;\r\n            this.visitors = [];\r\n            this.preProcessors = [];\r\n            this.postProcessors = [];\r\n            this.installedPlugins = [];\r\n            this.fileManagers = [];\r\n            this.iterator = -1;\r\n            this.pluginCache = {};\r\n            this.Loader = new less.PluginLoader(less);\r\n        }\r\n        /**\r\n         * Adds all the plugins in the array\r\n         * @param {Array} plugins\r\n         */\r\n        PluginManager.prototype.addPlugins = function (plugins) {\r\n            if (plugins) {\r\n                for (var i = 0; i < plugins.length; i++) {\r\n                    this.addPlugin(plugins[i]);\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         *\r\n         * @param plugin\r\n         * @param {String} filename\r\n         */\r\n        PluginManager.prototype.addPlugin = function (plugin, filename, functionRegistry) {\r\n            this.installedPlugins.push(plugin);\r\n            if (filename) {\r\n                this.pluginCache[filename] = plugin;\r\n            }\r\n            if (plugin.install) {\r\n                plugin.install(this.less, this, functionRegistry || this.less.functions.functionRegistry);\r\n            }\r\n        };\r\n        /**\r\n         *\r\n         * @param filename\r\n         */\r\n        PluginManager.prototype.get = function (filename) {\r\n            return this.pluginCache[filename];\r\n        };\r\n        /**\r\n         * Adds a visitor. The visitor object has options on itself to determine\r\n         * when it should run.\r\n         * @param visitor\r\n         */\r\n        PluginManager.prototype.addVisitor = function (visitor) {\r\n            this.visitors.push(visitor);\r\n        };\r\n        /**\r\n         * Adds a pre processor object\r\n         * @param {object} preProcessor\r\n         * @param {number} priority - guidelines 1 = before import, 1000 = import, 2000 = after import\r\n         */\r\n        PluginManager.prototype.addPreProcessor = function (preProcessor, priority) {\r\n            var indexToInsertAt;\r\n            for (indexToInsertAt = 0; indexToInsertAt < this.preProcessors.length; indexToInsertAt++) {\r\n                if (this.preProcessors[indexToInsertAt].priority >= priority) {\r\n                    break;\r\n                }\r\n            }\r\n            this.preProcessors.splice(indexToInsertAt, 0, { preProcessor: preProcessor, priority: priority });\r\n        };\r\n        /**\r\n         * Adds a post processor object\r\n         * @param {object} postProcessor\r\n         * @param {number} priority - guidelines 1 = before compression, 1000 = compression, 2000 = after compression\r\n         */\r\n        PluginManager.prototype.addPostProcessor = function (postProcessor, priority) {\r\n            var indexToInsertAt;\r\n            for (indexToInsertAt = 0; indexToInsertAt < this.postProcessors.length; indexToInsertAt++) {\r\n                if (this.postProcessors[indexToInsertAt].priority >= priority) {\r\n                    break;\r\n                }\r\n            }\r\n            this.postProcessors.splice(indexToInsertAt, 0, { postProcessor: postProcessor, priority: priority });\r\n        };\r\n        /**\r\n         *\r\n         * @param manager\r\n         */\r\n        PluginManager.prototype.addFileManager = function (manager) {\r\n            this.fileManagers.push(manager);\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getPreProcessors = function () {\r\n            var preProcessors = [];\r\n            for (var i = 0; i < this.preProcessors.length; i++) {\r\n                preProcessors.push(this.preProcessors[i].preProcessor);\r\n            }\r\n            return preProcessors;\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getPostProcessors = function () {\r\n            var postProcessors = [];\r\n            for (var i = 0; i < this.postProcessors.length; i++) {\r\n                postProcessors.push(this.postProcessors[i].postProcessor);\r\n            }\r\n            return postProcessors;\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getVisitors = function () {\r\n            return this.visitors;\r\n        };\r\n        PluginManager.prototype.visitor = function () {\r\n            var self = this;\r\n            return {\r\n                first: function () {\r\n                    self.iterator = -1;\r\n                    return self.visitors[self.iterator];\r\n                },\r\n                get: function () {\r\n                    self.iterator += 1;\r\n                    return self.visitors[self.iterator];\r\n                }\r\n            };\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getFileManagers = function () {\r\n            return this.fileManagers;\r\n        };\r\n        return PluginManager;\r\n    }());\r\n    var pm;\r\n    var PluginManagerFactory = function (less, newFactory) {\r\n        if (newFactory || !pm) {\r\n            pm = new PluginManager(less);\r\n        }\r\n        return pm;\r\n    };\n\n    function SourceMapOutput (environment) {\r\n        var SourceMapOutput = /** @class */ (function () {\r\n            function SourceMapOutput(options) {\r\n                this._css = [];\r\n                this._rootNode = options.rootNode;\r\n                this._contentsMap = options.contentsMap;\r\n                this._contentsIgnoredCharsMap = options.contentsIgnoredCharsMap;\r\n                if (options.sourceMapFilename) {\r\n                    this._sourceMapFilename = options.sourceMapFilename.replace(/\\\\/g, '/');\r\n                }\r\n                this._outputFilename = options.outputFilename;\r\n                this.sourceMapURL = options.sourceMapURL;\r\n                if (options.sourceMapBasepath) {\r\n                    this._sourceMapBasepath = options.sourceMapBasepath.replace(/\\\\/g, '/');\r\n                }\r\n                if (options.sourceMapRootpath) {\r\n                    this._sourceMapRootpath = options.sourceMapRootpath.replace(/\\\\/g, '/');\r\n                    if (this._sourceMapRootpath.charAt(this._sourceMapRootpath.length - 1) !== '/') {\r\n                        this._sourceMapRootpath += '/';\r\n                    }\r\n                }\r\n                else {\r\n                    this._sourceMapRootpath = '';\r\n                }\r\n                this._outputSourceFiles = options.outputSourceFiles;\r\n                this._sourceMapGeneratorConstructor = environment.getSourceMapGenerator();\r\n                this._lineNumber = 0;\r\n                this._column = 0;\r\n            }\r\n            SourceMapOutput.prototype.removeBasepath = function (path) {\r\n                if (this._sourceMapBasepath && path.indexOf(this._sourceMapBasepath) === 0) {\r\n                    path = path.substring(this._sourceMapBasepath.length);\r\n                    if (path.charAt(0) === '\\\\' || path.charAt(0) === '/') {\r\n                        path = path.substring(1);\r\n                    }\r\n                }\r\n                return path;\r\n            };\r\n            SourceMapOutput.prototype.normalizeFilename = function (filename) {\r\n                filename = filename.replace(/\\\\/g, '/');\r\n                filename = this.removeBasepath(filename);\r\n                return (this._sourceMapRootpath || '') + filename;\r\n            };\r\n            SourceMapOutput.prototype.add = function (chunk, fileInfo, index, mapLines) {\r\n                // ignore adding empty strings\r\n                if (!chunk) {\r\n                    return;\r\n                }\r\n                var lines, sourceLines, columns, sourceColumns, i;\r\n                if (fileInfo && fileInfo.filename) {\r\n                    var inputSource = this._contentsMap[fileInfo.filename];\r\n                    // remove vars/banner added to the top of the file\r\n                    if (this._contentsIgnoredCharsMap[fileInfo.filename]) {\r\n                        // adjust the index\r\n                        index -= this._contentsIgnoredCharsMap[fileInfo.filename];\r\n                        if (index < 0) {\r\n                            index = 0;\r\n                        }\r\n                        // adjust the source\r\n                        inputSource = inputSource.slice(this._contentsIgnoredCharsMap[fileInfo.filename]);\r\n                    }\r\n                    /**\r\n                     * ignore empty content, or failsafe\r\n                     * if contents map is incorrect\r\n                     */\r\n                    if (inputSource === undefined) {\r\n                        this._css.push(chunk);\r\n                        return;\r\n                    }\r\n                    inputSource = inputSource.substring(0, index);\r\n                    sourceLines = inputSource.split('\\n');\r\n                    sourceColumns = sourceLines[sourceLines.length - 1];\r\n                }\r\n                lines = chunk.split('\\n');\r\n                columns = lines[lines.length - 1];\r\n                if (fileInfo && fileInfo.filename) {\r\n                    if (!mapLines) {\r\n                        this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + 1, column: this._column },\r\n                            original: { line: sourceLines.length, column: sourceColumns.length },\r\n                            source: this.normalizeFilename(fileInfo.filename) });\r\n                    }\r\n                    else {\r\n                        for (i = 0; i < lines.length; i++) {\r\n                            this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + i + 1, column: i === 0 ? this._column : 0 },\r\n                                original: { line: sourceLines.length + i, column: i === 0 ? sourceColumns.length : 0 },\r\n                                source: this.normalizeFilename(fileInfo.filename) });\r\n                        }\r\n                    }\r\n                }\r\n                if (lines.length === 1) {\r\n                    this._column += columns.length;\r\n                }\r\n                else {\r\n                    this._lineNumber += lines.length - 1;\r\n                    this._column = columns.length;\r\n                }\r\n                this._css.push(chunk);\r\n            };\r\n            SourceMapOutput.prototype.isEmpty = function () {\r\n                return this._css.length === 0;\r\n            };\r\n            SourceMapOutput.prototype.toCSS = function (context) {\r\n                this._sourceMapGenerator = new this._sourceMapGeneratorConstructor({ file: this._outputFilename, sourceRoot: null });\r\n                if (this._outputSourceFiles) {\r\n                    for (var filename in this._contentsMap) {\r\n                        if (this._contentsMap.hasOwnProperty(filename)) {\r\n                            var source = this._contentsMap[filename];\r\n                            if (this._contentsIgnoredCharsMap[filename]) {\r\n                                source = source.slice(this._contentsIgnoredCharsMap[filename]);\r\n                            }\r\n                            this._sourceMapGenerator.setSourceContent(this.normalizeFilename(filename), source);\r\n                        }\r\n                    }\r\n                }\r\n                this._rootNode.genCSS(context, this);\r\n                if (this._css.length > 0) {\r\n                    var sourceMapURL = void 0;\r\n                    var sourceMapContent = JSON.stringify(this._sourceMapGenerator.toJSON());\r\n                    if (this.sourceMapURL) {\r\n                        sourceMapURL = this.sourceMapURL;\r\n                    }\r\n                    else if (this._sourceMapFilename) {\r\n                        sourceMapURL = this._sourceMapFilename;\r\n                    }\r\n                    this.sourceMapURL = sourceMapURL;\r\n                    this.sourceMap = sourceMapContent;\r\n                }\r\n                return this._css.join('');\r\n            };\r\n            return SourceMapOutput;\r\n        }());\r\n        return SourceMapOutput;\r\n    }\n\n    function SourceMapBuilder (SourceMapOutput, environment) {\r\n        var SourceMapBuilder = /** @class */ (function () {\r\n            function SourceMapBuilder(options) {\r\n                this.options = options;\r\n            }\r\n            SourceMapBuilder.prototype.toCSS = function (rootNode, options, imports) {\r\n                var sourceMapOutput = new SourceMapOutput({\r\n                    contentsIgnoredCharsMap: imports.contentsIgnoredChars,\r\n                    rootNode: rootNode,\r\n                    contentsMap: imports.contents,\r\n                    sourceMapFilename: this.options.sourceMapFilename,\r\n                    sourceMapURL: this.options.sourceMapURL,\r\n                    outputFilename: this.options.sourceMapOutputFilename,\r\n                    sourceMapBasepath: this.options.sourceMapBasepath,\r\n                    sourceMapRootpath: this.options.sourceMapRootpath,\r\n                    outputSourceFiles: this.options.outputSourceFiles,\r\n                    sourceMapGenerator: this.options.sourceMapGenerator,\r\n                    sourceMapFileInline: this.options.sourceMapFileInline,\r\n                    disableSourcemapAnnotation: this.options.disableSourcemapAnnotation\r\n                });\r\n                var css = sourceMapOutput.toCSS(options);\r\n                this.sourceMap = sourceMapOutput.sourceMap;\r\n                this.sourceMapURL = sourceMapOutput.sourceMapURL;\r\n                if (this.options.sourceMapInputFilename) {\r\n                    this.sourceMapInputFilename = sourceMapOutput.normalizeFilename(this.options.sourceMapInputFilename);\r\n                }\r\n                if (this.options.sourceMapBasepath !== undefined && this.sourceMapURL !== undefined) {\r\n                    this.sourceMapURL = sourceMapOutput.removeBasepath(this.sourceMapURL);\r\n                }\r\n                return css + this.getCSSAppendage();\r\n            };\r\n            SourceMapBuilder.prototype.getCSSAppendage = function () {\r\n                var sourceMapURL = this.sourceMapURL;\r\n                if (this.options.sourceMapFileInline) {\r\n                    if (this.sourceMap === undefined) {\r\n                        return '';\r\n                    }\r\n                    sourceMapURL = \"data:application/json;base64,\" + environment.encodeBase64(this.sourceMap);\r\n                }\r\n                if (this.options.disableSourcemapAnnotation) {\r\n                    return '';\r\n                }\r\n                if (sourceMapURL) {\r\n                    return \"/*# sourceMappingURL=\" + sourceMapURL + \" */\";\r\n                }\r\n                return '';\r\n            };\r\n            SourceMapBuilder.prototype.getExternalSourceMap = function () {\r\n                return this.sourceMap;\r\n            };\r\n            SourceMapBuilder.prototype.setExternalSourceMap = function (sourceMap) {\r\n                this.sourceMap = sourceMap;\r\n            };\r\n            SourceMapBuilder.prototype.isInline = function () {\r\n                return this.options.sourceMapFileInline;\r\n            };\r\n            SourceMapBuilder.prototype.getSourceMapURL = function () {\r\n                return this.sourceMapURL;\r\n            };\r\n            SourceMapBuilder.prototype.getOutputFilename = function () {\r\n                return this.options.sourceMapOutputFilename;\r\n            };\r\n            SourceMapBuilder.prototype.getInputFilename = function () {\r\n                return this.sourceMapInputFilename;\r\n            };\r\n            return SourceMapBuilder;\r\n        }());\r\n        return SourceMapBuilder;\r\n    }\n\n    function ParseTree (SourceMapBuilder) {\r\n        var ParseTree = /** @class */ (function () {\r\n            function ParseTree(root, imports) {\r\n                this.root = root;\r\n                this.imports = imports;\r\n            }\r\n            ParseTree.prototype.toCSS = function (options) {\r\n                var evaldRoot;\r\n                var result = {};\r\n                var sourceMapBuilder;\r\n                try {\r\n                    evaldRoot = transformTree(this.root, options);\r\n                }\r\n                catch (e) {\r\n                    throw new LessError(e, this.imports);\r\n                }\r\n                try {\r\n                    var compress = Boolean(options.compress);\r\n                    if (compress) {\r\n                        logger$1.warn('The compress option has been deprecated. ' +\r\n                            'We recommend you use a dedicated css minifier, for instance see less-plugin-clean-css.');\r\n                    }\r\n                    var toCSSOptions = {\r\n                        compress: compress,\r\n                        dumpLineNumbers: options.dumpLineNumbers,\r\n                        strictUnits: Boolean(options.strictUnits),\r\n                        numPrecision: 8\r\n                    };\r\n                    if (options.sourceMap) {\r\n                        sourceMapBuilder = new SourceMapBuilder(options.sourceMap);\r\n                        result.css = sourceMapBuilder.toCSS(evaldRoot, toCSSOptions, this.imports);\r\n                    }\r\n                    else {\r\n                        result.css = evaldRoot.toCSS(toCSSOptions);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    throw new LessError(e, this.imports);\r\n                }\r\n                if (options.pluginManager) {\r\n                    var postProcessors = options.pluginManager.getPostProcessors();\r\n                    for (var i = 0; i < postProcessors.length; i++) {\r\n                        result.css = postProcessors[i].process(result.css, { sourceMap: sourceMapBuilder, options: options, imports: this.imports });\r\n                    }\r\n                }\r\n                if (options.sourceMap) {\r\n                    result.map = sourceMapBuilder.getExternalSourceMap();\r\n                }\r\n                result.imports = [];\r\n                for (var file in this.imports.files) {\r\n                    if (this.imports.files.hasOwnProperty(file) && file !== this.imports.rootFilename) {\r\n                        result.imports.push(file);\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n            return ParseTree;\r\n        }());\r\n        return ParseTree;\r\n    }\n\n    function ImportManager (environment) {\r\n        // FileInfo = {\r\n        //  'rewriteUrls' - option - whether to adjust URL's to be relative\r\n        //  'filename' - full resolved filename of current file\r\n        //  'rootpath' - path to append to normal URLs for this node\r\n        //  'currentDirectory' - path to the current file, absolute\r\n        //  'rootFilename' - filename of the base file\r\n        //  'entryPath' - absolute path to the entry file\r\n        //  'reference' - whether the file should not be output and only output parts that are referenced\r\n        var ImportManager = /** @class */ (function () {\r\n            function ImportManager(less, context, rootFileInfo) {\r\n                this.less = less;\r\n                this.rootFilename = rootFileInfo.filename;\r\n                this.paths = context.paths || []; // Search paths, when importing\r\n                this.contents = {}; // map - filename to contents of all the files\r\n                this.contentsIgnoredChars = {}; // map - filename to lines at the beginning of each file to ignore\r\n                this.mime = context.mime;\r\n                this.error = null;\r\n                this.context = context;\r\n                // Deprecated? Unused outside of here, could be useful.\r\n                this.queue = []; // Files which haven't been imported yet\r\n                this.files = {}; // Holds the imported parse trees.\r\n            }\r\n            /**\r\n             * Add an import to be imported\r\n             * @param path - the raw path\r\n             * @param tryAppendExtension - whether to try appending a file extension (.less or .js if the path has no extension)\r\n             * @param currentFileInfo - the current file info (used for instance to work out relative paths)\r\n             * @param importOptions - import options\r\n             * @param callback - callback for when it is imported\r\n             */\r\n            ImportManager.prototype.push = function (path, tryAppendExtension, currentFileInfo, importOptions, callback) {\r\n                var importManager = this, pluginLoader = this.context.pluginManager.Loader;\r\n                this.queue.push(path);\r\n                var fileParsedFunc = function (e, root, fullPath) {\r\n                    importManager.queue.splice(importManager.queue.indexOf(path), 1); // Remove the path from the queue\r\n                    var importedEqualsRoot = fullPath === importManager.rootFilename;\r\n                    if (importOptions.optional && e) {\r\n                        callback(null, { rules: [] }, false, null);\r\n                        logger$1.info(\"The file \" + fullPath + \" was skipped because it was not found and the import was marked optional.\");\r\n                    }\r\n                    else {\r\n                        // Inline imports aren't cached here.\r\n                        // If we start to cache them, please make sure they won't conflict with non-inline imports of the\r\n                        // same name as they used to do before this comment and the condition below have been added.\r\n                        if (!importManager.files[fullPath] && !importOptions.inline) {\r\n                            importManager.files[fullPath] = { root: root, options: importOptions };\r\n                        }\r\n                        if (e && !importManager.error) {\r\n                            importManager.error = e;\r\n                        }\r\n                        callback(e, root, importedEqualsRoot, fullPath);\r\n                    }\r\n                };\r\n                var newFileInfo = {\r\n                    rewriteUrls: this.context.rewriteUrls,\r\n                    entryPath: currentFileInfo.entryPath,\r\n                    rootpath: currentFileInfo.rootpath,\r\n                    rootFilename: currentFileInfo.rootFilename\r\n                };\r\n                var fileManager = environment.getFileManager(path, currentFileInfo.currentDirectory, this.context, environment);\r\n                if (!fileManager) {\r\n                    fileParsedFunc({ message: \"Could not find a file-manager for \" + path });\r\n                    return;\r\n                }\r\n                var loadFileCallback = function (loadedFile) {\r\n                    var plugin;\r\n                    var resolvedFilename = loadedFile.filename;\r\n                    var contents = loadedFile.contents.replace(/^\\uFEFF/, '');\r\n                    // Pass on an updated rootpath if path of imported file is relative and file\r\n                    // is in a (sub|sup) directory\r\n                    //\r\n                    // Examples:\r\n                    // - If path of imported file is 'module/nav/nav.less' and rootpath is 'less/',\r\n                    //   then rootpath should become 'less/module/nav/'\r\n                    // - If path of imported file is '../mixins.less' and rootpath is 'less/',\r\n                    //   then rootpath should become 'less/../'\r\n                    newFileInfo.currentDirectory = fileManager.getPath(resolvedFilename);\r\n                    if (newFileInfo.rewriteUrls) {\r\n                        newFileInfo.rootpath = fileManager.join((importManager.context.rootpath || ''), fileManager.pathDiff(newFileInfo.currentDirectory, newFileInfo.entryPath));\r\n                        if (!fileManager.isPathAbsolute(newFileInfo.rootpath) && fileManager.alwaysMakePathsAbsolute()) {\r\n                            newFileInfo.rootpath = fileManager.join(newFileInfo.entryPath, newFileInfo.rootpath);\r\n                        }\r\n                    }\r\n                    newFileInfo.filename = resolvedFilename;\r\n                    var newEnv = new contexts.Parse(importManager.context);\r\n                    newEnv.processImports = false;\r\n                    importManager.contents[resolvedFilename] = contents;\r\n                    if (currentFileInfo.reference || importOptions.reference) {\r\n                        newFileInfo.reference = true;\r\n                    }\r\n                    if (importOptions.isPlugin) {\r\n                        plugin = pluginLoader.evalPlugin(contents, newEnv, importManager, importOptions.pluginArgs, newFileInfo);\r\n                        if (plugin instanceof LessError) {\r\n                            fileParsedFunc(plugin, null, resolvedFilename);\r\n                        }\r\n                        else {\r\n                            fileParsedFunc(null, plugin, resolvedFilename);\r\n                        }\r\n                    }\r\n                    else if (importOptions.inline) {\r\n                        fileParsedFunc(null, contents, resolvedFilename);\r\n                    }\r\n                    else {\r\n                        // import (multiple) parse trees apparently get altered and can't be cached.\r\n                        // TODO: investigate why this is\r\n                        if (importManager.files[resolvedFilename]\r\n                            && !importManager.files[resolvedFilename].options.multiple\r\n                            && !importOptions.multiple) {\r\n                            fileParsedFunc(null, importManager.files[resolvedFilename].root, resolvedFilename);\r\n                        }\r\n                        else {\r\n                            new Parser(newEnv, importManager, newFileInfo).parse(contents, function (e, root) {\r\n                                fileParsedFunc(e, root, resolvedFilename);\r\n                            });\r\n                        }\r\n                    }\r\n                };\r\n                var loadedFile;\r\n                var promise;\r\n                var context = clone(this.context);\r\n                if (tryAppendExtension) {\r\n                    context.ext = importOptions.isPlugin ? '.js' : '.less';\r\n                }\r\n                if (importOptions.isPlugin) {\r\n                    context.mime = 'application/javascript';\r\n                    if (context.syncImport) {\r\n                        loadedFile = pluginLoader.loadPluginSync(path, currentFileInfo.currentDirectory, context, environment, fileManager);\r\n                    }\r\n                    else {\r\n                        promise = pluginLoader.loadPlugin(path, currentFileInfo.currentDirectory, context, environment, fileManager);\r\n                    }\r\n                }\r\n                else {\r\n                    if (context.syncImport) {\r\n                        loadedFile = fileManager.loadFileSync(path, currentFileInfo.currentDirectory, context, environment);\r\n                    }\r\n                    else {\r\n                        promise = fileManager.loadFile(path, currentFileInfo.currentDirectory, context, environment, function (err, loadedFile) {\r\n                            if (err) {\r\n                                fileParsedFunc(err);\r\n                            }\r\n                            else {\r\n                                loadFileCallback(loadedFile);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                if (loadedFile) {\r\n                    if (!loadedFile.filename) {\r\n                        fileParsedFunc(loadedFile);\r\n                    }\r\n                    else {\r\n                        loadFileCallback(loadedFile);\r\n                    }\r\n                }\r\n                else if (promise) {\r\n                    promise.then(loadFileCallback, fileParsedFunc);\r\n                }\r\n            };\r\n            return ImportManager;\r\n        }());\r\n        return ImportManager;\r\n    }\n\n    function Parse (environment, ParseTree, ImportManager) {\r\n        var parse = function (input, options, callback) {\r\n            if (typeof options === 'function') {\r\n                callback = options;\r\n                options = copyOptions(this.options, {});\r\n            }\r\n            else {\r\n                options = copyOptions(this.options, options || {});\r\n            }\r\n            if (!callback) {\r\n                var self_1 = this;\r\n                return new Promise(function (resolve, reject) {\r\n                    parse.call(self_1, input, options, function (err, output) {\r\n                        if (err) {\r\n                            reject(err);\r\n                        }\r\n                        else {\r\n                            resolve(output);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                var context_1;\r\n                var rootFileInfo = void 0;\r\n                var pluginManager_1 = new PluginManagerFactory(this, !options.reUsePluginManager);\r\n                options.pluginManager = pluginManager_1;\r\n                context_1 = new contexts.Parse(options);\r\n                if (options.rootFileInfo) {\r\n                    rootFileInfo = options.rootFileInfo;\r\n                }\r\n                else {\r\n                    var filename = options.filename || 'input';\r\n                    var entryPath = filename.replace(/[^\\/\\\\]*$/, '');\r\n                    rootFileInfo = {\r\n                        filename: filename,\r\n                        rewriteUrls: context_1.rewriteUrls,\r\n                        rootpath: context_1.rootpath || '',\r\n                        currentDirectory: entryPath,\r\n                        entryPath: entryPath,\r\n                        rootFilename: filename\r\n                    };\r\n                    // add in a missing trailing slash\r\n                    if (rootFileInfo.rootpath && rootFileInfo.rootpath.slice(-1) !== '/') {\r\n                        rootFileInfo.rootpath += '/';\r\n                    }\r\n                }\r\n                var imports_1 = new ImportManager(this, context_1, rootFileInfo);\r\n                this.importManager = imports_1;\r\n                // TODO: allow the plugins to be just a list of paths or names\r\n                // Do an async plugin queue like lessc\r\n                if (options.plugins) {\r\n                    options.plugins.forEach(function (plugin) {\r\n                        var evalResult, contents;\r\n                        if (plugin.fileContent) {\r\n                            contents = plugin.fileContent.replace(/^\\uFEFF/, '');\r\n                            evalResult = pluginManager_1.Loader.evalPlugin(contents, context_1, imports_1, plugin.options, plugin.filename);\r\n                            if (evalResult instanceof LessError) {\r\n                                return callback(evalResult);\r\n                            }\r\n                        }\r\n                        else {\r\n                            pluginManager_1.addPlugin(plugin);\r\n                        }\r\n                    });\r\n                }\r\n                new Parser(context_1, imports_1, rootFileInfo)\r\n                    .parse(input, function (e, root) {\r\n                    if (e) {\r\n                        return callback(e);\r\n                    }\r\n                    callback(null, root, imports_1, options);\r\n                }, options);\r\n            }\r\n        };\r\n        return parse;\r\n    }\n\n    function Render (environment, ParseTree, ImportManager) {\r\n        var render = function (input, options, callback) {\r\n            if (typeof options === 'function') {\r\n                callback = options;\r\n                options = copyOptions(this.options, {});\r\n            }\r\n            else {\r\n                options = copyOptions(this.options, options || {});\r\n            }\r\n            if (!callback) {\r\n                var self_1 = this;\r\n                return new Promise(function (resolve, reject) {\r\n                    render.call(self_1, input, options, function (err, output) {\r\n                        if (err) {\r\n                            reject(err);\r\n                        }\r\n                        else {\r\n                            resolve(output);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                this.parse(input, options, function (err, root, imports, options) {\r\n                    if (err) {\r\n                        return callback(err);\r\n                    }\r\n                    var result;\r\n                    try {\r\n                        var parseTree = new ParseTree(root, imports);\r\n                        result = parseTree.toCSS(options);\r\n                    }\r\n                    catch (err) {\r\n                        return callback(err);\r\n                    }\r\n                    callback(null, result);\r\n                });\r\n            }\r\n        };\r\n        return render;\r\n    }\n\n    var version = \"4.1.3\";\n\n    function parseNodeVersion(version) {\n      var match = version.match(/^v(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,2})(?:-([0-9A-Za-z-.]+))?(?:\\+([0-9A-Za-z-.]+))?$/); // eslint-disable-line max-len\n      if (!match) {\n        throw new Error('Unable to parse: ' + version);\n      }\n\n      var res = {\n        major: parseInt(match[1], 10),\n        minor: parseInt(match[2], 10),\n        patch: parseInt(match[3], 10),\n        pre: match[4] || '',\n        build: match[5] || '',\n      };\n\n      return res;\n    }\n\n    var parseNodeVersion_1 = parseNodeVersion;\n\n    function lessRoot (environment, fileManagers) {\r\n        var sourceMapOutput, sourceMapBuilder, parseTree, importManager;\r\n        environment = new Environment(environment, fileManagers);\r\n        sourceMapOutput = SourceMapOutput(environment);\r\n        sourceMapBuilder = SourceMapBuilder(sourceMapOutput, environment);\r\n        parseTree = ParseTree(sourceMapBuilder);\r\n        importManager = ImportManager(environment);\r\n        var render = Render(environment, parseTree);\r\n        var parse = Parse(environment, parseTree, importManager);\r\n        var v = parseNodeVersion_1(\"v\" + version);\r\n        var initial = {\r\n            version: [v.major, v.minor, v.patch],\r\n            data: data,\r\n            tree: tree,\r\n            Environment: Environment,\r\n            AbstractFileManager: AbstractFileManager,\r\n            AbstractPluginLoader: AbstractPluginLoader,\r\n            environment: environment,\r\n            visitors: visitors,\r\n            Parser: Parser,\r\n            functions: functions(environment),\r\n            contexts: contexts,\r\n            SourceMapOutput: sourceMapOutput,\r\n            SourceMapBuilder: sourceMapBuilder,\r\n            ParseTree: parseTree,\r\n            ImportManager: importManager,\r\n            render: render,\r\n            parse: parse,\r\n            LessError: LessError,\r\n            transformTree: transformTree,\r\n            utils: utils,\r\n            PluginManager: PluginManagerFactory,\r\n            logger: logger$1\r\n        };\r\n        // Create a public API\r\n        var ctor = function (t) {\r\n            return function () {\r\n                var obj = Object.create(t.prototype);\r\n                t.apply(obj, Array.prototype.slice.call(arguments, 0));\r\n                return obj;\r\n            };\r\n        };\r\n        var t;\r\n        var api = Object.create(initial);\r\n        for (var n in initial.tree) {\r\n            /* eslint guard-for-in: 0 */\r\n            t = initial.tree[n];\r\n            if (typeof t === 'function') {\r\n                api[n.toLowerCase()] = ctor(t);\r\n            }\r\n            else {\r\n                api[n] = Object.create(null);\r\n                for (var o in t) {\r\n                    /* eslint guard-for-in: 0 */\r\n                    api[n][o.toLowerCase()] = ctor(t[o]);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Some of the functions assume a `this` context of the API object,\r\n         * which causes it to fail when wrapped for ES6 imports.\r\n         *\r\n         * An assumed `this` should be removed in the future.\r\n         */\r\n        initial.parse = initial.parse.bind(api);\r\n        initial.render = initial.render.bind(api);\r\n        return api;\r\n    }\n\n    /* global window, XMLHttpRequest */\r\n    var options$1;\r\n    var logger;\r\n    var fileCache = {};\r\n    // TODOS - move log somewhere. pathDiff and doing something similar in node. use pathDiff in the other browser file for the initial load\r\n    var FileManager = function () { };\r\n    FileManager.prototype = Object.assign(new AbstractFileManager(), {\r\n        alwaysMakePathsAbsolute: function () {\r\n            return true;\r\n        },\r\n        join: function (basePath, laterPath) {\r\n            if (!basePath) {\r\n                return laterPath;\r\n            }\r\n            return this.extractUrlParts(laterPath, basePath).path;\r\n        },\r\n        doXHR: function (url, type, callback, errback) {\r\n            var xhr = new XMLHttpRequest();\r\n            var async = options$1.isFileProtocol ? options$1.fileAsync : true;\r\n            if (typeof xhr.overrideMimeType === 'function') {\r\n                xhr.overrideMimeType('text/css');\r\n            }\r\n            logger.debug(\"XHR: Getting '\" + url + \"'\");\r\n            xhr.open('GET', url, async);\r\n            xhr.setRequestHeader('Accept', type || 'text/x-less, text/css; q=0.9, */*; q=0.5');\r\n            xhr.send(null);\r\n            function handleResponse(xhr, callback, errback) {\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    callback(xhr.responseText, xhr.getResponseHeader('Last-Modified'));\r\n                }\r\n                else if (typeof errback === 'function') {\r\n                    errback(xhr.status, url);\r\n                }\r\n            }\r\n            if (options$1.isFileProtocol && !options$1.fileAsync) {\r\n                if (xhr.status === 0 || (xhr.status >= 200 && xhr.status < 300)) {\r\n                    callback(xhr.responseText);\r\n                }\r\n                else {\r\n                    errback(xhr.status, url);\r\n                }\r\n            }\r\n            else if (async) {\r\n                xhr.onreadystatechange = function () {\r\n                    if (xhr.readyState == 4) {\r\n                        handleResponse(xhr, callback, errback);\r\n                    }\r\n                };\r\n            }\r\n            else {\r\n                handleResponse(xhr, callback, errback);\r\n            }\r\n        },\r\n        supports: function () {\r\n            return true;\r\n        },\r\n        clearFileCache: function () {\r\n            fileCache = {};\r\n        },\r\n        loadFile: function (filename, currentDirectory, options, environment) {\r\n            // TODO: Add prefix support like less-node?\r\n            // What about multiple paths?\r\n            if (currentDirectory && !this.isPathAbsolute(filename)) {\r\n                filename = currentDirectory + filename;\r\n            }\r\n            filename = options.ext ? this.tryAppendExtension(filename, options.ext) : filename;\r\n            options = options || {};\r\n            // sheet may be set to the stylesheet for the initial load or a collection of properties including\r\n            // some context variables for imports\r\n            var hrefParts = this.extractUrlParts(filename, window.location.href);\r\n            var href = hrefParts.url;\r\n            var self = this;\r\n            return new Promise(function (resolve, reject) {\r\n                if (options.useFileCache && fileCache[href]) {\r\n                    try {\r\n                        var lessText = fileCache[href];\r\n                        return resolve({ contents: lessText, filename: href, webInfo: { lastModified: new Date() } });\r\n                    }\r\n                    catch (e) {\r\n                        return reject({ filename: href, message: \"Error loading file \" + href + \" error was \" + e.message });\r\n                    }\r\n                }\r\n                self.doXHR(href, options.mime, function doXHRCallback(data, lastModified) {\r\n                    // per file cache\r\n                    fileCache[href] = data;\r\n                    // Use remote copy (re-parse)\r\n                    resolve({ contents: data, filename: href, webInfo: { lastModified: lastModified } });\r\n                }, function doXHRError(status, url) {\r\n                    reject({ type: 'File', message: \"'\" + url + \"' wasn't found (\" + status + \")\", href: href });\r\n                });\r\n            });\r\n        }\r\n    });\r\n    var FM = (function (opts, log) {\r\n        options$1 = opts;\r\n        logger = log;\r\n        return FileManager;\r\n    });\n\n    // TODO: Add tests for browser @plugin\r\n    /**\r\n     * Browser Plugin Loader\r\n     */\r\n    var PluginLoader = function (less) {\r\n        this.less = less;\r\n        // Should we shim this.require for browser? Probably not?\r\n    };\r\n    PluginLoader.prototype = Object.assign(new AbstractPluginLoader(), {\r\n        loadPlugin: function (filename, basePath, context, environment, fileManager) {\r\n            return new Promise(function (fulfill, reject) {\r\n                fileManager.loadFile(filename, basePath, context, environment)\r\n                    .then(fulfill).catch(reject);\r\n            });\r\n        }\r\n    });\n\n    var LogListener = (function (less, options) {\r\n        var logLevel_debug = 4;\r\n        var logLevel_info = 3;\r\n        var logLevel_warn = 2;\r\n        var logLevel_error = 1;\r\n        // The amount of logging in the javascript console.\r\n        // 3 - Debug, information and errors\r\n        // 2 - Information and errors\r\n        // 1 - Errors\r\n        // 0 - None\r\n        // Defaults to 2\r\n        options.logLevel = typeof options.logLevel !== 'undefined' ? options.logLevel : (options.env === 'development' ? logLevel_info : logLevel_error);\r\n        if (!options.loggers) {\r\n            options.loggers = [{\r\n                    debug: function (msg) {\r\n                        if (options.logLevel >= logLevel_debug) {\r\n                            console.log(msg);\r\n                        }\r\n                    },\r\n                    info: function (msg) {\r\n                        if (options.logLevel >= logLevel_info) {\r\n                            console.log(msg);\r\n                        }\r\n                    },\r\n                    warn: function (msg) {\r\n                        if (options.logLevel >= logLevel_warn) {\r\n                            console.warn(msg);\r\n                        }\r\n                    },\r\n                    error: function (msg) {\r\n                        if (options.logLevel >= logLevel_error) {\r\n                            console.error(msg);\r\n                        }\r\n                    }\r\n                }];\r\n        }\r\n        for (var i = 0; i < options.loggers.length; i++) {\r\n            less.logger.addListener(options.loggers[i]);\r\n        }\r\n    });\n\n    var ErrorReporting = (function (window, less, options) {\r\n        function errorHTML(e, rootHref) {\r\n            var id = \"less-error-message:\" + extractId(rootHref || '');\r\n            var template = '<li><label>{line}</label><pre class=\"{class}\">{content}</pre></li>';\r\n            var elem = window.document.createElement('div');\r\n            var timer;\r\n            var content;\r\n            var errors = [];\r\n            var filename = e.filename || rootHref;\r\n            var filenameNoPath = filename.match(/([^\\/]+(\\?.*)?)$/)[1];\r\n            elem.id = id;\r\n            elem.className = 'less-error-message';\r\n            content = \"<h3>\" + (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') +\r\n                (\"</h3><p>in <a href=\\\"\" + filename + \"\\\">\" + filenameNoPath + \"</a> \");\r\n            var errorline = function (e, i, classname) {\r\n                if (e.extract[i] !== undefined) {\r\n                    errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\r\n                        .replace(/\\{class\\}/, classname)\r\n                        .replace(/\\{content\\}/, e.extract[i]));\r\n                }\r\n            };\r\n            if (e.line) {\r\n                errorline(e, 0, '');\r\n                errorline(e, 1, 'line');\r\n                errorline(e, 2, '');\r\n                content += \"on line \" + e.line + \", column \" + (e.column + 1) + \":</p><ul>\" + errors.join('') + \"</ul>\";\r\n            }\r\n            if (e.stack && (e.extract || options.logLevel >= 4)) {\r\n                content += \"<br/>Stack Trace</br />\" + e.stack.split('\\n').slice(1).join('<br/>');\r\n            }\r\n            elem.innerHTML = content;\r\n            // CSS for error messages\r\n            browser.createCSS(window.document, [\r\n                '.less-error-message ul, .less-error-message li {',\r\n                'list-style-type: none;',\r\n                'margin-right: 15px;',\r\n                'padding: 4px 0;',\r\n                'margin: 0;',\r\n                '}',\r\n                '.less-error-message label {',\r\n                'font-size: 12px;',\r\n                'margin-right: 15px;',\r\n                'padding: 4px 0;',\r\n                'color: #cc7777;',\r\n                '}',\r\n                '.less-error-message pre {',\r\n                'color: #dd6666;',\r\n                'padding: 4px 0;',\r\n                'margin: 0;',\r\n                'display: inline-block;',\r\n                '}',\r\n                '.less-error-message pre.line {',\r\n                'color: #ff0000;',\r\n                '}',\r\n                '.less-error-message h3 {',\r\n                'font-size: 20px;',\r\n                'font-weight: bold;',\r\n                'padding: 15px 0 5px 0;',\r\n                'margin: 0;',\r\n                '}',\r\n                '.less-error-message a {',\r\n                'color: #10a',\r\n                '}',\r\n                '.less-error-message .error {',\r\n                'color: red;',\r\n                'font-weight: bold;',\r\n                'padding-bottom: 2px;',\r\n                'border-bottom: 1px dashed red;',\r\n                '}'\r\n            ].join('\\n'), { title: 'error-message' });\r\n            elem.style.cssText = [\r\n                'font-family: Arial, sans-serif',\r\n                'border: 1px solid #e00',\r\n                'background-color: #eee',\r\n                'border-radius: 5px',\r\n                '-webkit-border-radius: 5px',\r\n                '-moz-border-radius: 5px',\r\n                'color: #e00',\r\n                'padding: 15px',\r\n                'margin-bottom: 15px'\r\n            ].join(';');\r\n            if (options.env === 'development') {\r\n                timer = setInterval(function () {\r\n                    var document = window.document;\r\n                    var body = document.body;\r\n                    if (body) {\r\n                        if (document.getElementById(id)) {\r\n                            body.replaceChild(elem, document.getElementById(id));\r\n                        }\r\n                        else {\r\n                            body.insertBefore(elem, body.firstChild);\r\n                        }\r\n                        clearInterval(timer);\r\n                    }\r\n                }, 10);\r\n            }\r\n        }\r\n        function removeErrorHTML(path) {\r\n            var node = window.document.getElementById(\"less-error-message:\" + extractId(path));\r\n            if (node) {\r\n                node.parentNode.removeChild(node);\r\n            }\r\n        }\r\n        function removeError(path) {\r\n            if (!options.errorReporting || options.errorReporting === 'html') {\r\n                removeErrorHTML(path);\r\n            }\r\n            else if (options.errorReporting === 'console') ;\r\n            else if (typeof options.errorReporting === 'function') {\r\n                options.errorReporting('remove', path);\r\n            }\r\n        }\r\n        function errorConsole(e, rootHref) {\r\n            var template = '{line} {content}';\r\n            var filename = e.filename || rootHref;\r\n            var errors = [];\r\n            var content = (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') + \" in \" + filename;\r\n            var errorline = function (e, i, classname) {\r\n                if (e.extract[i] !== undefined) {\r\n                    errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\r\n                        .replace(/\\{class\\}/, classname)\r\n                        .replace(/\\{content\\}/, e.extract[i]));\r\n                }\r\n            };\r\n            if (e.line) {\r\n                errorline(e, 0, '');\r\n                errorline(e, 1, 'line');\r\n                errorline(e, 2, '');\r\n                content += \" on line \" + e.line + \", column \" + (e.column + 1) + \":\\n\" + errors.join('\\n');\r\n            }\r\n            if (e.stack && (e.extract || options.logLevel >= 4)) {\r\n                content += \"\\nStack Trace\\n\" + e.stack;\r\n            }\r\n            less.logger.error(content);\r\n        }\r\n        function error(e, rootHref) {\r\n            if (!options.errorReporting || options.errorReporting === 'html') {\r\n                errorHTML(e, rootHref);\r\n            }\r\n            else if (options.errorReporting === 'console') {\r\n                errorConsole(e, rootHref);\r\n            }\r\n            else if (typeof options.errorReporting === 'function') {\r\n                options.errorReporting('add', e, rootHref);\r\n            }\r\n        }\r\n        return {\r\n            add: error,\r\n            remove: removeError\r\n        };\r\n    });\n\n    // Cache system is a bit outdated and could do with work\r\n    var Cache = (function (window, options, logger) {\r\n        var cache = null;\r\n        if (options.env !== 'development') {\r\n            try {\r\n                cache = (typeof window.localStorage === 'undefined') ? null : window.localStorage;\r\n            }\r\n            catch (_) { }\r\n        }\r\n        return {\r\n            setCSS: function (path, lastModified, modifyVars, styles) {\r\n                if (cache) {\r\n                    logger.info(\"saving \" + path + \" to cache.\");\r\n                    try {\r\n                        cache.setItem(path, styles);\r\n                        cache.setItem(path + \":timestamp\", lastModified);\r\n                        if (modifyVars) {\r\n                            cache.setItem(path + \":vars\", JSON.stringify(modifyVars));\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // TODO - could do with adding more robust error handling\r\n                        logger.error(\"failed to save \\\"\" + path + \"\\\" to local storage for caching.\");\r\n                    }\r\n                }\r\n            },\r\n            getCSS: function (path, webInfo, modifyVars) {\r\n                var css = cache && cache.getItem(path);\r\n                var timestamp = cache && cache.getItem(path + \":timestamp\");\r\n                var vars = cache && cache.getItem(path + \":vars\");\r\n                modifyVars = modifyVars || {};\r\n                vars = vars || \"{}\"; // if not set, treat as the JSON representation of an empty object\r\n                if (timestamp && webInfo.lastModified &&\r\n                    (new Date(webInfo.lastModified).valueOf() ===\r\n                        new Date(timestamp).valueOf()) &&\r\n                    JSON.stringify(modifyVars) === vars) {\r\n                    // Use local copy\r\n                    return css;\r\n                }\r\n            }\r\n        };\r\n    });\n\n    var ImageSize = (function () {\r\n        function imageSize() {\r\n            throw {\r\n                type: 'Runtime',\r\n                message: 'Image size functions are not supported in browser version of less'\r\n            };\r\n        }\r\n        var imageFunctions = {\r\n            'image-size': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            },\r\n            'image-width': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            },\r\n            'image-height': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            }\r\n        };\r\n        functionRegistry.addMultiple(imageFunctions);\r\n    });\n\n    //\r\n    var root = (function (window, options) {\r\n        var document = window.document;\r\n        var less = lessRoot();\r\n        less.options = options;\r\n        var environment = less.environment;\r\n        var FileManager = FM(options, less.logger);\r\n        var fileManager = new FileManager();\r\n        environment.addFileManager(fileManager);\r\n        less.FileManager = FileManager;\r\n        less.PluginLoader = PluginLoader;\r\n        LogListener(less, options);\r\n        var errors = ErrorReporting(window, less, options);\r\n        var cache = less.cache = options.cache || Cache(window, options, less.logger);\r\n        ImageSize(less.environment);\r\n        // Setup user functions - Deprecate?\r\n        if (options.functions) {\r\n            less.functions.functionRegistry.addMultiple(options.functions);\r\n        }\r\n        var typePattern = /^text\\/(x-)?less$/;\r\n        function clone(obj) {\r\n            var cloned = {};\r\n            for (var prop in obj) {\r\n                if (obj.hasOwnProperty(prop)) {\r\n                    cloned[prop] = obj[prop];\r\n                }\r\n            }\r\n            return cloned;\r\n        }\r\n        // only really needed for phantom\r\n        function bind(func, thisArg) {\r\n            var curryArgs = Array.prototype.slice.call(arguments, 2);\r\n            return function () {\r\n                var args = curryArgs.concat(Array.prototype.slice.call(arguments, 0));\r\n                return func.apply(thisArg, args);\r\n            };\r\n        }\r\n        function loadStyles(modifyVars) {\r\n            var styles = document.getElementsByTagName('style');\r\n            var style;\r\n            for (var i = 0; i < styles.length; i++) {\r\n                style = styles[i];\r\n                if (style.type.match(typePattern)) {\r\n                    var instanceOptions = clone(options);\r\n                    instanceOptions.modifyVars = modifyVars;\r\n                    var lessText = style.innerHTML || '';\r\n                    instanceOptions.filename = document.location.href.replace(/#.*$/, '');\r\n                    /* jshint loopfunc:true */\r\n                    // use closure to store current style\r\n                    less.render(lessText, instanceOptions, bind(function (style, e, result) {\r\n                        if (e) {\r\n                            errors.add(e, 'inline');\r\n                        }\r\n                        else {\r\n                            style.type = 'text/css';\r\n                            if (style.styleSheet) {\r\n                                style.styleSheet.cssText = result.css;\r\n                            }\r\n                            else {\r\n                                style.innerHTML = result.css;\r\n                            }\r\n                        }\r\n                    }, null, style));\r\n                }\r\n            }\r\n        }\r\n        function loadStyleSheet(sheet, callback, reload, remaining, modifyVars) {\r\n            var instanceOptions = clone(options);\r\n            addDataAttr(instanceOptions, sheet);\r\n            instanceOptions.mime = sheet.type;\r\n            if (modifyVars) {\r\n                instanceOptions.modifyVars = modifyVars;\r\n            }\r\n            function loadInitialFileCallback(loadedFile) {\r\n                var data = loadedFile.contents;\r\n                var path = loadedFile.filename;\r\n                var webInfo = loadedFile.webInfo;\r\n                var newFileInfo = {\r\n                    currentDirectory: fileManager.getPath(path),\r\n                    filename: path,\r\n                    rootFilename: path,\r\n                    rewriteUrls: instanceOptions.rewriteUrls\r\n                };\r\n                newFileInfo.entryPath = newFileInfo.currentDirectory;\r\n                newFileInfo.rootpath = instanceOptions.rootpath || newFileInfo.currentDirectory;\r\n                if (webInfo) {\r\n                    webInfo.remaining = remaining;\r\n                    var css = cache.getCSS(path, webInfo, instanceOptions.modifyVars);\r\n                    if (!reload && css) {\r\n                        webInfo.local = true;\r\n                        callback(null, css, data, sheet, webInfo, path);\r\n                        return;\r\n                    }\r\n                }\r\n                // TODO add tests around how this behaves when reloading\r\n                errors.remove(path);\r\n                instanceOptions.rootFileInfo = newFileInfo;\r\n                less.render(data, instanceOptions, function (e, result) {\r\n                    if (e) {\r\n                        e.href = path;\r\n                        callback(e);\r\n                    }\r\n                    else {\r\n                        cache.setCSS(sheet.href, webInfo.lastModified, instanceOptions.modifyVars, result.css);\r\n                        callback(null, result.css, data, sheet, webInfo, path);\r\n                    }\r\n                });\r\n            }\r\n            fileManager.loadFile(sheet.href, null, instanceOptions, environment)\r\n                .then(function (loadedFile) {\r\n                loadInitialFileCallback(loadedFile);\r\n            }).catch(function (err) {\r\n                console.log(err);\r\n                callback(err);\r\n            });\r\n        }\r\n        function loadStyleSheets(callback, reload, modifyVars) {\r\n            for (var i = 0; i < less.sheets.length; i++) {\r\n                loadStyleSheet(less.sheets[i], callback, reload, less.sheets.length - (i + 1), modifyVars);\r\n            }\r\n        }\r\n        function initRunningMode() {\r\n            if (less.env === 'development') {\r\n                less.watchTimer = setInterval(function () {\r\n                    if (less.watchMode) {\r\n                        fileManager.clearFileCache();\r\n                        loadStyleSheets(function (e, css, _, sheet, webInfo) {\r\n                            if (e) {\r\n                                errors.add(e, e.href || sheet.href);\r\n                            }\r\n                            else if (css) {\r\n                                browser.createCSS(window.document, css, sheet);\r\n                            }\r\n                        });\r\n                    }\r\n                }, options.poll);\r\n            }\r\n        }\r\n        //\r\n        // Watch mode\r\n        //\r\n        less.watch = function () {\r\n            if (!less.watchMode) {\r\n                less.env = 'development';\r\n                initRunningMode();\r\n            }\r\n            this.watchMode = true;\r\n            return true;\r\n        };\r\n        less.unwatch = function () { clearInterval(less.watchTimer); this.watchMode = false; return false; };\r\n        //\r\n        // Synchronously get all <link> tags with the 'rel' attribute set to\r\n        // \"stylesheet/less\".\r\n        //\r\n        less.registerStylesheetsImmediately = function () {\r\n            var links = document.getElementsByTagName('link');\r\n            less.sheets = [];\r\n            for (var i = 0; i < links.length; i++) {\r\n                if (links[i].rel === 'stylesheet/less' || (links[i].rel.match(/stylesheet/) &&\r\n                    (links[i].type.match(typePattern)))) {\r\n                    less.sheets.push(links[i]);\r\n                }\r\n            }\r\n        };\r\n        //\r\n        // Asynchronously get all <link> tags with the 'rel' attribute set to\r\n        // \"stylesheet/less\", returning a Promise.\r\n        //\r\n        less.registerStylesheets = function () { return new Promise(function (resolve, reject) {\r\n            less.registerStylesheetsImmediately();\r\n            resolve();\r\n        }); };\r\n        //\r\n        // With this function, it's possible to alter variables and re-render\r\n        // CSS without reloading less-files\r\n        //\r\n        less.modifyVars = function (record) { return less.refresh(true, record, false); };\r\n        less.refresh = function (reload, modifyVars, clearFileCache) {\r\n            if ((reload || clearFileCache) && clearFileCache !== false) {\r\n                fileManager.clearFileCache();\r\n            }\r\n            return new Promise(function (resolve, reject) {\r\n                var startTime;\r\n                var endTime;\r\n                var totalMilliseconds;\r\n                var remainingSheets;\r\n                startTime = endTime = new Date();\r\n                // Set counter for remaining unprocessed sheets\r\n                remainingSheets = less.sheets.length;\r\n                if (remainingSheets === 0) {\r\n                    endTime = new Date();\r\n                    totalMilliseconds = endTime - startTime;\r\n                    less.logger.info('Less has finished and no sheets were loaded.');\r\n                    resolve({\r\n                        startTime: startTime,\r\n                        endTime: endTime,\r\n                        totalMilliseconds: totalMilliseconds,\r\n                        sheets: less.sheets.length\r\n                    });\r\n                }\r\n                else {\r\n                    // Relies on less.sheets array, callback seems to be guaranteed to be called for every element of the array\r\n                    loadStyleSheets(function (e, css, _, sheet, webInfo) {\r\n                        if (e) {\r\n                            errors.add(e, e.href || sheet.href);\r\n                            reject(e);\r\n                            return;\r\n                        }\r\n                        if (webInfo.local) {\r\n                            less.logger.info(\"Loading \" + sheet.href + \" from cache.\");\r\n                        }\r\n                        else {\r\n                            less.logger.info(\"Rendered \" + sheet.href + \" successfully.\");\r\n                        }\r\n                        browser.createCSS(window.document, css, sheet);\r\n                        less.logger.info(\"CSS for \" + sheet.href + \" generated in \" + (new Date() - endTime) + \"ms\");\r\n                        // Count completed sheet\r\n                        remainingSheets--;\r\n                        // Check if the last remaining sheet was processed and then call the promise\r\n                        if (remainingSheets === 0) {\r\n                            totalMilliseconds = new Date() - startTime;\r\n                            less.logger.info(\"Less has finished. CSS generated in \" + totalMilliseconds + \"ms\");\r\n                            resolve({\r\n                                startTime: startTime,\r\n                                endTime: endTime,\r\n                                totalMilliseconds: totalMilliseconds,\r\n                                sheets: less.sheets.length\r\n                            });\r\n                        }\r\n                        endTime = new Date();\r\n                    }, reload, modifyVars);\r\n                }\r\n                loadStyles(modifyVars);\r\n            });\r\n        };\r\n        less.refreshStyles = loadStyles;\r\n        return less;\r\n    });\n\n    /**\r\n     * Kicks off less and compiles any stylesheets\r\n     * used in the browser distributed version of less\r\n     * to kick-start less using the browser api\r\n     */\r\n    var options = defaultOptions();\r\n    if (window.less) {\r\n        for (var key in window.less) {\r\n            if (window.less.hasOwnProperty(key)) {\r\n                options[key] = window.less[key];\r\n            }\r\n        }\r\n    }\r\n    addDefaultOptions(window, options);\r\n    options.plugins = options.plugins || [];\r\n    if (window.LESS_PLUGINS) {\r\n        options.plugins = options.plugins.concat(window.LESS_PLUGINS);\r\n    }\r\n    var less = root(window, options);\r\n    window.less = less;\r\n    var css;\r\n    var head;\r\n    var style;\r\n    // Always restore page visibility\r\n    function resolveOrReject(data) {\r\n        if (data.filename) {\r\n            console.warn(data);\r\n        }\r\n        if (!options.async) {\r\n            head.removeChild(style);\r\n        }\r\n    }\r\n    if (options.onReady) {\r\n        if (/!watch/.test(window.location.hash)) {\r\n            less.watch();\r\n        }\r\n        // Simulate synchronous stylesheet loading by hiding page rendering\r\n        if (!options.async) {\r\n            css = 'body { display: none !important }';\r\n            head = document.head || document.getElementsByTagName('head')[0];\r\n            style = document.createElement('style');\r\n            style.type = 'text/css';\r\n            if (style.styleSheet) {\r\n                style.styleSheet.cssText = css;\r\n            }\r\n            else {\r\n                style.appendChild(document.createTextNode(css));\r\n            }\r\n            head.appendChild(style);\r\n        }\r\n        less.registerStylesheetsImmediately();\r\n        less.pageLoadFinished = less.refresh(less.env === 'development').then(resolveOrReject, resolveOrReject);\r\n    }\n\n    return less;\n\n})));\n"],"names":["normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat","exports","isCallable","tryToString","$TypeError","TypeError","module","argument","isObject","$String","String","toIndexedObject","toAbsoluteIndex","lengthOfArrayLike","createMethod","IS_INCLUDES","$this","el","fromIndex","value","O","length","index","includes","indexOf","DESCRIPTORS","isArray","getOwnPropertyDescriptor","Object","SILENT_ON_NON_WRITABLE_LENGTH_SET","undefined","defineProperty","writable","error","uncurryThis","toString","stringSlice","slice","it","hasOwn","ownKeys","getOwnPropertyDescriptorModule","definePropertyModule","target","source","exceptions","keys","f","i","key","createPropertyDescriptor","object","bitmap","enumerable","configurable","makeBuiltIn","defineGlobalProperty","simple","name","global","unsafe","nonConfigurable","nonWritable","fails","get","documentAll","document","all","IS_HTMLDDA","EXISTS","createElement","MAX_SAFE_INTEGER","navigator","userAgent","match","version","process","Deno","versions","v8","split","createNonEnumerableProperty","defineBuiltIn","copyConstructorProperties","isForced","FORCED","targetProperty","sourceProperty","descriptor","TARGET","GLOBAL","STATIC","stat","prototype","dontCallGetSet","forced","sham","exec","test","bind","hasOwnProperty","NATIVE_BIND","Function","apply","arguments","FunctionPrototype","getDescriptor","PROPER","CONFIGURABLE","uncurryThisWithBind","fn","aFunction","namespace","method","aCallable","isNullOrUndefined","V","P","func","check","Math","globalThis","window","self","g","toObject","a","classof","$Object","propertyIsEnumerable","store","functionToString","inspectSource","set","has","NATIVE_WEAK_MAP","shared","sharedKey","hiddenKeys","OBJECT_ALREADY_INITIALIZED","WeakMap","enforce","getterFor","TYPE","state","type","metadata","facade","STATE","Array","$documentAll","replacement","feature","detection","data","normalize","POLYFILL","NATIVE","string","replace","toLowerCase","getBuiltIn","isPrototypeOf","USE_SYMBOL_AS_UID","$Symbol","toLength","obj","CONFIGURABLE_FUNCTION_NAME","InternalStateModule","enforceInternalState","getInternalState","join","CONFIGURABLE_LENGTH","TEMPLATE","getter","setter","arity","constructor","ceil","floor","trunc","x","n","IE8_DOM_DEFINE","V8_PROTOTYPE_DEFINE_BUG","anObject","toPropertyKey","$defineProperty","$getOwnPropertyDescriptor","ENUMERABLE","WRITABLE","Attributes","current","propertyIsEnumerableModule","internalObjectKeys","enumBugKeys","getOwnPropertyNames","getOwnPropertySymbols","push","names","result","$propertyIsEnumerable","NASHORN_BUG","input","pref","val","valueOf","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","uid","SHARED","IS_PURE","mode","copyright","license","V8_VERSION","symbol","Symbol","toIntegerOrInfinity","max","min","integer","IndexedObject","requireObjectCoercible","number","isSymbol","getMethod","ordinaryToPrimitive","wellKnownSymbol","TO_PRIMITIVE","exoticToPrim","toPrimitive","id","postfix","random","NATIVE_SYMBOL","iterator","WellKnownSymbolsStore","createWellKnownSymbol","withoutSetter","$","setArrayLength","doesNotExceedSafeInteger","INCORRECT_TO_LENGTH","properErrorOnNonWritableLength","proto","item","len","argCount","factory","defaultOptions","javascriptEnabled","depends","compress","lint","paths","color","strictImports","insecure","rootpath","rewriteUrls","math","strictUnits","globalVars","modifyVars","urlArgs","extractId","href","addDataAttr","tag","opt","dataset","JSON","parse","_","browser","createCSS","styles","sheet","title","oldStyleNode","getElementById","keepOldStyleNode","styleNode","setAttribute","media","styleSheet","appendChild","createTextNode","childNodes","firstChild","nodeValue","head","getElementsByTagName","nextEl","nextSibling","parentNode","insertBefore","removeChild","cssText","e","Error","currentScript","scripts","addDefaultOptions","isFileProtocol","location","protocol","async","fileAsync","poll","env","hostname","port","dumpLineNumbers","hash","useFileCache","onReady","relativeUrls","logger$1","msg","_fireEvent","warn","info","debug","addListener","listener","_listeners","removeListener","splice","logFunction","Environment","externalEnvironment","fileManagers","optionalFunctions","requiredFunctions","functions","propName","environmentFunc","getFileManager","filename","currentDirectory","environment","isSync","pluginManager","getFileManagers","fileManager","addFileManager","clearFileManagers","colors","unitConversions","duration","angle","PI","Node","visibilityBlocks","nodeVisible","rootNode","parsed","fileInfo","getIndex","setParent","nodes","node","forEach","_index","_fileInfo","isRulesetLike","toCSS","strs","genCSS","chunk","isEmpty","output","accept","visitor","visit","eval","_operate","op","b","fround","precision","numPrecision","Number","toFixed","compare","numericCompare","blocksVisibility","addVisibilityBlock","removeVisibilityBlock","ensureVisibility","ensureInvisibility","isVisible","visibilityInfo","copyVisibilityInfo","Color","rgb","originalForm","map","c","parseInt","alpha","clamp$1","v","toHex","round","assign","luma","r","pow","doNotCompress","colorFunction","args","toHSL","s","l","toRGB","splitcolor","operate","other","d","toHSV","toARGB","fromKeyword","keyword","Paren","_noSpaceCombinators","Combinator","emptyOrWhitespace","trim","spaceOrEmpty","Element","combinator","isVariable","currentFileInfo","clone","firstSelector","charAt","Math$1","ALWAYS","PARENS_DIVISION","PARENS","RewriteUrls","OFF","LOCAL","ALL","getType","payload","isPlainObject","getPrototypeOf","__spreadArrays","il","k","j","jl","assignProp","carry","newVal","originalObject","includeNonenumerable","propType","copy","props","symbols","reduce","nonenumerable","getLocation","inputStream","line","column","copyArray","arr","cloned","prop","defaults","obj1","obj2","newObj","_defaults","defaults_1","copyOptions","opts","strictMath","merge","flattenArray","length_1","utils","freeze","__proto__","anonymousFunc","LessError","fileContentMap","currentFilename","message","stack","contents","loc","col","callLine","lines","found","lineAdjust","callExtract","extract","create","F","stylize","str","errorTxt","substr","Selector","elements","extendList","condition","evaldCondition","getElements","mixinElements_","visitArray","createDerived","newSelector","mediaEmpty","els","parseNode","err","imports","createEmptySelectors","sels","olen","mixinElements","shift","isJustParentSelector","extend","element","getIsOutput","Value","Keyword","True","False","Anonymous","mapLines","rulesetLike","allowRoot","Boolean","MATH$1","evalName","Declaration","important","inline","variable","asComment","ctx","debugInfo","lineNumber","fileName","asMediaQuery","filenameWithProtocol","lineSeparator","lastRule","prevMath","evaldValue","mathBypass","importantScope","importantResult","pop","makeImportant","Comment","isLineComment","isSilent","isCompressed","contexts","copyFromOriginal","original","destination","propertiesToCopy","parseCopyProperties","Parse","evalCopyProperties","isPathRelative","path","isPathLocalRelative","makeRegistry","base","_data","addMultiple","_this","getLocalFunctions","inherit","Eval","frames","enterCalc","calcStack","inCalc","exitCalc","inParenthesis","parensStack","outOfParenthesis","mathOn","isMathOn","pathRequiresRewrite","isRelative","rewritePath","newPath","normalizePath","segment","segments","reverse","functionRegistry","defaultFunc","value_","error_","reset","Ruleset","selectors","rules","_lookups","_variables","_properties","isRuleset","selCnt","selector","hasVariable","hasOnePassingSelector","toParseSelectors","rule","subRule","ruleset","originalRuleset","root","firstRoot","allowImports","ctxFrames","unshift","ctxSelectors","evalImports","rsRules","evalFirst","mediaBlockCount","mediaBlocks","filter","resetCache","bubbleSelectors","importRules","matchArgs","matchCondition","lastSelector","_rulesets","variables","vars","name_1","properties","name_2","decl","parseValue","property","lastDeclaration","toParse","transformDeclaration","nodes_1","rulesets","filtRules","prependRule","find","foundMixins","debugInfo$1","charsetRuleNodes","ruleNodes","tabLevel","sep","tabRuleStr","tabSetStr","charsetNodeIndex","importNodeIndex","isCharset","pathCnt","pathSubCnt","currentLastRule","joinSelectors","joinSelector","createParenthesis","elementsToPak","originalElement","replacementParen","insideParent","createSelector","containedElement","addReplacementIntoPath","beginningPath","addPath","replacedElement","originalSelector","newSelectorPath","newJoinedSelector","parentEl","restOfPath","addAllReplacementsIntoPath","addPaths","mergeElementsOnToSelectors","sel","replaceParentSelector","inSelector","currentElements","newSelectors","selectorsMultiplied","hadParentSelector","findNestedSelector","maybeSelector","nestedSelector","nestedPaths","replaced","replacedNewSelectors","replacementSelector","deriveSelector","deriveFrom","newPaths","concatenated","AtRule","isRooted","outputRuleset","mediaPathBackup","mediaBlocksBackup","mediaPath","ruleCnt","DetachedRuleset","callEval","Unit","numerator","denominator","backupUnit","sort","returnStr","is","unitString","toUpperCase","isLength","RegExp","isSingular","callback","usedUnits","group","mapUnit","groupName","atomicUnit","cancel","counter","count","Dimension","unit","parseFloat","isNaN","toColor","strValue","convertTo","unify","conversions","targetUnit","applyUnit","derivedConversions","MATH","Operation","operands","isSpaced","__spreadArray","to","from","pack","ar","Expression","noSpacing","returnValue","parens","doubleParen","parensInOp","throwAwayComments","functionCaller","isValid","evalArgs","commentFilter","subNodes","Call","calc","currentMathContext","funcCaller","columnNumber","Variable","evaluating","frame","fun","Property","mergeRules","less","visitors","ToCSSVisitor","_mergeRules","vArr","Attribute","cif","Quoted","content","escaped","quote","variableRegex","propRegex","escapePath","containsVariables","that","variableReplacement","propertyReplacement","iterativeReplace","regexp","replacementFnc","evaluatedValue","URL","isEvald","delimiter","Media","features","evalTop","evalNested","multiMedia","permute","fragment","rest","Import","css","pathValue","getPath","isPlugin","reference","isVariableImport","evalForImport","evalPath","doEval","registry","skip","importedFilename","newImport","JsEvalNode","evaluateJavaScript","expression","evalContext","jsify","toJS","JavaScript","Assignment","Condition","negate","lvalue","rvalue","UnicodeDescriptor","Negative","Extend","option","object_id","next_id","parent_ids","allowBefore","allowAfter","findSelfSelectors","selectorElements","selfElements","selfSelectors","VariableCall","detachedRuleset","NamespaceValue","ruleCall","lookups","substring","Definition","params","variadic","optionalParameters","required","p","evalParams","mixinEnv","evaldArguments","varargs","arg","isNamedFound","argIndex","argsLength","evalCall","_arguments","mixinFrames","allArgsCnt","requiredArgsCnt","MixinCall","mixins","mixin","mixinPath","argValue","m","isRecursive","isOneFound","candidate","defaultResult","noArgumentsFilter","candidates","conditionResult","defFalseEitherCase","defNone","defTrue","defFalse","calcDefGroup","expand","format","newRules","_setVisibilityToReplacement","tree","AbstractFileManager","lastIndexOf","tryAppendExtension","ext","tryAppendLessExtension","supportsSync","alwaysMakePathsAbsolute","isPathAbsolute","basePath","laterPath","pathDiff","url","baseUrl","urlDirectories","baseUrlDirectories","urlParts","extractUrlParts","baseUrlParts","diff","hostPart","directories","urlPartsRegex","returner","rawDirectories","rawPath","fileUrl","AbstractPluginLoader","require","evalPlugin","pluginOptions","loader","pluginObj","localModule","shortname","FileManager","trySetOptions","use","registerPlugin","validatePlugin","minVersion","compareVersion","addPlugin","plugin","setOptions","versionToString","aVersion","bVersion","versionString","printUsage","plugins","_visitArgs","visitDeeper","_hasIndexed","_noop","indexNodeTypes","ticker","child","typeIndex","Visitor","implementation","_implementation","_visitInCache","_visitOutCache","nodeTypeIndex","fnName","impl","funcOut","visitArgs","newNode","isReplacing","cnt","nonReplacing","out","evald","flatten","nestedCnt","nestedItem","ImportSequencer","onSequencerEmpty","variableImports","_onSequencerEmpty","_currentDepth","addImport","importSequencer","importItem","isReady","tryRun","addVariableImport","variableImport","ImportVisitor","importer","finish","_visitor","_importer","_finish","importCount","onceFileDetectionMap","recursionDetector","_sequencer","run","isFinished","visitImport","importNode","inlineCSS","importParent","processImportNode","evaldImportNode","multiple","importMultiple","onImported","sequencedOnImported","importedAtRoot","fullPath","importVisitor","isOptional","optional","duplicateImport","oldContext","visitDeclaration","declNode","visitDeclarationOut","visitAtRule","atRuleNode","visitAtRuleOut","visitMixinDefinition","mixinDefinitionNode","visitMixinDefinitionOut","visitRuleset","rulesetNode","visitRulesetOut","visitMedia","mediaNode","visitMediaOut","SetTreeVisibilityVisitor","visible","ExtendFinderVisitor","allExtendsStack","allExtends","allSelectorsExtendList","extendOnEveryPath","selectorPath","selExtendList","allSelectorsExtend","foundExtends","firstExtendOnThisSelectorPath","ProcessExtendsVisitor","extendFinder","extendIndices","doExtendChaining","newRoot","checkExtendsForNonMatched","indices","hasFoundMatches","extendsList","extendsListTarget","iterationCount","extendIndex","targetExtendIndex","matches","targetExtend","newExtend","extendsToAdd","extendVisitor","findMatch","selfSelector","extendSelector","extendChainCount","selectorOne","selectorTwo","ruleNode","visitSelector","selectorNode","pathIndex","selectorsToAdd","extendedSelectors","haystackSelectorPath","haystackSelectorIndex","hackstackSelector","hackstackElementIndex","haystackElement","targetCombinator","potentialMatch","needleElements","potentialMatches","matched","initialCombinator","isElementValuesEqual","finished","endPathIndex","endPathElementIndex","elementValue1","elementValue2","matchIndex","firstElement","newElements","currentSelectorPathIndex","currentSelectorPathElementIndex","currentValue","derived","newAllExtends","lastIndex","JoinSelectorVisitor","CSSVisitorUtils","_context","containsSilentNonBlockedChild","bodyRules","keepOnlyVisibleChilds","owner","thing","hasVisibleSelector","resolveVisibility","originalRules","compiledRulesBody","isVisibleRuleset","mixinNode","visitExtend","extendNode","visitComment","commentNode","visitAtRuleWithBody","visitAtRuleWithoutBody","visitAnonymous","anonymousNode","hasFakeRuleset","getBodyRules","nodeRules","charset","comment","checkValidNodes","isRoot","_compileRulesetPaths","nodeRuleCnt","_removeDuplicateRules","ruleList","ruleCache","ruleCSS","groups","groupsArr","result_1","space_1","comma_1","MarkVisibleSelectorsVisitor","ExtendVisitor","chunker","fail","lastOpening","lastOpeningParen","lastMultiComment","lastMultiCommentEndBrace","chunkerCurrentIndex","currentChunkStartIndex","cc","cc2","level","parenLevel","chunks","emitFrom","emitChunk","force","charCodeAt","fromCharCode","getParserInput","furthest","furthestPossibleErrorMessage","currentPos","saveStack","parserInput","CHARCODE_SPACE","CHARCODE_TAB","CHARCODE_LF","CHARCODE_CR","CHARCODE_PLUS","CHARCODE_COMMA","CHARCODE_FORWARD_SLASH","CHARCODE_9","skipWhitespace","nextChar","oldi","oldj","curr","endIndex","mem","inp","autoCommentAbsorb","nextNewLine","text","commentStore","nextStarSlash","save","restore","possibleErrorMessage","forget","isWhitespace","offset","pos","code","$re","tok","$char","$str","tokLength","$quoted","startChar","currentPosition","$parseUntil","testChar","returnVal","inComment","blockDepth","blockStack","parseGroups","startPos","lastPos","loop","char","expected","peek","peekChar","currentChar","prevChar","getInput","peekNotNumeric","start","chunkInput","failFunction","end","furthestReachedEnd","furthestChar","Parser","parsers","expect","expectChar","getDebugInfo","parseList","currentIndex","returnNodes","parser","endInfo","additionalData","ignored","preText","disablePluginRule","dir","serializeVars","preProcessors","getPreProcessors","banner","contentsIgnoredChars","primary","processImports","extendRule","definition","declaration","variableCall","entities","atrule","foundSemiColon","mixinLookup","quoted","forceEscaped","isEscaped","customFuncCall","stop","ieAlpha","boolean","prevArgs","isSemiColonSeparated","argsComma","argsSemiColon","assignment","literal","dimension","unicodeDescriptor","entity","ch","variableCurly","curly","propertyCurly","colorKeyword","ud","javascript","js","escape","jsQuote","parsedName","inValue","ruleLookups","isRule","getLookup","hasParens","elem","elemIndex","re","isCall","expressionContainsNamed","nameLoop","expressions","hasSep","cond","argInfo","conditions","block","lookupValue","attribute","slashedCombinator","isLess","when","blockRuleset","hasDR","ruleProperty","permissiveValue","anonymousValue","untilTokens","done","testCurrentChar","importOptions","mediaFeatures","o","optionName","importOption","mediaFeature","pluginArgs","nonVendorSpecificName","hasIdentifier","hasExpression","hasUnknown","hasBlock","sub","addition","multiplication","operation","operand","needsParens","logical","next","or","conditionAnd","insideCondition","negatedCondition","parenthesisCondition","atomicCondition","and","tryConditionFollowedByParenthesis","me","body","delim","simpleProperty","If","trueValue","falseValue","isdefined","colorFunctions","boolean$1","clamp","hsla","origColor","hsl","number$1","scaled","size","rgba","m1_1","m2_1","hue","hsv","hsva","vs","perm","saturation","lightness","hsvhue","hsvsaturation","hsvvalue","red","green","blue","luminance","saturate","amount","desaturate","lighten","darken","fadein","fadeout","fade","spin","mix","color1","color2","weight","w","w1","w2","greyscale","contrast","dark","light","threshold","t","argb","tint","shade","colorBlend","cb","cs","cr","ab","as","colorBlendModeFunctions","multiply","screen","overlay","softlight","sqrt","hardlight","difference","abs","exclusion","average","negation","f$1","dataUri","fallback","functionThis","mimetypeNode","filePathNode","mimetype","filePath","entryPath","fragmentStart","rawBuffer","useBase64","mimeLookup","charsetLookup","fileSync","loadFileSync","buf","encodeBase64","encodeURIComponent","uri","getItemsFromNode","items","list","_SELF","expr","_i","values","range","step","stepValue","each","rs","tryEval","valueName","keyName","indexName","MathHelper","mathFunctions","tan","sin","cos","atan","asin","acos","fraction","num","minMax","isMin","currentUnified","referenceUnified","unitStatic","unitClone","order","convert","pi","mod","y","percentage","evaluated","encodeURI","pattern","flags","_loop_1","token","svg","direction","stops","gradientDirectionSvg","position","positionValue","gradientType","rectangleDimension","renderEnv","directionValue","throwArgumentDescriptor","isa","Type","isunit","types","isruleset","iscolor","isnumber","isstring","iskeyword","isurl","ispixel","ispercentage","isem","transformTree","evaldRoot","evalEnv","visitorIterator","visitors$1","preEvalVisitors","first","isPreEvalVisitor","isPreVisitor","pm","PluginManager","postProcessors","installedPlugins","pluginCache","Loader","PluginLoader","addPlugins","install","addVisitor","addPreProcessor","preProcessor","priority","indexToInsertAt","addPostProcessor","postProcessor","manager","getPostProcessors","getVisitors","PluginManagerFactory","newFactory","SourceMapOutput","_css","_rootNode","_contentsMap","contentsMap","_contentsIgnoredCharsMap","contentsIgnoredCharsMap","sourceMapFilename","_sourceMapFilename","_outputFilename","outputFilename","sourceMapURL","sourceMapBasepath","_sourceMapBasepath","sourceMapRootpath","_sourceMapRootpath","_outputSourceFiles","outputSourceFiles","_sourceMapGeneratorConstructor","getSourceMapGenerator","_lineNumber","_column","removeBasepath","normalizeFilename","sourceLines","columns","sourceColumns","inputSource","_sourceMapGenerator","addMapping","generated","file","sourceRoot","setSourceContent","sourceMapContent","stringify","toJSON","sourceMap","SourceMapBuilder","sourceMapOutput","sourceMapOutputFilename","sourceMapGenerator","sourceMapFileInline","disableSourcemapAnnotation","sourceMapInputFilename","getCSSAppendage","getExternalSourceMap","setExternalSourceMap","isInline","getSourceMapURL","getOutputFilename","getInputFilename","ParseTree","sourceMapBuilder","toCSSOptions","files","rootFilename","ImportManager","rootFileInfo","mime","queue","importManager","pluginLoader","fileParsedFunc","importedEqualsRoot","newFileInfo","loadedFile","promise","loadFileCallback","resolvedFilename","newEnv","syncImport","loadPluginSync","loadPlugin","loadFile","then","self_1","Promise","resolve","reject","context_1","pluginManager_1","reUsePluginManager","imports_1","evalResult","fileContent","Render","parseTree","parseNodeVersion","res","major","minor","patch","pre","build","options$1","logger","parseNodeVersion_1","lessRoot","initial","ctor","api","fileCache","doXHR","errback","xhr","XMLHttpRequest","handleResponse","status","responseText","getResponseHeader","overrideMimeType","open","setRequestHeader","send","onreadystatechange","readyState","supports","clearFileCache","hrefParts","lessText","webInfo","lastModified","Date","FM","log","fulfill","catch","LogListener","logLevel_debug","logLevel_info","logLevel_warn","logLevel_error","logLevel","loggers","console","ErrorReporting","errorHTML","rootHref","timer","template","errors","filenameNoPath","className","errorline","classname","innerHTML","style","setInterval","replaceChild","clearInterval","removeErrorHTML","removeError","errorReporting","errorConsole","remove","Cache","cache","localStorage","setCSS","setItem","getCSS","getItem","timestamp","ImageSize","imageSize","imageFunctions","typePattern","thisArg","curryArgs","loadStyles","instanceOptions","loadStyleSheet","reload","remaining","loadInitialFileCallback","local","loadStyleSheets","sheets","initRunningMode","watchTimer","watchMode","watch","unwatch","registerStylesheetsImmediately","links","rel","registerStylesheets","record","refresh","startTime","endTime","totalMilliseconds","remainingSheets","refreshStyles","LESS_PLUGINS","resolveOrReject","pageLoadFinished"],"sourceRoot":""}