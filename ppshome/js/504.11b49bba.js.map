{"version":3,"file":"js/504.11b49bba.js","mappings":"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","sources":["webpack://ppshome/./src/views/github/index.vue","webpack://ppshome/src/views/github/index.vue","webpack://ppshome/./src/views/github/index.vue?4a8e","webpack://ppshome/./src/views/github/index.vue?50a4","webpack://ppshome/./src/utils/request.js","webpack://ppshome/./src/api/index.js","webpack://ppshome/./src/private/index.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('pps-card',[_c('pps-input',{attrs:{\"color\":\"white\",\"placeholder\":\"输入github用户名\",\"content\":_vm.keyword},on:{\"update:content\":function($event){_vm.keyword=$event}},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&$event.keyCode!==13)return null;return _vm.gitSendAjax.apply(null, arguments)}}},[_c('pps-button',{attrs:{\"type\":\"confirm\"},on:{\"click\":_vm.handleClear}},[_vm._v(\"重置\")]),_c('pps-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.gitSendAjax}},[_vm._v(\"查找\")])],1),_c('pps-avatar',{attrs:{\"href\":_vm.githubPart.content.href,\"src\":_vm.githubPart.content.avatar,\"defaultSrc\":\"https://qlogo4.store.qq.com/qzone/2969476145/2969476145/100\"}}),_vm._l((_vm.navList),function(item,index){return _c('pps-table-item',{key:index,attrs:{\"title\":item,\"content\":_vm.githubPart.infoList[index]}})})],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <!-- github信息卡片 -->\r\n  <pps-card>\r\n    <!-- 输入框 -->\r\n    <pps-input\r\n      color=\"white\"\r\n      placeholder=\"输入github用户名\"\r\n      :content.sync=\"keyword\"\r\n      @keyup.13.native=\"gitSendAjax\"\r\n    >\r\n      <pps-button type=\"confirm\" @click=\"handleClear\" >重置</pps-button>\r\n      <pps-button type=\"primary\" @click=\"gitSendAjax\" >查找</pps-button>\r\n    </pps-input>\r\n    <!-- 头像框 -->\r\n    <pps-avatar\r\n      :href=\"githubPart.content.href\"\r\n      :src=\"githubPart.content.avatar\"\r\n      defaultSrc=\"https://qlogo4.store.qq.com/qzone/2969476145/2969476145/100\"\r\n    ></pps-avatar>\r\n    <!-- 信息栏 -->\r\n    <pps-table-item\r\n      v-for=\"(item, index) of navList\"\r\n      :key=\"index\"\r\n      :title=\"item\"\r\n      :content=\"githubPart.infoList[index]\"\r\n    >\r\n    </pps-table-item>\r\n  </pps-card>\r\n</template>\r\n\r\n<script>\r\nimport { gitFilter } from \"@/private\";\r\nimport { getGithubInfoAPI } from \"@/api\";\r\nimport { mapGetters } from \"vuex\";\r\nexport default {\r\n  name: \"my-github\",\r\n  data() {\r\n    return {\r\n      keyword: \"\",\r\n      navList: [\r\n        { title: \"用户id\", haveToast: false },\r\n        { title: \"用户名\", haveToast: false },\r\n        { title: \"昵称\", haveToast: false },\r\n        {\r\n          title: \"静态页面\",\r\n          haveToast: true,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    async gitSendAjax() {\r\n      if (this.keyword === \"\") return this.$message.error(\"输入不能为空！\");\r\n      if (await gitFilter(this.keyword)) return false;\r\n      try {\r\n        const { data: res } = await getGithubInfoAPI(this.keyword);\r\n        if (res.code) return this.$message.error(res.message);\r\n        console.log(res);\r\n        const pages = `<a href=\"https://${res.login}.github.io\" target=\"_blank\">点击跳转</a>`;\r\n        const info = {\r\n          infoList: [res.id, res.login, res.name, pages],\r\n          content: { href: res.href, avatar: res.avatar },\r\n        };\r\n        this.$store.commit(\"updateGithub\", info);\r\n      } catch {\r\n        this.$message.error(\"接口请求失败！请尝试VPN\");\r\n      }\r\n      //#region\r\n      // this.ppsAjax({\r\n      //   url: `https://api.github.com/users/${this.gitPart.content.keyword}`,\r\n      //   method: 'get',\r\n      //   async: true,\r\n      //   success: ({ html_url, avatar_url, id, login, name }) => {\r\n      //     this.gitPart.infoList = [id, login, name];\r\n      //     this.gitPart.content.avatar = avatar_url;\r\n      //     this.gitPart.content.href = html_url;\r\n      //   },\r\n      //   error: (err) => {\r\n      //     console.error(`[pps warn]:${err}`);\r\n      //   },\r\n      // });\r\n      //#endregion\r\n    },\r\n    handleClear() {\r\n      this.$store.commit(\"updateGithub\", \"\");\r\n      this.keyword = \"\";\r\n    },\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"githubPart\"]),\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.pps-card {\r\n  width: 300px;\r\n  height: fit-content;\r\n  margin: 0 auto;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=6dc1fc69&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=6dc1fc69&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6dc1fc69\",\n  null\n  \n)\n\nexport default component.exports","import axios from 'axios'\r\n// import store from '@/store'\r\n\r\nconst myAxios = axios.create({\r\n    baseURL: 'https://pps-api.vercel.app',\r\n    // baseURL_f:'http://192.168.10.3:5000'\r\n    timeout:3000\r\n})\r\n\r\n// 请求拦截器\r\n// myAxios.interceptors.request.use(function (config) {\r\n//     if (store.state.token) {\r\n//       config.headers.Authorization = store.state.token\r\n//     }\r\n//     return config\r\n//   })\r\n\r\nmyAxios.interceptors.response.use(\r\n    function (response) {\r\n        return response\r\n    },\r\n    (error) => {\r\n        const baseURL = 'http://192.168.10.3:5000'\r\n        const url = error.config.url\r\n        const params = error.config.params\r\n        const delay = new Promise(function (resolve) {\r\n            resolve();\r\n        });\r\n        return delay.then(function () {\r\n            return myAxios({ baseURL: baseURL + url, params });\r\n        });\r\n\r\n    })\r\n\r\n\r\nexport default myAxios","import request from \"@/utils/request\";\r\n\r\n/**\r\n * 获取B站用户信息\r\n * @param {*} keyWord B站用户uid\r\n * @returns Promise对象\r\n */\r\nexport const getBiliInfoAPI = (keyword) => {\r\n  return request({\r\n    url: \"/api/bili\",\r\n    params: { keyword },\r\n  });\r\n};\r\n\r\n/**\r\n * 获取QQ用户信息\r\n * @param {*} keyWord QQ帐号\r\n * @returns 含两个Promise对象的数组\r\n */\r\nexport const getQqinfoAPI = (keyword) => {\r\n  return request({\r\n    url: '/api/qq',\r\n    params: { keyword }\r\n  });\r\n};\r\n\r\n/**\r\n * 获取github用户信息\r\n * @param {*} keyWord github用户名\r\n * @returns PRomise对象\r\n */\r\nexport const getGithubInfoAPI = (keyword) => {\r\n  return request({\r\n    url: `/api/github`,\r\n    params: { keyword }\r\n  })\r\n}\r\n\r\n/**\r\n * \r\n * @param {*} keyword \r\n * @param {*} page \r\n * @returns \r\n */\r\nexport const getBiliUserListAPI = (keyword, page, page_size, order, order_sort, user_type) => {\r\n  return request({\r\n    url: '/api/biliList',\r\n    params: {\r\n      keyword, page, page_size, order, order_sort, user_type\r\n    }\r\n  })\r\n}","import { MessageBox } from 'element-ui'\r\n\r\nconst data = '禁止查询作者的信息yo~';\r\n\r\nexport const qqFilter = (keyword) => {\r\n    if (keyword == '2606249268') {\r\n        try {\r\n            MessageBox.confirm(data, '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning',\r\n                lockScroll:false\r\n            })\r\n        } catch (error) {\r\n            alert(data)\r\n        }\r\n        return true;\r\n    }\r\n}\r\nexport const biliFilter = (keyword) => {\r\n    if (keyword == '388609984') {\r\n        try {\r\n            MessageBox.confirm(data, '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning',\r\n                lockScroll:false\r\n            })\r\n        } catch (error) {\r\n            alert(data)\r\n        }\r\n        return true;\r\n    }\r\n}\r\nexport const gitFilter = async (keyword) => {\r\n    if (keyword == 'spacepch') {\r\n        try {\r\n            MessageBox.confirm(data, '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning',\r\n                lockScroll:false\r\n            })\r\n        } catch (error) {\r\n            alert(data)\r\n        }\r\n        return true;\r\n    }\r\n} "],"names":["render","_vm","this","_c","_self","attrs","keyword","on","$event","nativeOn","type","indexOf","keyCode","gitSendAjax","apply","arguments","handleClear","_v","githubPart","content","href","avatar","_l","navList","item","index","key","infoList","staticRenderFns","name","data","title","haveToast","methods","$message","error","gitFilter","res","getGithubInfoAPI","code","message","console","log","pages","login","info","id","$store","commit","computed","mapGetters","component","myAxios","axios","baseURL","timeout","interceptors","response","use","url","config","params","delay","Promise","resolve","then","getBiliInfoAPI","request","getQqinfoAPI","getBiliUserListAPI","page","page_size","order","order_sort","user_type","qqFilter","MessageBox","confirm","confirmButtonText","cancelButtonText","lockScroll","alert","biliFilter","async"],"sourceRoot":""}