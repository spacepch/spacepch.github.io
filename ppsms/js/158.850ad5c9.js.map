{"version":3,"file":"js/158.850ad5c9.js","mappings":"8JAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,UAAU,CAACE,YAAY,YAAY,CAACF,EAAG,MAAM,CAACE,YAAY,WAAWC,MAAM,CAAC,KAAO,UAAUC,KAAK,UAAU,CAACJ,EAAG,OAAO,CAACF,EAAIO,GAAG,YAAYL,EAAG,MAAM,CAAGF,EAAIQ,OAAsIN,EAAG,MAAM,CAACE,YAAY,UAAUC,MAAM,CAAC,IAAML,EAAIQ,OAAO,IAAM,MAA5LN,EAAG,MAAM,CAACE,YAAY,UAAUC,MAAM,CAAC,IAAMI,EAAQ,MAAkC,IAAM,IAAIC,GAAG,CAAC,MAAQV,EAAIW,aAAiFT,EAAG,MAAM,CAACE,YAAY,WAAW,CAACF,EAAG,QAAQ,CAACU,IAAI,SAASC,YAAY,CAAC,QAAU,QAAQR,MAAM,CAAC,KAAO,OAAO,OAAS,WAAWK,GAAG,CAAC,OAASV,EAAIc,gBAAgBZ,EAAG,YAAY,CAACG,MAAM,CAAC,KAAO,UAAU,KAAO,gBAAgBK,GAAG,CAAC,MAAQV,EAAIW,YAAY,CAACX,EAAIO,GAAG,UAAUL,EAAG,YAAY,CAACG,MAAM,CAAC,KAAO,UAAU,KAAO,iBAAiB,SAA0B,KAAfL,EAAIQ,QAAeE,GAAG,CAAC,MAAQV,EAAIe,iBAAiB,CAACf,EAAIO,GAAG,WAAW,MAC90B,EACIS,EAAkB,G,UCoBtB,GACAC,KAAA,YACAC,OACA,OACAV,OAAA,GAEA,EACAW,QAAA,CACAR,YAEA,KAAAS,MAAAC,OAAAC,OACA,EACAR,aAAAS,GAEA,MAAAC,EAAAD,EAAAE,OAAAD,MACA,OAAAA,EAAAE,OAEA,KAAAlB,OAAA,OACA,CAEA,MAAAmB,EAAA,IAAAC,WACAD,EAAAE,cAAAL,EAAA,IACAG,EAAAG,OAAAP,IACA,KAAAf,OAAAe,EAAAE,OAAAM,MAAA,CAEA,CACA,EACAhB,kBACAiB,EAAAA,EAAAA,IAAA,KAAAxB,QAAAyB,MAAA,EAAAf,KAAAgB,MACA,GAAAA,EAAAC,KAAA,YAAAC,SAAAC,MAAAH,EAAAI,SACA,KAAAF,SAAAG,QAAAL,EAAAI,SACA,KAAAE,OAAAC,SAAA,wBAEA,ICvDmQ,I,UCQ/PC,GAAY,OACd,EACA3C,EACAiB,GACA,EACA,KACA,WACA,MAIF,EAAe0B,EAAiB,O","sources":["webpack://vue-event/./src/views/user/userAvatar.vue","webpack://vue-event/src/views/user/userAvatar.vue","webpack://vue-event/./src/views/user/userAvatar.vue?2ec6","webpack://vue-event/./src/views/user/userAvatar.vue?13d8"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('el-card',{staticClass:\"box-card\"},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"更换头像\")])]),_c('div',[(!_vm.avatar)?_c('img',{staticClass:\"the_img\",attrs:{\"src\":require(\"../../assets/images/avatar.jpg\"),\"alt\":\"\"},on:{\"click\":_vm.chooseImg}}):_c('img',{staticClass:\"the_img\",attrs:{\"src\":_vm.avatar,\"alt\":\"\"}}),_c('div',{staticClass:\"btn-box\"},[_c('input',{ref:\"iptRef\",staticStyle:{\"display\":\"none\"},attrs:{\"type\":\"file\",\"accept\":\"image/*\"},on:{\"change\":_vm.onFileChange}}),_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-plus\"},on:{\"click\":_vm.chooseImg}},[_vm._v(\"选择图片\")]),_c('el-button',{attrs:{\"type\":\"success\",\"icon\":\"el-icon-upload\",\"disabled\":_vm.avatar === ''},on:{\"click\":_vm.uploadAvatarFn}},[_vm._v(\"上传头像\")])],1)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <el-card class=\"box-card\">\r\n    <div slot=\"header\" class=\"clearfix\">\r\n      <span>更换头像</span>\r\n    </div>\r\n    <div>\r\n      <!-- 图片，用来展示用户选择的头像 -->\r\n      <img v-if=\"!avatar\" class=\"the_img\" @click=\"chooseImg\" src=\"../../assets/images/avatar.jpg\" alt=\"\" />\r\n      <img v-else class=\"the_img\" :src=\"avatar\" alt=\"\">\r\n\r\n      <!-- 按钮区域 -->\r\n      <div class=\"btn-box\">\r\n        <input type=\"file\" accept=\"image/*\" style=\"display: none\" ref=\"iptRef\" @change=\"onFileChange\" />\r\n        <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"chooseImg\">选择图片</el-button>\r\n        <el-button type=\"success\" icon=\"el-icon-upload\" @click=\"uploadAvatarFn\" :disabled=\"avatar === ''\">上传头像</el-button>\r\n      </div>\r\n    </div>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nimport { uploadUserAvatarAPI } from '@/api'\r\nexport default {\r\n  name: 'my-avatar',\r\n  data () {\r\n    return {\r\n      avatar: ''\r\n    }\r\n  },\r\n  methods: {\r\n    chooseImg () {\r\n    // 模拟点击行为\r\n      this.$refs.iptRef.click()\r\n    },\r\n    onFileChange (e) {\r\n    // 获取用户选择的文件列表（伪数组）\r\n      const files = e.target.files\r\n      if (files.length === 0) {\r\n      // 没有选择图片\r\n        this.avatar = ''\r\n      } else {\r\n      // 选择了图片\r\n        const fr = new FileReader()\r\n        fr.readAsDataURL(files[0])\r\n        fr.onload = e => {\r\n          this.avatar = e.target.result\r\n        }\r\n      }\r\n    },\r\n    uploadAvatarFn () {\r\n      uploadUserAvatarAPI(this.avatar).then(({ data: res }) => {\r\n        if (res.code) return this.$message.error(res.message)\r\n        this.$message.success(res.message)\r\n        this.$store.dispatch('getUserInfoActions')\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.btn-box {\r\n  margin-top: 10px;\r\n}\r\n.preview {\r\n  object-fit: cover;\r\n}\r\n.the_img{\r\n    width: 350px;\r\n    height: 350px;\r\n    cursor: pointer;\r\n}\r\n.the_img:hover{\r\n  filter: brightness(90%);\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./userAvatar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./userAvatar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./userAvatar.vue?vue&type=template&id=7d171725&scoped=true&\"\nimport script from \"./userAvatar.vue?vue&type=script&lang=js&\"\nexport * from \"./userAvatar.vue?vue&type=script&lang=js&\"\nimport style0 from \"./userAvatar.vue?vue&type=style&index=0&id=7d171725&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7d171725\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","slot","_v","avatar","require","on","chooseImg","ref","staticStyle","onFileChange","uploadAvatarFn","staticRenderFns","name","data","methods","$refs","iptRef","click","e","files","target","length","fr","FileReader","readAsDataURL","onload","result","uploadUserAvatarAPI","then","res","code","$message","error","message","success","$store","dispatch","component"],"sourceRoot":""}